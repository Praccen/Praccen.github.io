{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACO;AACA;AACA;AACP;AACA;AACA;AACA,WAAW,4CAA4C;AACvD;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjDwC;AACN;AACE;AACF;AACA;AACA;AACE;AACF;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTM;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,MAAM;AACnB;;AAEO;AACP,gBAAgB,kDAAmB;;AAEnC,MAAM,kDAAmB;AACzB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP,gBAAgB,kDAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;;AAEO;AACP,gBAAgB,kDAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA,iBAAiB;;AAEjB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,QAAQ;AACrB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,QAAQ;AACrB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,QAAQ;AACrB;;AAEO;AACP;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,SAAS;AACtB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,SAAS;AACtB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,+CAAgB,qEAAqE,+CAAgB,qEAAqE,+CAAgB,qEAAqE,+CAAgB;AAC7S;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEO;AACP;AACA,cAAc;AACd;AACA;;AAEO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/aiC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;;AAEO;AACP,gBAAgB,kDAAmB;;AAEnC,MAAM,kDAAmB;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,aAAa,OAAO;AACpB;;AAEO;AACP,gBAAgB,kDAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,aAAa,OAAO;AACpB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;;AAEO;AACP,gBAAgB,kDAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,aAAa,OAAO;AACpB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,aAAa,QAAQ;AACrB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,WAAW,eAAe;AAC1B,aAAa,OAAO;AACpB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,WAAW,cAAc;AACzB,aAAa,OAAO;AACpB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,WAAW,cAAc;AACzB,aAAa,OAAO;AACpB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB,aAAa,OAAO;AACpB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB,aAAa,OAAO;AACpB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,aAAa,QAAQ;AACrB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,aAAa,QAAQ;AACrB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,WAAW,eAAe;AAC1B,aAAa,OAAO;AACpB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,WAAW,eAAe;AAC1B,aAAa,OAAO;AACpB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,WAAW,eAAe;AAC1B,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,eAAe;AAC1B,aAAa,SAAS;AACtB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,eAAe;AAC1B,aAAa,SAAS;AACtB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,+CAAgB,qEAAqE,+CAAgB,qEAAqE,+CAAgB,qEAAqE,+CAAgB,qEAAqE,+CAAgB,qEAAqE,+CAAgB;AACvd;AACA;AACA,cAAc;AACd;AACA;;AAEO;AACP;AACA,cAAc;AACd;AACA;;AAEO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACreiC;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,MAAM;AACnB;;AAEO;AACP,gBAAgB,kDAAmB;;AAEnC,MAAM,kDAAmB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP,gBAAgB,kDAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;;AAEO;AACP,gBAAgB,kDAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;;AAEnC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,QAAQ;AACrB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,eAAe;AAC1B,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB;AACA,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB;AACA,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;;AAEnC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,QAAQ;AACrB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,QAAQ;AACrB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,SAAS;AACtB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,SAAS;AACtB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,+CAAgB,qEAAqE,+CAAgB,qEAAqE,+CAAgB,qEAAqE,+CAAgB,qEAAqE,+CAAgB,qEAAqE,+CAAgB,qEAAqE,+CAAgB,qEAAqE,+CAAgB,qEAAqE,+CAAgB;AACttB;AACA;AACA,cAAc;AACd;AACA;;AAEO;AACP;AACA,cAAc;AACd;AACA;;AAEO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzwBiC;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,MAAM;AACnB;;AAEO;AACP,gBAAgB,kDAAmB;;AAEnC,MAAM,kDAAmB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP,gBAAgB,kDAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;;AAEO;AACP,gBAAgB,kDAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;;AAEnC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,QAAQ;AACrB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;;AAEnC;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY,+CAAgB;AAC5B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;;AAEf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;;AAGJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;;AAGJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;;AAGJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEA,YAAY,+CAAgB;AAC5B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA,yBAAyB;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA,yBAAyB;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA,yBAAyB;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,eAAe;AAC1B,aAAa,MAAM;AACnB;;AAEO;AACP,wBAAwB,kDAAmB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;;AAEzD;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,MAAM;AAClB,YAAY,cAAc;AAC1B,YAAY,MAAM;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,MAAM;AAClB,YAAY,cAAc;AAC1B,YAAY,MAAM;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,YAAY,MAAM;AAClB;;AAEO;AACP,oBAAoB,kDAAmB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB;AACA,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAiC,+CAAgB,+BAA+B,+CAAgB,+BAA+B,+CAAgB;AAC/I;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,QAAQ;AACrB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,QAAQ;AACrB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,SAAS;AACtB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,SAAS;AACtB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,+CAAgB,qEAAqE,+CAAgB,qEAAqE,+CAAgB,qEAAqE,+CAAgB,qEAAqE,+CAAgB,qEAAqE,+CAAgB,qEAAqE,+CAAgB,qEAAqE,+CAAgB,qEAAqE,+CAAgB,qEAAqE,+CAAgB,uEAAuE,+CAAgB,yEAAyE,+CAAgB,yEAAyE,+CAAgB,yEAAyE,+CAAgB,yEAAyE,+CAAgB,yEAAyE,+CAAgB;AAC/zC;AACA;AACA,cAAc;AACd;AACA;;AAEO;AACP;AACA,cAAc;AACd;AACA;;AAEO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACr3DiC;AACN;AACA;AACA;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,MAAM;AACnB;;AAEO;AACP,gBAAgB,kDAAmB;;AAEnC,MAAM,kDAAmB;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,MAAM;AAClB,YAAY,cAAc;AAC1B,YAAY,YAAY;AACxB;;AAEO;AACP;AACA;;AAEA,UAAU,+CAAgB;AAC1B;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,cAAc;AAC1B,YAAY,cAAc;AAC1B,YAAY,YAAY;AACxB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;;AAE3C,iDAAiD;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;;AAGJ,oBAAoB,+CAAgB;AACpC;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;;;AAGJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA,WAAW,8CAAe;AAC1B,WAAW,8CAAe;AAC1B,WAAW,8CAAe;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,oCAAoC;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;AACA;;AAEO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA,qCAAqC;;AAErC;AACA,yBAAyB;;AAEzB;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,GAAG;AACd,WAAW,GAAG;AACd,WAAW,GAAG;AACd,aAAa,MAAM;AACnB;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,QAAQ;AACrB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;AACA;;AAEO,YAAY,2CAAU;AAC7B;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;AACA;;AAEO,iBAAiB,gDAAe;AACvC;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;AACA;;AAEO,WAAW,0CAAS;AAC3B;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;AACA;;AAEO,UAAU,yCAAQ;AACzB;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;AACA;;AAEO,UAAU,yCAAQ;AACzB;AACA,cAAc;AACd;AACA;;AAEO;AACP;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;AACA;;AAEO,YAAY,2CAAU;AAC7B;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,QAAQ;AACrB;AACA;;AAEO,UAAU,yCAAQ;AACzB;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;AACA;;AAEO,WAAW,0CAAS;AAC3B;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,QAAQ;AACrB;;AAEO,aAAa,4CAAW;AAC/B;AACA,cAAc;AACd;AACA;;AAEO;AACP;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,QAAQ;AACrB;AACA;;AAEO,oBAAoB,mDAAkB;AAC7C;AACA,cAAc;AACd;AACA;;AAEO;AACP;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;AACA;;AAEO,gBAAgB,+CAAc;AACrC;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,SAAS;AACtB;;AAEO,kBAAkB,iDAAgB;AACzC;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,SAAS;AACtB;;AAEO,aAAa,4CAAW;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP,gBAAgB,4CAAW;AAC3B,kBAAkB,gDAAe;AACjC,kBAAkB,gDAAe;AACjC;AACA,cAAc,yCAAQ;;AAEtB;AACA,MAAM,2CAAU;AAChB,UAAU,yCAAQ,sBAAsB,2CAAU;AAClD,MAAM,+CAAc;AACpB;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,MAAM,2CAAU;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP,aAAa,4CAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrsBuC;AACN;AACA;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;;AAEO;AACP,eAAe,kDAAmB;;AAElC,MAAM,kDAAmB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,aAAa,OAAO;AACpB;AACA;;AAEO;AACP,eAAe,kDAAmB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;;AAEO;AACP,eAAe,kDAAmB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;;AAEO;AACP,eAAe,kDAAmB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,OAAO;AACpB;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,cAAc;AACzB,aAAa,OAAO;AACpB;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,cAAc;AACzB,aAAa,OAAO;AACpB;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB,aAAa,OAAO;AACpB;AACA;;AAEO;AACP;AACA,cAAc,4CAAW;AACzB,EAAE,iDAAgB;AAClB,cAAc,kDAAmB;AACjC,EAAE,oDAAmB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,aAAa,OAAO;AACpB;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,MAAM;AAClB,YAAY,eAAe;AAC3B,YAAY,MAAM;AAClB;;AAEO,cAAc,0CAAS;AAC9B;AACA;AACA,YAAY,MAAM;AAClB,YAAY,eAAe;AAC3B,YAAY,MAAM;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB,aAAa,OAAO;AACpB;AACA;;AAEO,cAAc,0CAAS;AAC9B;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB,aAAa,OAAO;AACpB;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,MAAM;AAClB,YAAY,eAAe;AAC3B,YAAY,MAAM;AAClB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,WAAW,cAAc;AACzB,aAAa,OAAO;AACpB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,6CAAY;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,6CAAY;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,6CAAY;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,WAAW,cAAc;AACzB,aAAa,OAAO;AACpB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB,WAAW,eAAe;AAC1B,aAAa,OAAO;AACpB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;;AAEO;AACP;AACA,sBAAsB,+CAAgB;AACtC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,WAAW,eAAe;AAC1B,aAAa,OAAO;AACpB;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,WAAW,eAAe;AAC1B,aAAa,OAAO;AACpB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEO;AACP;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,eAAe;AAC1B,aAAa,QAAQ;AACrB;AACA;;AAEO,UAAU,yCAAQ;AACzB;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,WAAW,eAAe;AAC1B,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,aAAa,OAAO;AACpB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,aAAa,OAAO;AACpB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,aAAa,QAAQ;AACrB;AACA;;AAEO,aAAa,4CAAW;AAC/B;AACA,cAAc;AACd;AACA;;AAEO;AACP;AACA;AACA;AACA,WAAW,eAAe;AAC1B,aAAa,QAAQ;AACrB;AACA;;AAEO,oBAAoB,mDAAkB;AAC7C;AACA,cAAc;AACd;AACA;;AAEO;AACP;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,aAAa,OAAO;AACpB;AACA;;AAEO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,aAAa,QAAQ;AACrB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,eAAe;AAC1B,aAAa,SAAS;AACtB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,eAAe;AAC1B,aAAa,SAAS;AACtB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,+CAAgB,qEAAqE,+CAAgB,qEAAqE,+CAAgB,qEAAqE,+CAAgB,qEAAqE,+CAAgB,qEAAqE,+CAAgB,qEAAqE,+CAAgB,qEAAqE,+CAAgB;AACjoB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACl0BwC;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,MAAM;AACnB;;AAEO;AACP,gBAAgB,kDAAmB;;AAEnC,MAAM,kDAAmB;AACzB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP,gBAAgB,kDAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;;AAEO;AACP,gBAAgB,kDAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,QAAQ;AACrB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,QAAQ;AACrB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,QAAQ;AACrB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,QAAQ;AACrB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,QAAQ;AACrB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA,UAAU,8CAAe;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,eAAe;AAC1B,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA,4BAA4B;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,QAAQ;AACrB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;;AAE7C;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,QAAQ;AACrB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,SAAS;AACtB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,SAAS;AACtB;;AAEO;AACP;AACA;AACA;AACA;AACA,8BAA8B,+CAAgB,qEAAqE,+CAAgB;AACnI;AACA;AACA,cAAc;AACd;AACA;;AAEO;AACP;AACA,cAAc;AACd;AACA;;AAEO;AACP;AACA,cAAc;AACd;AACA;;AAEO;AACP;AACA,cAAc;AACd;AACA;;AAEO;AACP;AACA,cAAc;AACd;AACA;;AAEO;AACP;AACA,cAAc;AACd;AACA;;AAEO;AACP;AACA,cAAc;AACd;AACA;;AAEO;AACP;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;;AAEO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/mBuC;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,MAAM;AACnB;;AAEO;AACP,gBAAgB,kDAAmB;;AAEnC,MAAM,kDAAmB;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP,gBAAgB,kDAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,QAAQ;AACrB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;;AAEO;AACP,gBAAgB,kDAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,QAAQ;AACrB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,QAAQ;AACrB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,QAAQ;AACrB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,QAAQ;AACrB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA,UAAU,8CAAe;AACzB,UAAU,8CAAe;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA;AACA;AACA,6BAA6B;;AAE7B;AACA;AACA,kCAAkC;;AAElC;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA,cAAc;;AAEd;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA,sDAAsD;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA,cAAc;;AAEd;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA,sDAAsD;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA,cAAc;;AAEd;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA,eAAe;;AAEf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,QAAQ;AACrB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,QAAQ;AACrB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,SAAS;AACtB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,SAAS;AACtB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,+CAAgB,qEAAqE,+CAAgB,qEAAqE,+CAAgB;AACxN;AACA;AACA,cAAc;AACd;AACA;;AAEO;AACP;AACA,cAAc;AACd;AACA;;AAEO;AACP;AACA,cAAc;AACd;AACA;;AAEO;AACP;AACA,cAAc;AACd;AACA;;AAEO;AACP;AACA,cAAc;AACd;AACA;;AAEO;AACP;AACA,cAAc;AACd;AACA;;AAEO;AACP;AACA,cAAc;AACd;AACA;;AAEO;AACP;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;;AAEO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClxBuC;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,MAAM;AACnB;;AAEO;AACP,gBAAgB,kDAAmB;;AAEnC,MAAM,kDAAmB;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP,gBAAgB,kDAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;;AAEO;AACP,gBAAgB,kDAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,QAAQ;AACrB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,QAAQ;AACrB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,QAAQ;AACrB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,QAAQ;AACrB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,QAAQ;AACrB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB;;AAEO;AACP,wBAAwB;AACxB;AACA;;AAEA;AACA;;AAEA;AACA,SAAS,8CAAe;AACxB,SAAS,8CAAe;AACxB;AACA,IAAI;;AAEJ;AACA,SAAS,8CAAe;AACxB,SAAS,8CAAe;AACxB;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa,MAAM;AACnB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA,sCAAsC;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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","sources":["webpack://my-webpack-project/./node_modules/gl-matrix/esm/common.js","webpack://my-webpack-project/./node_modules/gl-matrix/esm/index.js","webpack://my-webpack-project/./node_modules/gl-matrix/esm/mat2.js","webpack://my-webpack-project/./node_modules/gl-matrix/esm/mat2d.js","webpack://my-webpack-project/./node_modules/gl-matrix/esm/mat3.js","webpack://my-webpack-project/./node_modules/gl-matrix/esm/mat4.js","webpack://my-webpack-project/./node_modules/gl-matrix/esm/quat.js","webpack://my-webpack-project/./node_modules/gl-matrix/esm/quat2.js","webpack://my-webpack-project/./node_modules/gl-matrix/esm/vec2.js","webpack://my-webpack-project/./node_modules/gl-matrix/esm/vec3.js","webpack://my-webpack-project/./node_modules/gl-matrix/esm/vec4.js","webpack://my-webpack-project/./code/index.ts","webpack://my-webpack-project/./code/src/Engine/AssetHandling/MeshStore.ts","webpack://my-webpack-project/./code/src/Engine/AssetHandling/TextureStore.ts","webpack://my-webpack-project/./code/src/Engine/Audio/AudioPlayer.ts","webpack://my-webpack-project/./code/src/Engine/ECS/Components/BoundingBoxComponent.ts","webpack://my-webpack-project/./code/src/Engine/ECS/Components/CollisionComponent.ts","webpack://my-webpack-project/./code/src/Engine/ECS/Components/Component.ts","webpack://my-webpack-project/./code/src/Engine/ECS/Components/GraphicsComponent.ts","webpack://my-webpack-project/./code/src/Engine/ECS/Components/MeshCollisionComponent.ts","webpack://my-webpack-project/./code/src/Engine/ECS/Components/MovementComponent.ts","webpack://my-webpack-project/./code/src/Engine/ECS/Components/PointLightComponent.ts","webpack://my-webpack-project/./code/src/Engine/ECS/Components/PositionComponent.ts","webpack://my-webpack-project/./code/src/Engine/ECS/ECSManager.ts","webpack://my-webpack-project/./code/src/Engine/ECS/Entity.ts","webpack://my-webpack-project/./code/src/Engine/ECS/Systems/CameraFocusSystem.ts","webpack://my-webpack-project/./code/src/Engine/ECS/Systems/CollisionSystem.ts","webpack://my-webpack-project/./code/src/Engine/ECS/Systems/GraphicsSystem.ts","webpack://my-webpack-project/./code/src/Engine/ECS/Systems/MovementSystem.ts","webpack://my-webpack-project/./code/src/Engine/ECS/Systems/ParticleSpawnerSystem.ts","webpack://my-webpack-project/./code/src/Engine/ECS/Systems/PositionMatrixUpdateSystem.ts","webpack://my-webpack-project/./code/src/Engine/ECS/Systems/System.ts","webpack://my-webpack-project/./code/src/Engine/Input/Input.ts","webpack://my-webpack-project/./code/src/Engine/Maths/MousePicking.ts","webpack://my-webpack-project/./code/src/Engine/Maths/SAT.ts","webpack://my-webpack-project/./code/src/Engine/Objects/Camera.ts","webpack://my-webpack-project/./code/src/Engine/Objects/GraphicsBundle.ts","webpack://my-webpack-project/./code/src/Engine/Objects/GraphicsObjects/GodRayPlanes.ts","webpack://my-webpack-project/./code/src/Engine/Objects/GraphicsObjects/GraphicsObject.ts","webpack://my-webpack-project/./code/src/Engine/Objects/GraphicsObjects/GrassSpawner.ts","webpack://my-webpack-project/./code/src/Engine/Objects/GraphicsObjects/Heightmap.ts","webpack://my-webpack-project/./code/src/Engine/Objects/GraphicsObjects/Mesh.ts","webpack://my-webpack-project/./code/src/Engine/Objects/GraphicsObjects/ParticleSpawner.ts","webpack://my-webpack-project/./code/src/Engine/Objects/GraphicsObjects/PhongQuad.ts","webpack://my-webpack-project/./code/src/Engine/Objects/GraphicsObjects/ScreenQuad.ts","webpack://my-webpack-project/./code/src/Engine/Objects/GraphicsObjects/Skybox.ts","webpack://my-webpack-project/./code/src/Engine/Objects/Octree.ts","webpack://my-webpack-project/./code/src/Engine/Physics/CollisionSolver.ts","webpack://my-webpack-project/./code/src/Engine/Physics/IntersectionTester.ts","webpack://my-webpack-project/./code/src/Engine/Physics/Shapes/OBB.ts","webpack://my-webpack-project/./code/src/Engine/Physics/Shapes/Ray.ts","webpack://my-webpack-project/./code/src/Engine/Physics/Shapes/Shape.ts","webpack://my-webpack-project/./code/src/Engine/Physics/Shapes/Triangle.ts","webpack://my-webpack-project/./code/src/Engine/Rendering/Framebuffers/Framebuffer.ts","webpack://my-webpack-project/./code/src/Engine/Rendering/GUI/Objects/Button.ts","webpack://my-webpack-project/./code/src/Engine/Rendering/GUI/Objects/Checkbox.ts","webpack://my-webpack-project/./code/src/Engine/Rendering/GUI/Objects/Div.ts","webpack://my-webpack-project/./code/src/Engine/Rendering/GUI/Objects/GuiObject.ts","webpack://my-webpack-project/./code/src/Engine/Rendering/GUI/Objects/Progress.ts","webpack://my-webpack-project/./code/src/Engine/Rendering/GUI/Objects/Slider.ts","webpack://my-webpack-project/./code/src/Engine/Rendering/GUI/Objects/Text/EditText.ts","webpack://my-webpack-project/./code/src/Engine/Rendering/GUI/Objects/Text/TextObject2D.ts","webpack://my-webpack-project/./code/src/Engine/Rendering/GUI/Objects/Text/TextObject3D.ts","webpack://my-webpack-project/./code/src/Engine/Rendering/GUI/OverlayRendering.ts","webpack://my-webpack-project/./code/src/Engine/Rendering/Lighting/DirectionalLight.ts","webpack://my-webpack-project/./code/src/Engine/Rendering/Lighting/PointLight.ts","webpack://my-webpack-project/./code/src/Engine/Rendering/RenderPasses/DefferedRendering/GeometryRenderPass.ts","webpack://my-webpack-project/./code/src/Engine/Rendering/RenderPasses/DefferedRendering/LightingRenderPass.ts","webpack://my-webpack-project/./code/src/Engine/Rendering/RenderPasses/FinishedOutputRenderPass.ts","webpack://my-webpack-project/./code/src/Engine/Rendering/RenderPasses/ParticleRenderPass.ts","webpack://my-webpack-project/./code/src/Engine/Rendering/RenderPasses/PostProcessing/BloomRenderPass.ts","webpack://my-webpack-project/./code/src/Engine/Rendering/RenderPasses/PostProcessing/CRTRenderPass.ts","webpack://my-webpack-project/./code/src/Engine/Rendering/RenderPasses/ShadowPasses/DirectionalShadowRenderPass.ts","webpack://my-webpack-project/./code/src/Engine/Rendering/RenderPasses/ShadowPasses/PointShadowRenderPass.ts","webpack://my-webpack-project/./code/src/Engine/Rendering/RenderPasses/SkyboxRenderPass.ts","webpack://my-webpack-project/./code/src/Engine/Rendering/RenderPasses/Volumetric/VolumetricGodRayPass.ts","webpack://my-webpack-project/./code/src/Engine/Rendering/Rendering.ts","webpack://my-webpack-project/./code/src/Engine/Rendering/Scene.ts","webpack://my-webpack-project/./code/src/Engine/Rendering/ShaderPrograms/DeferredRendering/GeometryPass.ts","webpack://my-webpack-project/./code/src/Engine/Rendering/ShaderPrograms/DeferredRendering/LightingPass.ts","webpack://my-webpack-project/./code/src/Engine/Rendering/ShaderPrograms/GrassShaderProgram.ts","webpack://my-webpack-project/./code/src/Engine/Rendering/ShaderPrograms/ParticleShaderProgram.ts","webpack://my-webpack-project/./code/src/Engine/Rendering/ShaderPrograms/PhongShaderProgram.ts","webpack://my-webpack-project/./code/src/Engine/Rendering/ShaderPrograms/PostProcessing/BloomBlending.ts","webpack://my-webpack-project/./code/src/Engine/Rendering/ShaderPrograms/PostProcessing/BloomExtraction.ts","webpack://my-webpack-project/./code/src/Engine/Rendering/ShaderPrograms/PostProcessing/BlurTransparency.ts","webpack://my-webpack-project/./code/src/Engine/Rendering/ShaderPrograms/PostProcessing/CrtShaderProgram.ts","webpack://my-webpack-project/./code/src/Engine/Rendering/ShaderPrograms/PostProcessing/GaussianBlur.ts","webpack://my-webpack-project/./code/src/Engine/Rendering/ShaderPrograms/ScreenQuadShaderProgram.ts","webpack://my-webpack-project/./code/src/Engine/Rendering/ShaderPrograms/ShaderProgram.ts","webpack://my-webpack-project/./code/src/Engine/Rendering/ShaderPrograms/ShadowMapping/GrassShadowPass.ts","webpack://my-webpack-project/./code/src/Engine/Rendering/ShaderPrograms/ShadowMapping/PointShadowPass.ts","webpack://my-webpack-project/./code/src/Engine/Rendering/ShaderPrograms/ShadowMapping/ShadowPass.ts","webpack://my-webpack-project/./code/src/Engine/Rendering/ShaderPrograms/SimpleShaderProgram.ts","webpack://my-webpack-project/./code/src/Engine/Rendering/ShaderPrograms/Skybox/SkyboxShaderProgram.ts","webpack://my-webpack-project/./code/src/Engine/Rendering/ShaderPrograms/Volumetric/VolumetricGodRayShaderProgram.ts","webpack://my-webpack-project/./code/src/Engine/Rendering/Textures/CubeMap.ts","webpack://my-webpack-project/./code/src/Engine/Rendering/Textures/Texture.ts","webpack://my-webpack-project/./code/src/Engine/States/State.ts","webpack://my-webpack-project/./code/src/Engine/States/StateMachine.ts","webpack://my-webpack-project/./code/src/Engine/Utils/ESCUtils.ts","webpack://my-webpack-project/./code/src/Engine/Utils/WebUtils.ts","webpack://my-webpack-project/./code/src/Game/GameMachine.ts","webpack://my-webpack-project/./code/src/Game/GolfBall.ts","webpack://my-webpack-project/./code/src/Game/ObjectPlacer.ts","webpack://my-webpack-project/./code/src/Game/States/ControlsMenu.ts","webpack://my-webpack-project/./code/src/Game/States/DebugMenu.ts","webpack://my-webpack-project/./code/src/Game/States/DebugMode.ts","webpack://my-webpack-project/./code/src/Game/States/Game.ts","webpack://my-webpack-project/./code/src/Game/States/LevelSelect.ts","webpack://my-webpack-project/./code/src/Game/States/LoadingScreen.ts","webpack://my-webpack-project/./code/src/Game/States/Menu.ts","webpack://my-webpack-project/./code/src/Game/States/OptionsMenu.ts","webpack://my-webpack-project/./code/src/main.ts","webpack://my-webpack-project/webpack/bootstrap","webpack://my-webpack-project/webpack/runtime/define property getters","webpack://my-webpack-project/webpack/runtime/hasOwnProperty shorthand","webpack://my-webpack-project/webpack/runtime/make namespace object","webpack://my-webpack-project/webpack/before-startup","webpack://my-webpack-project/webpack/startup","webpack://my-webpack-project/webpack/after-startup"],"sourcesContent":["/**\n * Common utilities\n * @module glMatrix\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import * as glMatrix from \"./common.js\";\nimport * as mat2 from \"./mat2.js\";\nimport * as mat2d from \"./mat2d.js\";\nimport * as mat3 from \"./mat3.js\";\nimport * as mat4 from \"./mat4.js\";\nimport * as quat from \"./quat.js\";\nimport * as quat2 from \"./quat2.js\";\nimport * as vec2 from \"./vec2.js\";\nimport * as vec3 from \"./vec3.js\";\nimport * as vec4 from \"./vec4.js\";\nexport { glMatrix, mat2, mat2d, mat3, mat4, quat, quat2, vec2, vec3, vec4 };","import * as glMatrix from \"./common.js\";\n/**\n * 2x2 Matrix\n * @module mat2\n */\n\n/**\n * Creates a new identity mat2\n *\n * @returns {mat2} a new 2x2 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[0] = 1;\n  out[3] = 1;\n  return out;\n}\n/**\n * Creates a new mat2 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat2} a matrix to clone\n * @returns {mat2} a new 2x2 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Copy the values from one mat2 to another\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the source matrix\n * @returns {mat2} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set a mat2 to the identity matrix\n *\n * @param {mat2} out the receiving matrix\n * @returns {mat2} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\n * Create a new mat2 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\n * @returns {mat2} out A new 2x2 matrix\n */\n\nexport function fromValues(m00, m01, m10, m11) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n/**\n * Set the components of a mat2 to the given values\n *\n * @param {mat2} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\n * @returns {mat2} out\n */\n\nexport function set(out, m00, m01, m10, m11) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n/**\n * Transpose the values of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the source matrix\n * @returns {mat2} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache\n  // some values\n  if (out === a) {\n    var a1 = a[1];\n    out[1] = a[2];\n    out[2] = a1;\n  } else {\n    out[0] = a[0];\n    out[1] = a[2];\n    out[2] = a[1];\n    out[3] = a[3];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the source matrix\n * @returns {mat2} out\n */\n\nexport function invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3]; // Calculate the determinant\n\n  var det = a0 * a3 - a2 * a1;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = a3 * det;\n  out[1] = -a1 * det;\n  out[2] = -a2 * det;\n  out[3] = a0 * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the source matrix\n * @returns {mat2} out\n */\n\nexport function adjoint(out, a) {\n  // Caching this value is nessecary if out == a\n  var a0 = a[0];\n  out[0] = a[3];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a0;\n  return out;\n}\n/**\n * Calculates the determinant of a mat2\n *\n * @param {ReadonlyMat2} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  return a[0] * a[3] - a[2] * a[1];\n}\n/**\n * Multiplies two mat2's\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the first operand\n * @param {ReadonlyMat2} b the second operand\n * @returns {mat2} out\n */\n\nexport function multiply(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  return out;\n}\n/**\n * Rotates a mat2 by the given angle\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2} out\n */\n\nexport function rotate(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  return out;\n}\n/**\n * Scales the mat2 by the dimensions in the given vec2\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the matrix to rotate\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\n * @returns {mat2} out\n **/\n\nexport function scale(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat2.identity(dest);\n *     mat2.rotate(dest, dest, rad);\n *\n * @param {mat2} out mat2 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2} out\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat2.identity(dest);\n *     mat2.scale(dest, dest, vec);\n *\n * @param {mat2} out mat2 receiving operation result\n * @param {ReadonlyVec2} v Scaling vector\n * @returns {mat2} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  return out;\n}\n/**\n * Returns a string representation of a mat2\n *\n * @param {ReadonlyMat2} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat2(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat2\n *\n * @param {ReadonlyMat2} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3]);\n}\n/**\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\n * @param {ReadonlyMat2} L the lower triangular matrix\n * @param {ReadonlyMat2} D the diagonal matrix\n * @param {ReadonlyMat2} U the upper triangular matrix\n * @param {ReadonlyMat2} a the input matrix to factorize\n */\n\nexport function LDU(L, D, U, a) {\n  L[2] = a[2] / a[0];\n  U[0] = a[0];\n  U[1] = a[1];\n  U[3] = a[3] - L[2] * U[1];\n  return [L, D, U];\n}\n/**\n * Adds two mat2's\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the first operand\n * @param {ReadonlyMat2} b the second operand\n * @returns {mat2} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the first operand\n * @param {ReadonlyMat2} b the second operand\n * @returns {mat2} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat2} a The first matrix.\n * @param {ReadonlyMat2} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat2} a The first matrix.\n * @param {ReadonlyMat2} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat2} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\n * Adds two mat2's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat2} out the receiving vector\n * @param {ReadonlyMat2} a the first operand\n * @param {ReadonlyMat2} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat2} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\n * Alias for {@link mat2.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat2.subtract}\n * @function\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\n * 2x3 Matrix\n * @module mat2d\n * @description\n * A mat2d contains six elements defined as:\n * <pre>\n * [a, b,\n *  c, d,\n *  tx, ty]\n * </pre>\n * This is a short form for the 3x3 matrix:\n * <pre>\n * [a, b, 0,\n *  c, d, 0,\n *  tx, ty, 1]\n * </pre>\n * The last column is ignored so the array is shorter and operations are faster.\n */\n\n/**\n * Creates a new identity mat2d\n *\n * @returns {mat2d} a new 2x3 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(6);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[4] = 0;\n    out[5] = 0;\n  }\n\n  out[0] = 1;\n  out[3] = 1;\n  return out;\n}\n/**\n * Creates a new mat2d initialized with values from an existing matrix\n *\n * @param {ReadonlyMat2d} a matrix to clone\n * @returns {mat2d} a new 2x3 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n/**\n * Copy the values from one mat2d to another\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the source matrix\n * @returns {mat2d} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n/**\n * Set a mat2d to the identity matrix\n *\n * @param {mat2d} out the receiving matrix\n * @returns {mat2d} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * Create a new mat2d with the given values\n *\n * @param {Number} a Component A (index 0)\n * @param {Number} b Component B (index 1)\n * @param {Number} c Component C (index 2)\n * @param {Number} d Component D (index 3)\n * @param {Number} tx Component TX (index 4)\n * @param {Number} ty Component TY (index 5)\n * @returns {mat2d} A new mat2d\n */\n\nexport function fromValues(a, b, c, d, tx, ty) {\n  var out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n/**\n * Set the components of a mat2d to the given values\n *\n * @param {mat2d} out the receiving matrix\n * @param {Number} a Component A (index 0)\n * @param {Number} b Component B (index 1)\n * @param {Number} c Component C (index 2)\n * @param {Number} d Component D (index 3)\n * @param {Number} tx Component TX (index 4)\n * @param {Number} ty Component TY (index 5)\n * @returns {mat2d} out\n */\n\nexport function set(out, a, b, c, d, tx, ty) {\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n/**\n * Inverts a mat2d\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the source matrix\n * @returns {mat2d} out\n */\n\nexport function invert(out, a) {\n  var aa = a[0],\n      ab = a[1],\n      ac = a[2],\n      ad = a[3];\n  var atx = a[4],\n      aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n/**\n * Calculates the determinant of a mat2d\n *\n * @param {ReadonlyMat2d} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  return a[0] * a[3] - a[1] * a[2];\n}\n/**\n * Multiplies two mat2d's\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the first operand\n * @param {ReadonlyMat2d} b the second operand\n * @returns {mat2d} out\n */\n\nexport function multiply(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  out[4] = a0 * b4 + a2 * b5 + a4;\n  out[5] = a1 * b4 + a3 * b5 + a5;\n  return out;\n}\n/**\n * Rotates a mat2d by the given angle\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2d} out\n */\n\nexport function rotate(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n/**\n * Scales the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to translate\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\n * @returns {mat2d} out\n **/\n\nexport function scale(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n/**\n * Translates the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to translate\n * @param {ReadonlyVec2} v the vec2 to translate the matrix by\n * @returns {mat2d} out\n **/\n\nexport function translate(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0;\n  out[1] = a1;\n  out[2] = a2;\n  out[3] = a3;\n  out[4] = a0 * v0 + a2 * v1 + a4;\n  out[5] = a1 * v0 + a3 * v1 + a5;\n  return out;\n}\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.rotate(dest, dest, rad);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2d} out\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.scale(dest, dest, vec);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {ReadonlyVec2} v Scaling vector\n * @returns {mat2d} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.translate(dest, dest, vec);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {ReadonlyVec2} v Translation vector\n * @returns {mat2d} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = v[0];\n  out[5] = v[1];\n  return out;\n}\n/**\n * Returns a string representation of a mat2d\n *\n * @param {ReadonlyMat2d} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat2d(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat2d\n *\n * @param {ReadonlyMat2d} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], 1);\n}\n/**\n * Adds two mat2d's\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the first operand\n * @param {ReadonlyMat2d} b the second operand\n * @returns {mat2d} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the first operand\n * @param {ReadonlyMat2d} b the second operand\n * @returns {mat2d} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat2d} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  return out;\n}\n/**\n * Adds two mat2d's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat2d} out the receiving vector\n * @param {ReadonlyMat2d} a the first operand\n * @param {ReadonlyMat2d} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat2d} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat2d} a The first matrix.\n * @param {ReadonlyMat2d} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat2d} a The first matrix.\n * @param {ReadonlyMat2d} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5));\n}\n/**\n * Alias for {@link mat2d.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat2d.subtract}\n * @function\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\n * 3x3 Matrix\n * @module mat3\n */\n\n/**\n * Creates a new identity mat3\n *\n * @returns {mat3} a new 3x3 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(9);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {ReadonlyMat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\n\nexport function fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n/**\n * Creates a new mat3 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat3} a matrix to clone\n * @returns {mat3} a new 3x3 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Create a new mat3 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} A new mat3\n */\n\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} out\n */\n\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n/**\n * Calculates the determinant of a mat3\n *\n * @param {ReadonlyMat3} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to translate\n * @param {ReadonlyVec2} v vector to translate by\n * @returns {mat3} out\n */\n\nexport function translate(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\n\nexport function rotate(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to rotate\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.translate(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Translation vector\n * @returns {mat3} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.rotate(dest, dest, rad);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.scale(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Scaling vector\n * @returns {mat3} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Copies the values from a mat2d into a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to copy\n * @returns {mat3} out\n **/\n\nexport function fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n/**\n * Calculates a 3x3 matrix from the given quaternion\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat3} out\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n/**\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyMat4} a Mat4 to derive the normal matrix from\n *\n * @returns {mat3} out\n */\n\nexport function normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n/**\n * Generates a 2D projection matrix with the given bounds\n *\n * @param {mat3} out mat3 frustum matrix will be written into\n * @param {number} width Width of your gl context\n * @param {number} height Height of gl context\n * @returns {mat3} out\n */\n\nexport function projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat3\n *\n * @param {ReadonlyMat3} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat3\n *\n * @param {ReadonlyMat3} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);\n}\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n/**\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat3} out the receiving vector\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat3} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n/**\n * Alias for {@link mat3.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat3.subtract}\n * @function\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\n * Calculates the determinant of a mat4\n *\n * @param {ReadonlyMat4} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {mat4} out\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 from a dual quat.\n *\n * @param {mat4} out Matrix\n * @param {ReadonlyQuat2} a Dual Quaternion\n * @returns {mat4} mat4 receiving operation result\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveNO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\n * Alias for {@link mat4.perspectiveNO}\n * @function\n */\n\nexport var perspective = perspectiveNO;\n/**\n * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveZO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = far * nf;\n    out[14] = far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -near;\n  }\n\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoNO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Alias for {@link mat4.orthoNO}\n * @function\n */\n\nexport var ortho = orthoNO;\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoZO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = near * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat4\n *\n * @param {ReadonlyMat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\nimport * as mat3 from \"./mat3.js\";\nimport * as vec3 from \"./vec3.js\";\nimport * as vec4 from \"./vec4.js\";\n/**\n * Quaternion\n * @module quat\n */\n\n/**\n * Creates a new identity quat\n *\n * @returns {quat} a new quaternion\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[3] = 1;\n  return out;\n}\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\n\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyVec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\n\nexport function setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n/**\n * Gets the rotation axis and angle for a given\n *  quaternion. If a quaternion is created with\n *  setAxisAngle, this method will return the same\n *  values as providied in the original parameter list\n *  OR functionally equivalent values.\n * Example: The quaternion formed by axis [0, 0, 1] and\n *  angle -90 is the same as the quaternion formed by\n *  [0, 0, 1] and 270. This method favors the latter.\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\n * @param  {ReadonlyQuat} q     Quaternion to be decomposed\n * @return {Number}     Angle, in radians, of the rotation\n */\n\nexport function getAxisAngle(out_axis, q) {\n  var rad = Math.acos(q[3]) * 2.0;\n  var s = Math.sin(rad / 2.0);\n\n  if (s > glMatrix.EPSILON) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n\n  return rad;\n}\n/**\n * Gets the angular distance between two unit quaternions\n *\n * @param  {ReadonlyQuat} a     Origin unit quaternion\n * @param  {ReadonlyQuat} b     Destination unit quaternion\n * @return {Number}     Angle, in radians, between the two quaternions\n */\n\nexport function getAngle(a, b) {\n  var dotproduct = dot(a, b);\n  return Math.acos(2 * dotproduct * dotproduct - 1);\n}\n/**\n * Multiplies two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {quat} out\n */\n\nexport function multiply(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\nexport function rotateX(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\nexport function rotateY(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var by = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\nexport function rotateZ(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bz = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n/**\n * Calculates the W component of a quat from the X, Y, and Z components.\n * Assumes that quaternion is 1 unit in length.\n * Any existing W component will be ignored.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate W component of\n * @returns {quat} out\n */\n\nexport function calculateW(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n/**\n * Calculate the exponential of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @returns {quat} out\n */\n\nexport function exp(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var et = Math.exp(w);\n  var s = r > 0 ? et * Math.sin(r) / r : 0;\n  out[0] = x * s;\n  out[1] = y * s;\n  out[2] = z * s;\n  out[3] = et * Math.cos(r);\n  return out;\n}\n/**\n * Calculate the natural logarithm of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @returns {quat} out\n */\n\nexport function ln(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var t = r > 0 ? Math.atan2(r, w) / r : 0;\n  out[0] = x * t;\n  out[1] = y * t;\n  out[2] = z * t;\n  out[3] = 0.5 * Math.log(x * x + y * y + z * z + w * w);\n  return out;\n}\n/**\n * Calculate the scalar power of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @param {Number} b amount to scale the quaternion by\n * @returns {quat} out\n */\n\nexport function pow(out, a, b) {\n  ln(out, a);\n  scale(out, out, b);\n  exp(out, out);\n  return out;\n}\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\n\nexport function slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  var omega, cosom, sinom, scale0, scale1; // calc cosine\n\n  cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)\n\n  if (cosom < 0.0) {\n    cosom = -cosom;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  } // calculate coefficients\n\n\n  if (1.0 - cosom > glMatrix.EPSILON) {\n    // standard case (slerp)\n    omega = Math.acos(cosom);\n    sinom = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  } // calculate final values\n\n\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n  return out;\n}\n/**\n * Generates a random unit quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\n\nexport function random(out) {\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\n  // TODO: Calling random 3 times is probably not the fastest solution\n  var u1 = glMatrix.RANDOM();\n  var u2 = glMatrix.RANDOM();\n  var u3 = glMatrix.RANDOM();\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\n  var sqrtU1 = Math.sqrt(u1);\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n  return out;\n}\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate inverse of\n * @returns {quat} out\n */\n\nexport function invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  var invDot = dot ? 1.0 / dot : 0; // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot;\n  out[1] = -a1 * invDot;\n  out[2] = -a2 * invDot;\n  out[3] = a3 * invDot;\n  return out;\n}\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate conjugate of\n * @returns {quat} out\n */\n\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyMat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\n\nexport function fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  var fTrace = m[0] + m[4] + m[8];\n  var fRoot;\n\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot; // 1/(4w)\n\n    out[0] = (m[5] - m[7]) * fRoot;\n    out[1] = (m[6] - m[2]) * fRoot;\n    out[2] = (m[1] - m[3]) * fRoot;\n  } else {\n    // |w| <= 1/2\n    var i = 0;\n    if (m[4] > m[0]) i = 1;\n    if (m[8] > m[i * 3 + i]) i = 2;\n    var j = (i + 1) % 3;\n    var k = (i + 2) % 3;\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n  }\n\n  return out;\n}\n/**\n * Creates a quaternion from the given euler angle x, y, z.\n *\n * @param {quat} out the receiving quaternion\n * @param {x} Angle to rotate around X axis in degrees.\n * @param {y} Angle to rotate around Y axis in degrees.\n * @param {z} Angle to rotate around Z axis in degrees.\n * @returns {quat} out\n * @function\n */\n\nexport function fromEuler(out, x, y, z) {\n  var halfToRad = 0.5 * Math.PI / 180.0;\n  x *= halfToRad;\n  y *= halfToRad;\n  z *= halfToRad;\n  var sx = Math.sin(x);\n  var cx = Math.cos(x);\n  var sy = Math.sin(y);\n  var cy = Math.cos(y);\n  var sz = Math.sin(z);\n  var cz = Math.cos(z);\n  out[0] = sx * cy * cz - cx * sy * sz;\n  out[1] = cx * sy * cz + sx * cy * sz;\n  out[2] = cx * cy * sz - sx * sy * cz;\n  out[3] = cx * cy * cz + sx * sy * sz;\n  return out;\n}\n/**\n * Returns a string representation of a quatenion\n *\n * @param {ReadonlyQuat} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"quat(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {ReadonlyQuat} a quaternion to clone\n * @returns {quat} a new quaternion\n * @function\n */\n\nexport var clone = vec4.clone;\n/**\n * Creates a new quat initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} a new quaternion\n * @function\n */\n\nexport var fromValues = vec4.fromValues;\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the source quaternion\n * @returns {quat} out\n * @function\n */\n\nexport var copy = vec4.copy;\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\n\nexport var set = vec4.set;\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {quat} out\n * @function\n */\n\nexport var add = vec4.add;\n/**\n * Alias for {@link quat.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {ReadonlyQuat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\n\nexport var scale = vec4.scale;\n/**\n * Calculates the dot product of two quat's\n *\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\n\nexport var dot = vec4.dot;\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n * @function\n */\n\nexport var lerp = vec4.lerp;\n/**\n * Calculates the length of a quat\n *\n * @param {ReadonlyQuat} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport var length = vec4.length;\n/**\n * Alias for {@link quat.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Calculates the squared length of a quat\n *\n * @param {ReadonlyQuat} a vector to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\n\nexport var squaredLength = vec4.squaredLength;\n/**\n * Alias for {@link quat.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\n\nexport var normalize = vec4.normalize;\n/**\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyQuat} a The first quaternion.\n * @param {ReadonlyQuat} b The second quaternion.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport var exactEquals = vec4.exactEquals;\n/**\n * Returns whether or not the quaternions have approximately the same elements in the same position.\n *\n * @param {ReadonlyQuat} a The first vector.\n * @param {ReadonlyQuat} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport var equals = vec4.equals;\n/**\n * Sets a quaternion to represent the shortest rotation from one\n * vector to another.\n *\n * Both vectors are assumed to be unit length.\n *\n * @param {quat} out the receiving quaternion.\n * @param {ReadonlyVec3} a the initial vector\n * @param {ReadonlyVec3} b the destination vector\n * @returns {quat} out\n */\n\nexport var rotationTo = function () {\n  var tmpvec3 = vec3.create();\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\n  return function (out, a, b) {\n    var dot = vec3.dot(a, b);\n\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      vec3.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n}();\n/**\n * Performs a spherical linear interpolation with two control points\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {ReadonlyQuat} c the third operand\n * @param {ReadonlyQuat} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\n\nexport var sqlerp = function () {\n  var temp1 = create();\n  var temp2 = create();\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n    return out;\n  };\n}();\n/**\n * Sets the specified quaternion with values corresponding to the given\n * axes. Each axis is a vec3 and is expected to be unit length and\n * perpendicular to all other specified axes.\n *\n * @param {ReadonlyVec3} view  the vector representing the viewing direction\n * @param {ReadonlyVec3} right the vector representing the local \"right\" direction\n * @param {ReadonlyVec3} up    the vector representing the local \"up\" direction\n * @returns {quat} out\n */\n\nexport var setAxes = function () {\n  var matr = mat3.create();\n  return function (out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n    return normalize(out, fromMat3(out, matr));\n  };\n}();","import * as glMatrix from \"./common.js\";\nimport * as quat from \"./quat.js\";\nimport * as mat4 from \"./mat4.js\";\n/**\n * Dual Quaternion<br>\n * Format: [real, dual]<br>\n * Quaternion format: XYZW<br>\n * Make sure to have normalized dual quaternions, otherwise the functions may not work as intended.<br>\n * @module quat2\n */\n\n/**\n * Creates a new identity dual quat\n *\n * @returns {quat2} a new dual quaternion [real -> rotation, dual -> translation]\n */\n\nexport function create() {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    dq[0] = 0;\n    dq[1] = 0;\n    dq[2] = 0;\n    dq[4] = 0;\n    dq[5] = 0;\n    dq[6] = 0;\n    dq[7] = 0;\n  }\n\n  dq[3] = 1;\n  return dq;\n}\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {ReadonlyQuat2} a dual quaternion to clone\n * @returns {quat2} new dual quaternion\n * @function\n */\n\nexport function clone(a) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = a[0];\n  dq[1] = a[1];\n  dq[2] = a[2];\n  dq[3] = a[3];\n  dq[4] = a[4];\n  dq[5] = a[5];\n  dq[6] = a[6];\n  dq[7] = a[7];\n  return dq;\n}\n/**\n * Creates a new dual quat initialized with the given values\n *\n * @param {Number} x1 X component\n * @param {Number} y1 Y component\n * @param {Number} z1 Z component\n * @param {Number} w1 W component\n * @param {Number} x2 X component\n * @param {Number} y2 Y component\n * @param {Number} z2 Z component\n * @param {Number} w2 W component\n * @returns {quat2} new dual quaternion\n * @function\n */\n\nexport function fromValues(x1, y1, z1, w1, x2, y2, z2, w2) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  dq[4] = x2;\n  dq[5] = y2;\n  dq[6] = z2;\n  dq[7] = w2;\n  return dq;\n}\n/**\n * Creates a new dual quat from the given values (quat and translation)\n *\n * @param {Number} x1 X component\n * @param {Number} y1 Y component\n * @param {Number} z1 Z component\n * @param {Number} w1 W component\n * @param {Number} x2 X component (translation)\n * @param {Number} y2 Y component (translation)\n * @param {Number} z2 Z component (translation)\n * @returns {quat2} new dual quaternion\n * @function\n */\n\nexport function fromRotationTranslationValues(x1, y1, z1, w1, x2, y2, z2) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  var ax = x2 * 0.5,\n      ay = y2 * 0.5,\n      az = z2 * 0.5;\n  dq[4] = ax * w1 + ay * z1 - az * y1;\n  dq[5] = ay * w1 + az * x1 - ax * z1;\n  dq[6] = az * w1 + ax * y1 - ay * x1;\n  dq[7] = -ax * x1 - ay * y1 - az * z1;\n  return dq;\n}\n/**\n * Creates a dual quat from a quaternion and a translation\n *\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\n * @param {ReadonlyQuat} q a normalized quaternion\n * @param {ReadonlyVec3} t tranlation vector\n * @returns {quat2} dual quaternion receiving operation result\n * @function\n */\n\nexport function fromRotationTranslation(out, q, t) {\n  var ax = t[0] * 0.5,\n      ay = t[1] * 0.5,\n      az = t[2] * 0.5,\n      bx = q[0],\n      by = q[1],\n      bz = q[2],\n      bw = q[3];\n  out[0] = bx;\n  out[1] = by;\n  out[2] = bz;\n  out[3] = bw;\n  out[4] = ax * bw + ay * bz - az * by;\n  out[5] = ay * bw + az * bx - ax * bz;\n  out[6] = az * bw + ax * by - ay * bx;\n  out[7] = -ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\n * Creates a dual quat from a translation\n *\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\n * @param {ReadonlyVec3} t translation vector\n * @returns {quat2} dual quaternion receiving operation result\n * @function\n */\n\nexport function fromTranslation(out, t) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = t[0] * 0.5;\n  out[5] = t[1] * 0.5;\n  out[6] = t[2] * 0.5;\n  out[7] = 0;\n  return out;\n}\n/**\n * Creates a dual quat from a quaternion\n *\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\n * @param {ReadonlyQuat} q the quaternion\n * @returns {quat2} dual quaternion receiving operation result\n * @function\n */\n\nexport function fromRotation(out, q) {\n  out[0] = q[0];\n  out[1] = q[1];\n  out[2] = q[2];\n  out[3] = q[3];\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n/**\n * Creates a new dual quat from a matrix (4x4)\n *\n * @param {quat2} out the dual quaternion\n * @param {ReadonlyMat4} a the matrix\n * @returns {quat2} dual quat receiving operation result\n * @function\n */\n\nexport function fromMat4(out, a) {\n  //TODO Optimize this\n  var outer = quat.create();\n  mat4.getRotation(outer, a);\n  var t = new glMatrix.ARRAY_TYPE(3);\n  mat4.getTranslation(t, a);\n  fromRotationTranslation(out, outer, t);\n  return out;\n}\n/**\n * Copy the values from one dual quat to another\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the source dual quaternion\n * @returns {quat2} out\n * @function\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  return out;\n}\n/**\n * Set a dual quat to the identity dual quaternion\n *\n * @param {quat2} out the receiving quaternion\n * @returns {quat2} out\n */\n\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n/**\n * Set the components of a dual quat to the given values\n *\n * @param {quat2} out the receiving quaternion\n * @param {Number} x1 X component\n * @param {Number} y1 Y component\n * @param {Number} z1 Z component\n * @param {Number} w1 W component\n * @param {Number} x2 X component\n * @param {Number} y2 Y component\n * @param {Number} z2 Z component\n * @param {Number} w2 W component\n * @returns {quat2} out\n * @function\n */\n\nexport function set(out, x1, y1, z1, w1, x2, y2, z2, w2) {\n  out[0] = x1;\n  out[1] = y1;\n  out[2] = z1;\n  out[3] = w1;\n  out[4] = x2;\n  out[5] = y2;\n  out[6] = z2;\n  out[7] = w2;\n  return out;\n}\n/**\n * Gets the real part of a dual quat\n * @param  {quat} out real part\n * @param  {ReadonlyQuat2} a Dual Quaternion\n * @return {quat} real part\n */\n\nexport var getReal = quat.copy;\n/**\n * Gets the dual part of a dual quat\n * @param  {quat} out dual part\n * @param  {ReadonlyQuat2} a Dual Quaternion\n * @return {quat} dual part\n */\n\nexport function getDual(out, a) {\n  out[0] = a[4];\n  out[1] = a[5];\n  out[2] = a[6];\n  out[3] = a[7];\n  return out;\n}\n/**\n * Set the real component of a dual quat to the given quaternion\n *\n * @param {quat2} out the receiving quaternion\n * @param {ReadonlyQuat} q a quaternion representing the real part\n * @returns {quat2} out\n * @function\n */\n\nexport var setReal = quat.copy;\n/**\n * Set the dual component of a dual quat to the given quaternion\n *\n * @param {quat2} out the receiving quaternion\n * @param {ReadonlyQuat} q a quaternion representing the dual part\n * @returns {quat2} out\n * @function\n */\n\nexport function setDual(out, q) {\n  out[4] = q[0];\n  out[5] = q[1];\n  out[6] = q[2];\n  out[7] = q[3];\n  return out;\n}\n/**\n * Gets the translation of a normalized dual quat\n * @param  {vec3} out translation\n * @param  {ReadonlyQuat2} a Dual Quaternion to be decomposed\n * @return {vec3} translation\n */\n\nexport function getTranslation(out, a) {\n  var ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3];\n  out[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n  out[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n  out[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  return out;\n}\n/**\n * Translates a dual quat by the given vector\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {quat2} out\n */\n\nexport function translate(out, a, v) {\n  var ax1 = a[0],\n      ay1 = a[1],\n      az1 = a[2],\n      aw1 = a[3],\n      bx1 = v[0] * 0.5,\n      by1 = v[1] * 0.5,\n      bz1 = v[2] * 0.5,\n      ax2 = a[4],\n      ay2 = a[5],\n      az2 = a[6],\n      aw2 = a[7];\n  out[0] = ax1;\n  out[1] = ay1;\n  out[2] = az1;\n  out[3] = aw1;\n  out[4] = aw1 * bx1 + ay1 * bz1 - az1 * by1 + ax2;\n  out[5] = aw1 * by1 + az1 * bx1 - ax1 * bz1 + ay2;\n  out[6] = aw1 * bz1 + ax1 * by1 - ay1 * bx1 + az2;\n  out[7] = -ax1 * bx1 - ay1 * by1 - az1 * bz1 + aw2;\n  return out;\n}\n/**\n * Rotates a dual quat around the X axis\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {number} rad how far should the rotation be\n * @returns {quat2} out\n */\n\nexport function rotateX(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateX(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\n * Rotates a dual quat around the Y axis\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {number} rad how far should the rotation be\n * @returns {quat2} out\n */\n\nexport function rotateY(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateY(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\n * Rotates a dual quat around the Z axis\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {number} rad how far should the rotation be\n * @returns {quat2} out\n */\n\nexport function rotateZ(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateZ(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\n * Rotates a dual quat by a given quaternion (a * q)\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {ReadonlyQuat} q quaternion to rotate by\n * @returns {quat2} out\n */\n\nexport function rotateByQuatAppend(out, a, q) {\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3],\n      ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  out[0] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[1] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[2] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[3] = aw * qw - ax * qx - ay * qy - az * qz;\n  ax = a[4];\n  ay = a[5];\n  az = a[6];\n  aw = a[7];\n  out[4] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[5] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[6] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[7] = aw * qw - ax * qx - ay * qy - az * qz;\n  return out;\n}\n/**\n * Rotates a dual quat by a given quaternion (q * a)\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat} q quaternion to rotate by\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @returns {quat2} out\n */\n\nexport function rotateByQuatPrepend(out, q, a) {\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3],\n      bx = a[0],\n      by = a[1],\n      bz = a[2],\n      bw = a[3];\n  out[0] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[1] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[2] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[3] = qw * bw - qx * bx - qy * by - qz * bz;\n  bx = a[4];\n  by = a[5];\n  bz = a[6];\n  bw = a[7];\n  out[4] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[5] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[6] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[7] = qw * bw - qx * bx - qy * by - qz * bz;\n  return out;\n}\n/**\n * Rotates a dual quat around a given axis. Does the normalisation automatically\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @param {Number} rad how far the rotation should be\n * @returns {quat2} out\n */\n\nexport function rotateAroundAxis(out, a, axis, rad) {\n  //Special case for rad = 0\n  if (Math.abs(rad) < glMatrix.EPSILON) {\n    return copy(out, a);\n  }\n\n  var axisLength = Math.hypot(axis[0], axis[1], axis[2]);\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  var bx = s * axis[0] / axisLength;\n  var by = s * axis[1] / axisLength;\n  var bz = s * axis[2] / axisLength;\n  var bw = Math.cos(rad);\n  var ax1 = a[0],\n      ay1 = a[1],\n      az1 = a[2],\n      aw1 = a[3];\n  out[0] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[1] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[2] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[3] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  var ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  out[4] = ax * bw + aw * bx + ay * bz - az * by;\n  out[5] = ay * bw + aw * by + az * bx - ax * bz;\n  out[6] = az * bw + aw * bz + ax * by - ay * bx;\n  out[7] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\n * Adds two dual quat's\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the first operand\n * @param {ReadonlyQuat2} b the second operand\n * @returns {quat2} out\n * @function\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  return out;\n}\n/**\n * Multiplies two dual quat's\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the first operand\n * @param {ReadonlyQuat2} b the second operand\n * @returns {quat2} out\n */\n\nexport function multiply(out, a, b) {\n  var ax0 = a[0],\n      ay0 = a[1],\n      az0 = a[2],\n      aw0 = a[3],\n      bx1 = b[4],\n      by1 = b[5],\n      bz1 = b[6],\n      bw1 = b[7],\n      ax1 = a[4],\n      ay1 = a[5],\n      az1 = a[6],\n      aw1 = a[7],\n      bx0 = b[0],\n      by0 = b[1],\n      bz0 = b[2],\n      bw0 = b[3];\n  out[0] = ax0 * bw0 + aw0 * bx0 + ay0 * bz0 - az0 * by0;\n  out[1] = ay0 * bw0 + aw0 * by0 + az0 * bx0 - ax0 * bz0;\n  out[2] = az0 * bw0 + aw0 * bz0 + ax0 * by0 - ay0 * bx0;\n  out[3] = aw0 * bw0 - ax0 * bx0 - ay0 * by0 - az0 * bz0;\n  out[4] = ax0 * bw1 + aw0 * bx1 + ay0 * bz1 - az0 * by1 + ax1 * bw0 + aw1 * bx0 + ay1 * bz0 - az1 * by0;\n  out[5] = ay0 * bw1 + aw0 * by1 + az0 * bx1 - ax0 * bz1 + ay1 * bw0 + aw1 * by0 + az1 * bx0 - ax1 * bz0;\n  out[6] = az0 * bw1 + aw0 * bz1 + ax0 * by1 - ay0 * bx1 + az1 * bw0 + aw1 * bz0 + ax1 * by0 - ay1 * bx0;\n  out[7] = aw0 * bw1 - ax0 * bx1 - ay0 * by1 - az0 * bz1 + aw1 * bw0 - ax1 * bx0 - ay1 * by0 - az1 * bz0;\n  return out;\n}\n/**\n * Alias for {@link quat2.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Scales a dual quat by a scalar number\n *\n * @param {quat2} out the receiving dual quat\n * @param {ReadonlyQuat2} a the dual quat to scale\n * @param {Number} b amount to scale the dual quat by\n * @returns {quat2} out\n * @function\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  return out;\n}\n/**\n * Calculates the dot product of two dual quat's (The dot product of the real parts)\n *\n * @param {ReadonlyQuat2} a the first operand\n * @param {ReadonlyQuat2} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\n\nexport var dot = quat.dot;\n/**\n * Performs a linear interpolation between two dual quats's\n * NOTE: The resulting dual quaternions won't always be normalized (The error is most noticeable when t = 0.5)\n *\n * @param {quat2} out the receiving dual quat\n * @param {ReadonlyQuat2} a the first operand\n * @param {ReadonlyQuat2} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat2} out\n */\n\nexport function lerp(out, a, b, t) {\n  var mt = 1 - t;\n  if (dot(a, b) < 0) t = -t;\n  out[0] = a[0] * mt + b[0] * t;\n  out[1] = a[1] * mt + b[1] * t;\n  out[2] = a[2] * mt + b[2] * t;\n  out[3] = a[3] * mt + b[3] * t;\n  out[4] = a[4] * mt + b[4] * t;\n  out[5] = a[5] * mt + b[5] * t;\n  out[6] = a[6] * mt + b[6] * t;\n  out[7] = a[7] * mt + b[7] * t;\n  return out;\n}\n/**\n * Calculates the inverse of a dual quat. If they are normalized, conjugate is cheaper\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a dual quat to calculate inverse of\n * @returns {quat2} out\n */\n\nexport function invert(out, a) {\n  var sqlen = squaredLength(a);\n  out[0] = -a[0] / sqlen;\n  out[1] = -a[1] / sqlen;\n  out[2] = -a[2] / sqlen;\n  out[3] = a[3] / sqlen;\n  out[4] = -a[4] / sqlen;\n  out[5] = -a[5] / sqlen;\n  out[6] = -a[6] / sqlen;\n  out[7] = a[7] / sqlen;\n  return out;\n}\n/**\n * Calculates the conjugate of a dual quat\n * If the dual quaternion is normalized, this function is faster than quat2.inverse and produces the same result.\n *\n * @param {quat2} out the receiving quaternion\n * @param {ReadonlyQuat2} a quat to calculate conjugate of\n * @returns {quat2} out\n */\n\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  out[4] = -a[4];\n  out[5] = -a[5];\n  out[6] = -a[6];\n  out[7] = a[7];\n  return out;\n}\n/**\n * Calculates the length of a dual quat\n *\n * @param {ReadonlyQuat2} a dual quat to calculate length of\n * @returns {Number} length of a\n * @function\n */\n\nexport var length = quat.length;\n/**\n * Alias for {@link quat2.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Calculates the squared length of a dual quat\n *\n * @param {ReadonlyQuat2} a dual quat to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\n\nexport var squaredLength = quat.squaredLength;\n/**\n * Alias for {@link quat2.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Normalize a dual quat\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a dual quaternion to normalize\n * @returns {quat2} out\n * @function\n */\n\nexport function normalize(out, a) {\n  var magnitude = squaredLength(a);\n\n  if (magnitude > 0) {\n    magnitude = Math.sqrt(magnitude);\n    var a0 = a[0] / magnitude;\n    var a1 = a[1] / magnitude;\n    var a2 = a[2] / magnitude;\n    var a3 = a[3] / magnitude;\n    var b0 = a[4];\n    var b1 = a[5];\n    var b2 = a[6];\n    var b3 = a[7];\n    var a_dot_b = a0 * b0 + a1 * b1 + a2 * b2 + a3 * b3;\n    out[0] = a0;\n    out[1] = a1;\n    out[2] = a2;\n    out[3] = a3;\n    out[4] = (b0 - a0 * a_dot_b) / magnitude;\n    out[5] = (b1 - a1 * a_dot_b) / magnitude;\n    out[6] = (b2 - a2 * a_dot_b) / magnitude;\n    out[7] = (b3 - a3 * a_dot_b) / magnitude;\n  }\n\n  return out;\n}\n/**\n * Returns a string representation of a dual quatenion\n *\n * @param {ReadonlyQuat2} a dual quaternion to represent as a string\n * @returns {String} string representation of the dual quat\n */\n\nexport function str(a) {\n  return \"quat2(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \")\";\n}\n/**\n * Returns whether or not the dual quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyQuat2} a the first dual quaternion.\n * @param {ReadonlyQuat2} b the second dual quaternion.\n * @returns {Boolean} true if the dual quaternions are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7];\n}\n/**\n * Returns whether or not the dual quaternions have approximately the same elements in the same position.\n *\n * @param {ReadonlyQuat2} a the first dual quat.\n * @param {ReadonlyQuat2} b the second dual quat.\n * @returns {Boolean} true if the dual quats are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7));\n}","import * as glMatrix from \"./common.js\";\n/**\n * 2 Dimensional Vector\n * @module vec2\n */\n\n/**\n * Creates a new, empty vec2\n *\n * @returns {vec2} a new 2D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(2);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec2 initialized with values from an existing vector\n *\n * @param {ReadonlyVec2} a vector to clone\n * @returns {vec2} a new 2D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} a new 2D vector\n */\n\nexport function fromValues(x, y) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the source vector\n * @returns {vec2} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\n\nexport function set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n/**\n * Math.ceil the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to ceil\n * @returns {vec2} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n/**\n * Math.floor the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to floor\n * @returns {vec2} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n/**\n * Returns the minimum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n/**\n * Returns the maximum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n/**\n * Math.round the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to round\n * @returns {vec2} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n/**\n * Adds two vec2's after scaling the second operand by a scalar value\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec2} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return Math.hypot(x, y);\n}\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return x * x + y * y;\n}\n/**\n * Calculates the length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0],\n      y = a[1];\n  return Math.hypot(x, y);\n}\n/**\n * Calculates the squared length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0],\n      y = a[1];\n  return x * x + y * y;\n}\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to negate\n * @returns {vec2} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to invert\n * @returns {vec2} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to normalize\n * @returns {vec2} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0],\n      y = a[1];\n  var len = x * x + y * y;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec3} out\n */\n\nexport function cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec2} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0],\n      ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec2} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec2} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat2(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2d} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat2d(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat3} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n/**\n * Rotate a 2D vector\n * @param {vec2} out The receiving vec2\n * @param {ReadonlyVec2} a The vec2 point to rotate\n * @param {ReadonlyVec2} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec2} out\n */\n\nexport function rotate(out, a, b, rad) {\n  //Translate point to the origin\n  var p0 = a[0] - b[0],\n      p1 = a[1] - b[1],\n      sinC = Math.sin(rad),\n      cosC = Math.cos(rad); //perform rotation and translate to correct position\n\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n  return out;\n}\n/**\n * Get the angle between two 2D vectors\n * @param {ReadonlyVec2} a The first operand\n * @param {ReadonlyVec2} b The second operand\n * @returns {Number} The angle in radians\n */\n\nexport function angle(a, b) {\n  var x1 = a[0],\n      y1 = a[1],\n      x2 = b[0],\n      y2 = b[1],\n      // mag is the product of the magnitudes of a and b\n  mag = Math.sqrt(x1 * x1 + y1 * y1) * Math.sqrt(x2 * x2 + y2 * y2),\n      // mag &&.. short circuits if mag == 0\n  cosine = mag && (x1 * x2 + y1 * y2) / mag; // Math.min(Math.max(cosine, -1), 1) clamps the cosine between -1 and 1\n\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec2 to zero\n *\n * @param {vec2} out the receiving vector\n * @returns {vec2} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec2} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec2(\" + a[0] + \", \" + a[1] + \")\";\n}\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1];\n  var b0 = b[0],\n      b1 = b[1];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n/**\n * Alias for {@link vec2.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec2.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec2.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec2.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec2.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec2.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec2.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {ReadonlyVec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Calculates the length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the source vector\n * @returns {vec3} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to ceil\n * @returns {vec3} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to floor\n * @returns {vec3} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to round\n * @returns {vec3} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Calculates the squared length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to negate\n * @returns {vec3} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to invert\n * @returns {vec3} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to normalize\n * @returns {vec3} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\n * Transforms the vec3 with a quat\n * Can also be used for dual quaternions. (Multiply it with the real part)\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec3} out\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Get the angle between two 3D vectors\n * @param {ReadonlyVec3} a The first operand\n * @param {ReadonlyVec3} b The second operand\n * @returns {Number} The angle in radians\n */\n\nexport function angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec3 to zero\n *\n * @param {vec3} out the receiving vector\n * @returns {vec3} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec3.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\n/**\n * 4 Dimensional Vector\n * @module vec4\n */\n\n/**\n * Creates a new, empty vec4\n *\n * @returns {vec4} a new 4D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec4 initialized with values from an existing vector\n *\n * @param {ReadonlyVec4} a vector to clone\n * @returns {vec4} a new 4D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Creates a new vec4 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} a new 4D vector\n */\n\nexport function fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the source vector\n * @returns {vec4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\n\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\n * Multiplies two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\n * Divides two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\n * Math.ceil the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to ceil\n * @returns {vec4} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\n * Math.floor the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to floor\n * @returns {vec4} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\n * Returns the minimum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\n * Returns the maximum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\n * Math.round the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to round\n * @returns {vec4} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\n * Adds two vec4's after scaling the second operand by a scalar value\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec4} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\n * Calculates the squared euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\n * Calculates the length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\n * Calculates the squared length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\n * Negates the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to negate\n * @returns {vec4} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to invert\n * @returns {vec4} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to normalize\n * @returns {vec4} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\n * Returns the cross-product of three vectors in a 4-dimensional space\n *\n * @param {ReadonlyVec4} result the receiving vector\n * @param {ReadonlyVec4} U the first vector\n * @param {ReadonlyVec4} V the second vector\n * @param {ReadonlyVec4} W the third vector\n * @returns {vec4} result\n */\n\nexport function cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec4} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec4} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec4} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\n * Transforms the vec4 with a quat\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec4} out\n */\n\nexport function transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set the components of a vec4 to zero\n *\n * @param {vec4} out the receiving vector\n * @returns {vec4} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec4} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\n * Alias for {@link vec4.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec4.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec4.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec4.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec4.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec4.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec4s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();","export * from \"./src/main\"\n","import Triangle from \"../Physics/Shapes/Triangle\";\nimport { geometryPass } from \"../Rendering/ShaderPrograms/DeferredRendering/GeometryPass\";\nimport Heightmap from \"../Objects/GraphicsObjects/Heightmap\";\nimport Mesh from \"../Objects/GraphicsObjects/Mesh\";\nimport Octree from \"../Objects/Octree\";\nimport { WebUtils } from \"../Utils/WebUtils\";\nimport Texture from \"../Rendering/Textures/Texture\";\nimport TextureStore from \"./TextureStore\";\nimport { vec2, vec3 } from \"gl-matrix\";\n\nexport default class MeshStore {\n\tprivate meshMap: Map<string, Mesh>;\n\tprivate heightmapMap: Map<string, Heightmap>;\n\tprivate octreeMap: Map<\n\t\tstring,\n\t\t{ octree: Octree; triangles: Array<Triangle> }\n\t>;\n\tprivate textureStore: TextureStore;\n\n\tconstructor(textureStore: TextureStore) {\n\t\tthis.meshMap = new Map<string, Mesh>();\n\t\tthis.heightmapMap = new Map<string, Heightmap>();\n\t\tthis.octreeMap = new Map<\n\t\t\tstring,\n\t\t\t{ octree: Octree; triangles: Array<Triangle> }\n\t\t>();\n\t\tthis.textureStore = textureStore;\n\t}\n\n\tgetMesh(path: string, printWarnings: boolean = true): Mesh {\n\t\tlet mesh = this.meshMap.get(path);\n\t\tif (mesh) {\n\t\t\treturn mesh;\n\t\t}\n\n\t\tif (printWarnings) {\n\t\t\tconsole.warn(\"Trying to get mesh \" + path + \" before loading it\");\n\t\t}\n\t\treturn null;\n\t}\n\n\tasync loadMesh(path: string): Promise<Mesh> {\n\t\tlet mesh = this.meshMap.get(path);\n\t\tif (mesh) {\n\t\t\treturn mesh;\n\t\t}\n\n\t\tlet newVertices = await this.parseObjContent(path);\n\t\tthis.meshMap.set(path, new Mesh(geometryPass, newVertices));\n\n\t\treturn this.meshMap.get(path);\n\t}\n\n\tgetHeightmap(path: string, printWarnings: boolean = true): Heightmap {\n\t\tlet heightmap = this.heightmapMap.get(path);\n\t\tif (heightmap) {\n\t\t\treturn heightmap;\n\t\t}\n\n\t\tif (printWarnings) {\n\t\t\tconsole.warn(\"Trying to get heightmap \" + path + \" before loading it\");\n\t\t}\n\t\treturn null;\n\t}\n\n\tasync loadHeightmap(\n\t\tpath: string,\n\t\tuseTextureSizeForResolution: boolean = true,\n\t\tx: number = 2,\n\t\ty: number = 2,\n\t\tsizePerX: number = 1.0,\n\t\tsizePerY: number = 1.0\n\t): Promise<Heightmap> {\n\t\tlet heightmap = this.heightmapMap.get(path);\n\t\tif (heightmap) {\n\t\t\treturn heightmap;\n\t\t}\n\n\t\tlet newHeightmap = new Heightmap(geometryPass);\n\t\tif (!useTextureSizeForResolution) {\n\t\t\tnewHeightmap.createPlane(x, y, sizePerX, sizePerY);\n\t\t}\n\t\tawait newHeightmap.readHeightDataFromTexture(\n\t\t\tpath,\n\t\t\tuseTextureSizeForResolution\n\t\t);\n\t\tthis.heightmapMap.set(path, newHeightmap);\n\n\t\treturn newHeightmap;\n\t}\n\n\tgetOctree(path: string, printWarnings: boolean = true): Octree {\n\t\tlet octree = this.octreeMap.get(path);\n\t\tif (octree && octree.triangles.length == 0) {\n\t\t\treturn octree.octree;\n\t\t}\n\n\t\tif (printWarnings) {\n\t\t\tconsole.warn(\"Trying to get octree \" + path + \" before loading it\");\n\t\t}\n\t\treturn null;\n\t}\n\n\tasync loadOctree(\n\t\tpath: string,\n\t\tsmallestOctreeNodeSizeMultiplicator: number,\n\t\tmaxShapesPerOctreeNode: number,\n\t\ttimeLimit: number = Infinity\n\t): Promise<{ octree: Octree; doneLoading: boolean }> {\n\t\tlet startTime = Date.now();\n\n\t\tlet octree = this.octreeMap.get(path);\n\t\tif (octree && octree.triangles.length == 0) {\n\t\t\treturn { octree: octree.octree, doneLoading: true };\n\t\t}\n\n\t\tif (octree == undefined) {\n\t\t\t// Immediately make it defined, but with no content, to only do the initialization once\n\t\t\tthis.octreeMap.set(path, {\n\t\t\t\toctree: null,\n\t\t\t\ttriangles: null,\n\t\t\t});\n\n\t\t\toctree = this.octreeMap.get(path);\n\n\t\t\tlet triangles = new Array<Triangle>();\n\t\t\tif (path.endsWith(\".obj\")) {\n\t\t\t\tlet mesh = this.getMesh(path, false);\n\t\t\t\tif (!mesh) {\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t\"Trying to get octree for \" + path + \" before loading \" + path\n\t\t\t\t\t);\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tmesh.setupTriangles(triangles);\n\t\t\t} else {\n\t\t\t\tlet heightmap = this.getHeightmap(path, false);\n\t\t\t\tif (!heightmap) {\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t\"Trying to get octree for \" + path + \" before loading \" + path\n\t\t\t\t\t);\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\theightmap.setupTriangles(triangles);\n\t\t\t}\n\n\t\t\toctree.triangles = triangles;\n\n\t\t\tlet octPath =\n\t\t\t\t\"Assets/octrees/\" + path.split(\"/\").pop().split(\".\")[0] + \".oct\";\n\t\t\tlet fetched = false;\n\t\t\ttry { \n\t\t\t\tconst response = await fetch(octPath);\n\t\t\t\tif (response.ok) {\n\t\t\t\t\tfetched = true;\n\t\t\t\t\tconsole.log(\"Loaded octree from \" + octPath);\n\t\t\t\t\tconst octContent = await response.text();\n\n\t\t\t\t\toctree.octree = new Octree(\n\t\t\t\t\t\tvec3.create(),\n\t\t\t\t\t\tvec3.create(),\n\t\t\t\t\t\tsmallestOctreeNodeSizeMultiplicator,\n\t\t\t\t\t\tmaxShapesPerOctreeNode\n\t\t\t\t\t);\n\t\t\t\t\toctree.octree.parseOct(octContent);\n\t\t\t\t\toctree.triangles.length = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch(e) {\n\n\t\t\t} \n\t\t\t\n\t\t\tif (!fetched) {\n\t\t\t\tconsole.log(\n\t\t\t\t\t\"Did not find an octree to load from \" +\n\t\t\t\t\t\toctPath +\n\t\t\t\t\t\t\". Generating it from scratch.\"\n\t\t\t\t);\n\t\t\t\tlet minVec = vec3.fromValues(Infinity, Infinity, Infinity);\n\t\t\t\tlet maxVec = vec3.fromValues(-Infinity, -Infinity, -Infinity);\n\t\t\t\tfor (let tri of triangles) {\n\t\t\t\t\tfor (let vertex of tri.getTransformedVertices()) {\n\t\t\t\t\t\tvec3.max(maxVec, maxVec, vertex);\n\t\t\t\t\t\tvec3.min(minVec, minVec, vertex);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\toctree.octree = new Octree(\n\t\t\t\t\tminVec,\n\t\t\t\t\tmaxVec,\n\t\t\t\t\tsmallestOctreeNodeSizeMultiplicator,\n\t\t\t\t\tmaxShapesPerOctreeNode\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\twhile (\n\t\t\toctree.octree != undefined &&\n\t\t\toctree.triangles != undefined &&\n\t\t\toctree.triangles.length > 0 &&\n\t\t\tDate.now() - startTime < timeLimit\n\t\t) {\n\t\t\toctree.octree.addShape(octree.triangles.pop());\n\t\t}\n\n\t\tif (octree.triangles != undefined && octree.triangles.length == 0) {\n\t\t\toctree.octree.prune();\n\n\t\t\t// console.groupCollapsed(\"octree for \" + path);\n\t\t\t// octree.octree.print();\n\t\t\t// console.groupEnd();\n\t\t}\n\n\t\treturn {\n\t\t\toctree: octree.octree,\n\t\t\tdoneLoading:\n\t\t\t\toctree.triangles != undefined && octree.triangles.length == 0,\n\t\t};\n\t}\n\n\tdownloadOctrees() {\n\t\tfor (let octree of this.octreeMap) {\n\t\t\tlet data = octree[1].octree.getDataString();\n\t\t\tWebUtils.DownloadFile(\n\t\t\t\toctree[0].split(\"/\").pop().split(\".\")[0] + \".oct\",\n\t\t\t\tdata\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate async parseObjContent(meshPath: string): Promise<Float32Array> {\n\t\t/*\n\t\thttps://webglfundamentals.org/webgl/lessons/webgl-load-obj.html\n\t\t*/\n\n\t\tconst response = await fetch(meshPath);\n\t\tconst objContent = await response.text();\n\n\t\tconst lines = objContent.split(\"\\n\");\n\t\tlet vertexPositions = new Array<vec3>();\n\t\tlet vertexTexCoords = new Array<vec2>();\n\t\tlet vertexNormals = new Array<vec3>();\n\t\tlet vertices = new Array<{\n\t\t\tposIndex: number;\n\t\t\ttexCoordIndex: number;\n\t\t\tnormalIndex: number;\n\t\t\tmtlIndex: number;\n\t\t}>();\n\t\tlet mtls = new Map<string, {diffuseColor: vec3, specularColor: vec3, emissionColor: vec3, dissolve: number, spriteIndex: number}>();\n\t\tlet usingMtl: string = \"\";\n\n\t\tfor (let line of lines) {\n\t\t\tline = line.trim();\n\n\t\t\tif (line.startsWith(\"mtllib\")) {\n\t\t\t\tconst mtlName = line.split(/\\s+/).filter((element) => {\n\t\t\t\t\treturn element != \"mtllib\";\n\t\t\t\t});\n\t\t\t\tif (mtlName.length == 1) {\n\t\t\t\t\tlet mtlPath = meshPath.substring(0, meshPath.lastIndexOf(\"/\") + 1) + mtlName;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst mtlResponse = await fetch(mtlPath);\n\n\t\t\t\t\t\tif (mtlResponse.ok) {\n\t\t\t\t\t\t\tconst mtlContent = await mtlResponse.text();\n\t\t\t\t\t\t\tlet lastMtl: string = \"\";\n\t\t\t\t\t\t\tlet index = 0;\n\t\n\t\t\t\t\t\t\tfor (const row of mtlContent.split(\"\\n\")) {\n\t\t\t\t\t\t\t\tif (row.startsWith(\"newmtl\")) {\n\t\t\t\t\t\t\t\t\tlet splitRow = row.split(/\\s+/);\n\t\t\t\t\t\t\t\t\tif (splitRow.length > 1) {\n\t\t\t\t\t\t\t\t\t\tlastMtl = splitRow[1];\n\t\t\t\t\t\t\t\t\t\tmtls.set(lastMtl, {diffuseColor: vec3.create(), specularColor: vec3.create(), emissionColor: vec3.create(), dissolve: 1.0, spriteIndex: index});\n\t\t\t\t\t\t\t\t\t\tindex++;\n\t\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (row.startsWith(\"Kd\") && lastMtl != \"\") {\n\t\t\t\t\t\t\t\t\tconst colorValues = row.split(/\\s+/).filter((element) => {\n\t\t\t\t\t\t\t\t\t\treturn element != \"Kd\";\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tif (colorValues.length > 2) {\n\t\t\t\t\t\t\t\t\t\tvec3.set(mtls.get(lastMtl).diffuseColor, parseFloat(colorValues[0]), parseFloat(colorValues[1]), parseFloat(colorValues[2]));\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (row.startsWith(\"Ks\") && lastMtl != \"\") {\n\t\t\t\t\t\t\t\t\tconst colorValues = row.split(/\\s+/).filter((element) => {\n\t\t\t\t\t\t\t\t\t\treturn element != \"Ks\";\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tif (colorValues.length > 2) {\n\t\t\t\t\t\t\t\t\t\tvec3.set(mtls.get(lastMtl).specularColor, parseFloat(colorValues[0]), parseFloat(colorValues[1]), parseFloat(colorValues[2]));\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (row.startsWith(\"Ke\") && lastMtl != \"\") {\n\t\t\t\t\t\t\t\t\tconst colorValues = row.split(/\\s+/).filter((element) => {\n\t\t\t\t\t\t\t\t\t\treturn element != \"Ke\";\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tif (colorValues.length > 2) {\n\t\t\t\t\t\t\t\t\t\tvec3.set(mtls.get(lastMtl).emissionColor, parseFloat(colorValues[0]), parseFloat(colorValues[1]), parseFloat(colorValues[2]));\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (row.startsWith(\"d\") && lastMtl != \"\") {\n\t\t\t\t\t\t\t\t\tconst colorValues = row.split(/\\s+/).filter((element) => {\n\t\t\t\t\t\t\t\t\t\treturn element != \"d\";\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tif (colorValues.length > 0) {\n\t\t\t\t\t\t\t\t\t\tmtls.get(lastMtl).dissolve = parseFloat(colorValues[0]);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tlet diffuseTextureData = new Uint8Array(index * 4);\n\t\t\t\t\t\t\tfor (let mtl of mtls) {\n\t\t\t\t\t\t\t\tdiffuseTextureData[mtl[1].spriteIndex * 4 + 0] = mtl[1].diffuseColor[0] * 255;\n\t\t\t\t\t\t\t\tdiffuseTextureData[mtl[1].spriteIndex * 4 + 1] = mtl[1].diffuseColor[1] * 255;\n\t\t\t\t\t\t\t\tdiffuseTextureData[mtl[1].spriteIndex * 4 + 2] = mtl[1].diffuseColor[2] * 255;\n\t\t\t\t\t\t\t\tdiffuseTextureData[mtl[1].spriteIndex * 4 + 3] = mtl[1].dissolve * 255;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlet tempTexture = new Texture(false);\n\t\t\t\t\t\t\ttempTexture.setTextureData(diffuseTextureData, index, 1);\n\t\t\t\t\t\t\tthis.textureStore.setTexture(mtlPath, tempTexture);\n\t\n\t\t\t\t\t\t\tlet specularTextureData = new Uint8Array(index * 4);\n\t\t\t\t\t\t\tfor (let mtl of mtls) {\n\t\t\t\t\t\t\t\tspecularTextureData[mtl[1].spriteIndex * 4 + 0] = mtl[1].specularColor[0] * 255;\n\t\t\t\t\t\t\t\tspecularTextureData[mtl[1].spriteIndex * 4 + 1] = mtl[1].specularColor[1] * 255;\n\t\t\t\t\t\t\t\tspecularTextureData[mtl[1].spriteIndex * 4 + 2] = mtl[1].specularColor[2] * 255;\n\t\t\t\t\t\t\t\tspecularTextureData[mtl[1].spriteIndex * 4 + 3] = 255;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttempTexture = new Texture(false);\n\t\t\t\t\t\t\ttempTexture.setTextureData(specularTextureData, index, 1);\n\t\t\t\t\t\t\tthis.textureStore.setTexture(mtlPath.substring(0, mtlPath.length - 4) + \"_spec.mtl\", tempTexture);\n\t\n\t\t\t\t\t\t\tlet emissionTextureData = new Uint8Array(index * 4);\n\t\t\t\t\t\t\tfor (let mtl of mtls) {\n\t\t\t\t\t\t\t\temissionTextureData[mtl[1].spriteIndex * 4 + 0] = mtl[1].emissionColor[0] * 255;\n\t\t\t\t\t\t\t\temissionTextureData[mtl[1].spriteIndex * 4 + 1] = mtl[1].emissionColor[1] * 255;\n\t\t\t\t\t\t\t\temissionTextureData[mtl[1].spriteIndex * 4 + 2] = mtl[1].emissionColor[2] * 255;\n\t\t\t\t\t\t\t\temissionTextureData[mtl[1].spriteIndex * 4 + 3] = 255;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttempTexture = new Texture(false);\n\t\t\t\t\t\t\ttempTexture.setTextureData(emissionTextureData, index, 1);\n\t\t\t\t\t\t\tthis.textureStore.setTexture(mtlPath.substring(0, mtlPath.length - 4) + \"_emission.mtl\", tempTexture);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch(e) {\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (line.startsWith(\"usemtl\") && mtls.size > 0) {\n\t\t\t\tusingMtl = line.split(/\\s+/)[1];\n\t\t\t}\n\t\t\telse if (line.startsWith(\"vt\")) {\n\t\t\t\t// Texture coordinates\n\t\t\t\tconst coords = line.split(/\\s+/).filter((element) => {\n\t\t\t\t\treturn element != \"vt\";\n\t\t\t\t});\n\t\t\t\tvertexTexCoords.push(\n\t\t\t\t\tvec2.fromValues(parseFloat(coords[0]), parseFloat(coords[1]))\n\t\t\t\t);\n\t\t\t} else if (line.startsWith(\"vn\")) {\n\t\t\t\t// Normal\n\t\t\t\tconst coords = line.split(/\\s+/).filter((element) => {\n\t\t\t\t\treturn element != \"vn\";\n\t\t\t\t});\n\t\t\t\tvertexNormals.push(\n\t\t\t\t\tvec3.fromValues(\n\t\t\t\t\t\tparseFloat(coords[0]),\n\t\t\t\t\t\tparseFloat(coords[1]),\n\t\t\t\t\t\tparseFloat(coords[2]),\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t} else if (line.startsWith(\"v\")) {\n\t\t\t\t// Position\n\t\t\t\tconst coords = line.split(/\\s+/).filter((element) => {\n\t\t\t\t\treturn element != \"v\";\n\t\t\t\t});\n\t\t\t\tvertexPositions.push(\n\t\t\t\t\tvec3.fromValues(\n\t\t\t\t\t\tparseFloat(coords[0]),\n\t\t\t\t\t\tparseFloat(coords[1]),\n\t\t\t\t\t\tparseFloat(coords[2]),\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t} else if (line.startsWith(\"f\")) {\n\t\t\t\t// Faces\n\t\t\t\tconst coords = line.split(/\\s+/).filter((element) => {\n\t\t\t\t\treturn element != \"f\";\n\t\t\t\t});\n\t\t\t\tfor (let i = 0; i < coords.length - 2; i++) {\n\t\t\t\t\tfor (let j = 0; j < 3; j++) {\n\t\t\t\t\t\tlet index = j == 0 ? 0 : i + j; // 0 if j is zero, otherwize i +j\n\t\t\t\t\t\tconst indices = coords[index].split(\"/\");\n\n\t\t\t\t\t\tconst last = vertices.push({\n\t\t\t\t\t\t\tposIndex: NaN,\n\t\t\t\t\t\t\ttexCoordIndex: NaN,\n\t\t\t\t\t\t\tnormalIndex: NaN,\n\t\t\t\t\t\t\tmtlIndex: NaN\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif (indices.length > 0) {\n\t\t\t\t\t\t\tvertices[last - 1].posIndex = parseInt(indices[0]) - 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (indices.length > 1) {\n\t\t\t\t\t\t\tvertices[last - 1].texCoordIndex = parseInt(indices[1]) - 1; // Can be empty, texCoordIndex will then be NaN\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (indices.length > 2) {\n\t\t\t\t\t\t\tvertices[last - 1].normalIndex = parseInt(indices[2]) - 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (usingMtl != \"\") {\n\t\t\t\t\t\t\tconst mtl = mtls.get(usingMtl);\n\t\t\t\t\t\t\tif (mtl != undefined) {\n\t\t\t\t\t\t\t\tvertices[last - 1].mtlIndex = mtl.spriteIndex;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tconsole.warn(\"usemtl \" + usingMtl + \", there is no such mtl\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (line.startsWith(\"#\")) {\n\t\t\t\t// A comment, ignore\n\t\t\t} else if (line.length > 0) {\n\t\t\t\t// Unhandled keywords\n\t\t\t\t// console.warn(\"OBJ loader: Unhandled keyword \" + line.split(/\\s+/)[0]);\n\t\t\t}\n\t\t}\n\n\t\tlet returnArr = new Float32Array(vertices.length * 8); // 3 * pos + 3 * norm + 2 * tx\n\n\t\tfor (let i = 0; i < vertices.length; i++) {\n\t\t\tif (!isNaN(vertices[i].posIndex)) {\n\t\t\t\treturnArr[i * 8] = vertexPositions[vertices[i].posIndex][0];\n\t\t\t\treturnArr[i * 8 + 1] = vertexPositions[vertices[i].posIndex][1];\n\t\t\t\treturnArr[i * 8 + 2] = vertexPositions[vertices[i].posIndex][2];\n\t\t\t} else {\n\t\t\t\treturnArr[i * 8] = 0.0;\n\t\t\t\treturnArr[i * 8 + 1] = 0.0;\n\t\t\t\treturnArr[i * 8 + 2] = 0.0;\n\t\t\t}\n\n\t\t\tif (!isNaN(vertices[i].normalIndex)) {\n\t\t\t\treturnArr[i * 8 + 3] = vertexNormals[vertices[i].normalIndex][0];\n\t\t\t\treturnArr[i * 8 + 4] = vertexNormals[vertices[i].normalIndex][1];\n\t\t\t\treturnArr[i * 8 + 5] = vertexNormals[vertices[i].normalIndex][2];\n\t\t\t} else {\n\t\t\t\treturnArr[i * 8 + 3] = 1.0;\n\t\t\t\treturnArr[i * 8 + 4] = 0.0;\n\t\t\t\treturnArr[i * 8 + 5] = 0.0;\n\t\t\t}\n\n\t\t\tif (!isNaN(vertices[i].mtlIndex)) {\n\t\t\t\treturnArr[i * 8 + 6] = vertices[i].mtlIndex / mtls.size + (0.5 / mtls.size);\n\t\t\t\treturnArr[i * 8 + 7] = 0.5;\n\t\t\t}\n\t\t\telse if (!isNaN(vertices[i].texCoordIndex)) {\n\t\t\t\treturnArr[i * 8 + 6] = vertexTexCoords[vertices[i].texCoordIndex][0];\n\t\t\t\treturnArr[i * 8 + 7] = vertexTexCoords[vertices[i].texCoordIndex][1];\n\t\t\t} else {\n\t\t\t\treturnArr[i * 8 + 6] = 0.0;\n\t\t\t\treturnArr[i * 8 + 7] = 0.0;\n\t\t\t}\n\t\t}\n\t\treturn returnArr;\n\t}\n}\n","import CubeMap from \"../Rendering/Textures/CubeMap\";\nimport Texture from \"../Rendering/Textures/Texture\";\n\nexport default class TextureStore {\n\tprivate textures: Map<string, Texture>;\n\tprivate cubeMaps: Map<string, CubeMap>;\n\n\tconstructor() {\n\t\tthis.textures = new Map<string, Texture>();\n\t\tthis.cubeMaps = new Map<string, CubeMap>();\n\t}\n\n\tsetTexture(path: string, texture: Texture) {\n\t\tthis.textures.set(path, texture);\n\t}\n\n\tgetTexture(path: string): Texture {\n\t\tlet tex = this.textures.get(path);\n\t\tif (tex) {\n\t\t\treturn tex;\n\t\t}\n\n\t\tlet newTexture = new Texture();\n\t\tconst CSSPrefix = \"CSS:\";\n\t\tif (path.startsWith(CSSPrefix)) {\n\t\t\t// Hex value color\n\t\t\tnewTexture.createFromCSSColorValue(path.substring(CSSPrefix.length));\n\t\t}\n\t\telse {\n\t\t\tnewTexture.loadFromFile(path);\n\t\t}\n\n\t\tthis.textures.set(path, newTexture);\n\t\treturn newTexture;\n\t}\n\n\tgetCubeMap(path: string): CubeMap {\n\t\tlet cubeMap = this.cubeMaps.get(path);\n\t\tif (cubeMap) {\n\t\t\treturn cubeMap;\n\t\t}\n\n\t\tlet newCubeMap = new CubeMap();\n\t\tnewCubeMap.loadCubemap([\n\t\t\tpath + \"/right.png\",\n\t\t\tpath + \"/left.png\",\n\t\t\tpath + \"/bottom.png\",\n\t\t\tpath + \"/top.png\",\n\t\t\tpath + \"/front.png\",\n\t\t\tpath + \"/back.png\",\n\t\t]);\n\t\tthis.cubeMaps.set(path, newCubeMap);\n\t\treturn newCubeMap;\n\t}\n}\n","export default class AudioPlayer {\n\tsound_effects: object;\n\tsound_effects_volume_multilpliers: object;\n\tsongs: object;\n\tsongs_volume_multilpliers: object;\n\tactive: boolean; //set to true when user has interacted with document\n\tsound_effects_dir: string;\n\tsongs_dir: string;\n\n\tconstructor() {\n\t\tthis.sound_effects_dir = \"Assets/Audio/Effects\";\n\t\tthis.songs_dir = \"Assets/Audio/Music\";\n\n\t\tthis.sound_effects = {};\n\t\tthis.songs = {};\n\t\tthis.sound_effects_volume_multilpliers = {};\n\t\tthis.songs_volume_multilpliers = {};\n\n\t\tthis.active = false;\n\n\t\tconst sound_effect_files = [\n\t\t];\n\t\tconst sound_effect_volume_multilpliers_list = [\n\t\t];\n\t\tlet count = 0;\n\t\tfor (const file of sound_effect_files) {\n\t\t\tthis.sound_effects[file.split(\".\")[0]] = new Audio(\n\t\t\t\tthis.sound_effects_dir + \"/\" + file\n\t\t\t);\n\t\t\tthis.sound_effects_volume_multilpliers[file.split(\".\")[0]] =\n\t\t\t\tsound_effect_volume_multilpliers_list[count];\n\t\t\tcount++;\n\t\t}\n\n\t\tconst song_files = [\n\t\t];\n\t\tconst song_files_volume_multilpliers_list = [];\n\t\tcount = 0;\n\t\tfor (const file of song_files) {\n\t\t\tthis.songs[file.split(\".\")[0]] = new Audio(this.songs_dir + \"/\" + file);\n\t\t\tthis.songs_volume_multilpliers[file.split(\".\")[0]] =\n\t\t\t\tsong_files_volume_multilpliers_list[count];\n\t\t\tcount++;\n\t\t}\n\n\t\tfor (let sound in this.sound_effects) {\n\t\t\tthis.sound_effects[sound].preload = \"auto\";\n\t\t}\n\t\tfor (let sound in this.songs) {\n\t\t\tthis.songs[sound].preload = \"auto\";\n\t\t}\n\n\t\tthis.setMusicVolume(1.0);\n\t\tthis.setSoundEffectVolume(1.0);\n\t}\n\n\tplayAudio(key, loop, volumeMultiplier?) {\n\t\tif (!volumeMultiplier) {\n\t\t\tvolumeMultiplier = 1;\n\t\t}\n\t\tif (this.sound_effects[key]) {\n\t\t\tthis.sound_effects[key].loop = loop;\n\t\t\tthis.active && this.sound_effects[key].play();\n\t\t} else if (this.songs[key]) {\n\t\t\tthis.songs[key].loop = loop;\n\t\t\tthis.active && this.songs[key].play();\n\t\t}\n\t}\n\n\tsetAudioVolume(key, volume) {\n\t\tif (\n\t\t\tthis.sound_effects[key] &&\n\t\t\tthis.sound_effects_volume_multilpliers[key]\n\t\t) {\n\t\t\tthis.sound_effects[key].volume = Math.min(\n\t\t\t\tvolume * this.sound_effects_volume_multilpliers[key],\n\t\t\t\t1\n\t\t\t);\n\t\t} else if (this.songs[key] && this.songs_volume_multilpliers[key]) {\n\t\t\tthis.songs[key].volume = Math.min(\n\t\t\t\tvolume * this.songs_volume_multilpliers[key],\n\t\t\t\t1\n\t\t\t);\n\t\t}\n\t}\n\n\tsetMusicVolume(volume: number) {\n\t\tObject.keys(this.songs).forEach((key) => {\n\t\t\tthis.songs[key].volume = Math.min(\n\t\t\t\tvolume * this.songs_volume_multilpliers[key],\n\t\t\t\t1\n\t\t\t);\n\t\t});\n\t}\n\n\tsetSoundEffectVolume(volume: number) {\n\t\tObject.keys(this.sound_effects).forEach((key) => {\n\t\t\tthis.sound_effects[key].volume = Math.min(\n\t\t\t\tvolume * this.sound_effects_volume_multilpliers[key],\n\t\t\t\t1\n\t\t\t);\n\t\t});\n\t}\n\n\tsetAudioTime(key, time) {\n\t\tif (this.sound_effects[key]) {\n\t\t\tthis.sound_effects[key].currentTime = time;\n\t\t} else if (this.songs[key]) {\n\t\t\tthis.songs[key].currentTime = time;\n\t\t}\n\t}\n\n\tpauseAudio(key) {\n\t\tif (this.sound_effects[key]) {\n\t\t\tthis.sound_effects[key].pause();\n\t\t} else if (this.songs[key]) {\n\t\t\tthis.songs[key].pause();\n\t\t}\n\t}\n\n\tstopAll() {\n\t\tObject.keys(this.songs).forEach((key) => {\n\t\t\tthis.songs[key].pause();\n\t\t\tthis.songs[key].currentTime = 0;\n\t\t});\n\n\t\tObject.keys(this.sound_effects).forEach((key) => {\n\t\t\tthis.sound_effects[key].pause();\n\t\t\tthis.sound_effects[key].currentTime = 0;\n\t\t});\n\t}\n}\n","import { mat4, vec3 } from \"gl-matrix\";\nimport GraphicsObject from \"../../Objects/GraphicsObjects/GraphicsObject\";\nimport OBB from \"../../Physics/Shapes/OBB\";\nimport { Component, ComponentTypeEnum } from \"./Component\";\n\nexport default class BoundingBoxComponent extends Component {\n\tboundingBox: OBB;\n\n\tconstructor() {\n\t\tsuper(ComponentTypeEnum.BOUNDINGBOX);\n\n\t\tthis.boundingBox = new OBB();\n\t}\n\n\t/**\n\t * Sets up the bounding box based on the vertices in a graphics object\n\t * @param graphicsObj The graphics object\n\t */\n\tsetup(graphicsObj: GraphicsObject) {\n\t\tlet minVec = vec3.fromValues(Infinity, Infinity, Infinity);\n\t\tlet maxVec = vec3.fromValues(-Infinity, -Infinity, -Infinity);\n\n\t\tlet vertices = graphicsObj.getVertexPositions();\n\n\t\tfor (let vertex of vertices) {\n\t\t\tvec3.max(maxVec, maxVec, vertex);\n\t\t\tvec3.min(minVec, minVec, vertex);\n\t\t}\n\n\t\tthis.boundingBox.setMinAndMaxVectors(minVec, maxVec);\n\t}\n\n\t/**\n\t * Update the transform matrix used for the bounding box\n\t * @param matrix Optional: Will set a new matrix to use for the bounding box. If no matrix is sent, it will use the previously set matrix but mark the box to be updated.\n\t */\n\tupdateTransformMatrix(matrix?: mat4) {\n\t\tif (matrix) {\n\t\t\tthis.boundingBox.setTransformMatrix(matrix);\n\t\t} else {\n\t\t\tthis.boundingBox.setUpdateNeeded();\n\t\t}\n\t}\n}\n","import { Component, ComponentTypeEnum } from \"./Component\";\n\nexport default class CollisionComponent extends Component {\n\t/**\n\t * True if this object never moves\n\t */\n\tisStatic: boolean; \n\t/**\n\t * True if this object is not effected by collisions\n\t */\n\tisImmovable: boolean;\n\t/**\n\t * True if this should rotate based on collisions \n\t */\n\tisDynamic: boolean; \n\n\tcollisionCoefficient: number;\n\tfrictionCoefficient: number;\n\tmass: number;\n\n\tconstructor() {\n\t\tsuper(ComponentTypeEnum.COLLISION);\n\t\tthis.isStatic = false;\n\t\tthis.isImmovable = false;\n\t\tthis.isDynamic = false;\n\t\tthis.collisionCoefficient = 0.0;\n\t\tthis.frictionCoefficient = 0.0;\n\t\tthis.mass = 1.0;\n\t}\n}\n","import ObjectPlacer from \"../../../Game/ObjectPlacer\";\nimport Div from \"../../Rendering/GUI/Objects/Div\";\nimport EditText from \"../../Rendering/GUI/Objects/Text/EditText\";\nimport { OverlayRendering } from \"../../Rendering/GUI/OverlayRendering\";\nimport { input } from \"../../../Game/GameMachine\";\nimport Checkbox from \"../../Rendering/GUI/Objects/Checkbox\";\n\nexport enum ComponentTypeEnum {\n\tBOUNDINGBOX,\n\tCAMERAFOCUS,\n\tCOLLISION,\n\tGRAPHICS,\n\tMESHCOLLISION,\n\tMOVEMENT,\n\tPARTICLESPAWNER,\n\tPOINTLIGHT,\n\tPOSITION,\n\tPOSITIONPARENT,\n}\n\nexport class Component {\n\tprivate _type: ComponentTypeEnum;\n\n\tconstructor(type: ComponentTypeEnum) {\n\t\tthis._type = type;\n\t}\n\n\tdestructor(): void {}\n\n\tget type(): ComponentTypeEnum {\n\t\treturn this._type;\n\t}\n\n\tupdateGui(\n\t\toverlayRendering: OverlayRendering,\n\t\tparentDiv: Div,\n\t\tobjectPlacer: ObjectPlacer\n\t) {}\n\n\tprotected addTextEdit(overlayRendering: OverlayRendering, div: Div, label: string, variable: string[], index?: number) {\n\t\tlet propEditText = overlayRendering.getNewEditText(div);\n\t\tpropEditText.textString = label;\n\t\tpropEditText.textSize = 20;\n\t\tpropEditText.scaleWithWindow = true;\n\n\t\tlet object = this;\n\t\tfor (let step of variable) {\n\t\t\tobject = object[step];\n\t\t\tif (object == undefined) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (index == undefined) {\n\t\t\tpropEditText.getInputElement().value = object.toString();\n\t\t}\n\t\telse {\n\t\t\tpropEditText.getInputElement().value = object[index].toString();\n\t\t}\n\t};\n\n\tprotected addCheckbox(overlayRendering: OverlayRendering, div: Div, label: string, variable: string[], index?: number) {\n\t\tlet propCheckbox = overlayRendering.getNewCheckbox(div);\n\t\tpropCheckbox.textString = label;\n\t\tpropCheckbox.textSize = 20;\n\t\tpropCheckbox.scaleWithWindow = true;\n\n\t\tlet object = this;\n\t\tfor (let step of variable) {\n\t\t\tobject = object[step];\n\t\t\tif (object == undefined) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (index == undefined) {\n\t\t\tpropCheckbox.getInputElement().checked = Boolean(object);\n\t\t}\n\t\telse {\n\t\t\tpropCheckbox.getInputElement().checked = Boolean(object[index]);\n\t\t}\n\t}\n\n\tprotected updateTextEdit(div: Div, label: string, variable: string[], index?: number) {\n\t\tfor (let child of div.children) {\n\t\t\tif (child.textString == label) {\n\t\t\t\tif ((<EditText>(child)).getInputElement() != document.activeElement) {\n\t\t\t\t\tlet object = this;\n\t\t\t\t\tfor (let step of variable) {\n\t\t\t\t\t\tobject = object[step];\n\t\t\t\t\t\tif (object == undefined) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (index == undefined) {\n\t\t\t\t\t\t(<EditText>(child)).getInputElement().value = object.toString();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t(<EditText>(child)).getInputElement().value = object[index].toString();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlet val: any = parseFloat((<EditText>(child)).getInputElement().value);\n\t\t\t\t\tif (input.mouseRightClicked) {\n\t\t\t\t\t\tlet mouseChange = (input.mousePosition.x - input.mousePosition.previousX);\n\t\t\t\t\t\tinput.mousePosition.previousX = input.mousePosition.x;\n\t\t\t\t\t\tif (input.keys[\"SHIFT\"]) {\n\t\t\t\t\t\t\tval += (mouseChange) * 0.01;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tval += (mouseChange) * 0.1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tval = Math.round(val * 100) / 100;\n\t\t\t\t\t\t(<EditText>(child)).getInputElement().value = val.toString();\n\t\t\t\t\t}\n\n\t\t\t\t\tlet object = this;\n\t\t\t\t\tlet prev = null;\n\t\t\t\t\tfor (let step of variable) {\n\t\t\t\t\t\tprev = object;\n\t\t\t\t\t\tobject = object[step];\n\t\t\t\t\t\tif (object == undefined) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (index == undefined && typeof(object) == \"number\") {\n\t\t\t\t\t\tprev[variable[variable.length - 1]] = val;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (typeof(object[index]) == \"number\") {\n\t\t\t\t\t\t\tobject[index] = val;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected updateCheckbox(div: Div, label: string, variable: string[], index?: number) {\n\t\tfor (let child of div.children) {\n\t\t\tif (child.textString == label) {\n\t\t\t\tif ((<Checkbox>(child)).getInputElement() != document.activeElement) {\n\t\t\t\t\tlet object = this;\n\t\t\t\t\tfor (let step of variable) {\n\t\t\t\t\t\tobject = object[step];\n\t\t\t\t\t\tif (object == undefined) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (index == undefined) {\n\t\t\t\t\t\t(<Checkbox>(child)).getInputElement().checked = Boolean(object);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t(<Checkbox>(child)).getInputElement().checked = Boolean(object[index]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlet val: any = (<Checkbox>(child)).getInputElement().checked;\n\t\t\t\t\tlet object = this;\n\t\t\t\t\tlet prev = null;\n\t\t\t\t\tfor (let step of variable) {\n\t\t\t\t\t\tprev = object;\n\t\t\t\t\t\tobject = object[step];\n\t\t\t\t\t\tif (object == undefined) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (index == undefined && typeof(object) == \"boolean\") {\n\t\t\t\t\t\tprev[variable[variable.length - 1]] = val;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (typeof(object[index]) == \"boolean\") {\n\t\t\t\t\t\t\tobject[index] = val;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","import ObjectPlacer from \"../../../Game/ObjectPlacer\";\nimport Div from \"../../Rendering/GUI/Objects/Div\";\nimport GraphicsBundle from \"../../Objects/GraphicsBundle\";\nimport { OverlayRendering } from \"../../Rendering/GUI/OverlayRendering\";\nimport { Component, ComponentTypeEnum } from \"./Component\";\nimport Game from \"../../../Game/States/Game\";\nimport { vec3 } from \"gl-matrix\";\n\nexport default class GraphicsComponent extends Component {\n\tobject: GraphicsBundle;\n\n\tconstructor(object: GraphicsBundle) {\n\t\tsuper(ComponentTypeEnum.GRAPHICS);\n\t\tthis.object = object;\n\t}\n\n\tdestructor(): void {\n\t\tGame.getInstanceNoSa().rendering.scene.deleteGraphicsBundle(this.object);\n\t}\n\n\tupdateGui(\n\t\toverlayRendering: OverlayRendering,\n\t\tparentDiv: Div,\n\t\tobjectPlacer: ObjectPlacer\n\t) {\n\t\tfor (let i = 1; i < parentDiv.children.length; i++) {\n\t\t\tif (parentDiv.children[i].textString == ComponentTypeEnum[this.type]) {\n\t\t\t\t// Next should be a div that should hold the text edits\n\t\t\t\tif ((<Div>(parentDiv.children[i+1])).children.length == 0) {\n\t\t\t\t\tthis.addTextEdit(overlayRendering, <Div> parentDiv.children[i+1], \"EmissionR\", [\"object\",\"emissionColor\"], 0);\n\t\t\t\t\tthis.addTextEdit(overlayRendering, <Div> parentDiv.children[i+1], \"EmissionG\", [\"object\",\"emissionColor\"], 1);\n\t\t\t\t\tthis.addTextEdit(overlayRendering, <Div> parentDiv.children[i+1], \"EmissionB\", [\"object\",\"emissionColor\"], 2);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.updateTextEdit(<Div> parentDiv.children[i+1], \"EmissionR\", [\"object\",\"emissionColor\"], 0);\n\t\t\t\t\tthis.updateTextEdit(<Div> parentDiv.children[i+1], \"EmissionG\", [\"object\",\"emissionColor\"], 1);\n\t\t\t\t\tthis.updateTextEdit(<Div> parentDiv.children[i+1], \"EmissionB\", [\"object\",\"emissionColor\"], 2);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","import { Component, ComponentTypeEnum } from \"./Component\";\nimport Triangle from \"../../Physics/Shapes/Triangle\";\nimport GraphicsObject from \"../../Objects/GraphicsObjects/GraphicsObject\";\nimport Octree from \"../../Objects/Octree\";\nimport { vec3 } from \"gl-matrix\";\n\nexport default class MeshCollisionComponent extends Component {\n\toctree: Octree;\n\n\tconstructor(octree: Octree, graphicsObject?: GraphicsObject) {\n\t\tsuper(ComponentTypeEnum.MESHCOLLISION);\n\t\tthis.octree = octree;\n\n\t\tif (graphicsObject) {\n\t\t\tthis.setup(graphicsObject, 0.1, 100);\n\t\t}\n\t}\n\n\t/**\n\t * Sets up the triangles based on the vertices in a graphics object\n\t * @param graphicsObj The graphics object\n\t */\n\tprivate setup(\n\t\tgraphicsObj: GraphicsObject,\n\t\tsmallestNodeSizeMultiplicator: number,\n\t\tmaxShapesPerNode: number\n\t) {\n\t\tlet triangles = new Array<Triangle>();\n\t\tgraphicsObj.setupTriangles(triangles);\n\n\t\tlet minVec = vec3.fromValues(Infinity, Infinity, Infinity);\n\t\tlet maxVec = vec3.fromValues(-Infinity, -Infinity, -Infinity);\n\t\tfor (let tri of triangles) {\n\t\t\tfor (let vertex of tri.getTransformedVertices()) {\n\t\t\t\tvec3.max(maxVec, maxVec, vertex);\n\t\t\t\tvec3.min(minVec, minVec, vertex);\n\t\t\t}\n\t\t}\n\t\tthis.octree = new Octree(\n\t\t\tminVec,\n\t\t\tmaxVec,\n\t\t\tsmallestNodeSizeMultiplicator,\n\t\t\tmaxShapesPerNode\n\t\t);\n\n\t\tthis.octree.addShapes(triangles);\n\t\tthis.octree.prune();\n\t}\n}\n","import { quat, vec3 } from \"gl-matrix\";\nimport { Component, ComponentTypeEnum } from \"./Component\";\n\nexport default class MovementComponent extends Component {\n\tconstantAcceleration: vec3;\n\taccelerationDirection: vec3;\n\tacceleration: number;\n\tvelocity: vec3;\n\tdrag: number;\n\tonGround: boolean;\n\tjumpPower: number;\n\tjumpRequested: boolean;\n\tjumpAllowed: boolean;\n\tmomentum: quat;\n\n\tconstructor() {\n\t\tsuper(ComponentTypeEnum.MOVEMENT);\n\t\tthis.constantAcceleration = vec3.fromValues(0.0, -9.8, 0.0);\n\t\tthis.accelerationDirection = vec3.create();\n\t\tthis.acceleration = 6.0;\n\t\tthis.velocity = vec3.create();\n\t\tthis.drag = 4.0;\n\t\tthis.onGround = false;\n\t\tthis.jumpPower = 5.0;\n\t\tthis.jumpRequested = false;\n\t\tthis.jumpAllowed = false;\n\t\tthis.momentum = quat.create();\n\t}\n}\n","import { vec3 } from \"gl-matrix\";\nimport ObjectPlacer from \"../../../Game/ObjectPlacer\";\nimport Game from \"../../../Game/States/Game\";\nimport Div from \"../../Rendering/GUI/Objects/Div\";\nimport PointLight from \"../../Rendering/Lighting/PointLight\";\nimport { OverlayRendering } from \"../../Rendering/GUI/OverlayRendering\";\nimport { Component, ComponentTypeEnum } from \"./Component\";\n\nexport default class PointLightComponent extends Component {\n\tpointLight: PointLight;\n\tposOffset: vec3;\n\n\tconstructor(pointLight: PointLight) {\n\t\tsuper(ComponentTypeEnum.POINTLIGHT);\n\t\tthis.pointLight = pointLight;\n\t\tthis.posOffset = vec3.create();\n\t}\n\n\tdestructor(): void {\n\t\tGame.getInstanceNoSa().rendering.scene.deletePointLight(this.pointLight);\n\t}\n\n\tupdateGui(\n\t\toverlayRendering: OverlayRendering,\n\t\tparentDiv: Div,\n\t\tobjectPlacer: ObjectPlacer\n\t) {\n\t\tfor (let i = 1; i < parentDiv.children.length; i++) {\n\t\t\tif (parentDiv.children[i].textString == ComponentTypeEnum[this.type]) {\n\t\t\t\t// Next should be a div that should hold the text edits\n\t\t\t\tif ((<Div>(parentDiv.children[i+1])).children.length == 0) {\n\t\t\t\t\tthis.addTextEdit(overlayRendering, <Div> parentDiv.children[i+1], \"R\", [\"pointLight\", \"colour\"], 0);\n\t\t\t\t\tthis.addTextEdit(overlayRendering, <Div> parentDiv.children[i+1], \"G\", [\"pointLight\", \"colour\"], 1);\n\t\t\t\t\tthis.addTextEdit(overlayRendering, <Div> parentDiv.children[i+1], \"B\", [\"pointLight\", \"colour\"], 2);\n\n\t\t\t\t\tthis.addTextEdit(overlayRendering, <Div> parentDiv.children[i+1], \"PosOffsetX\", [\"posOffset\"], 0);\n\t\t\t\t\tthis.addTextEdit(overlayRendering, <Div> parentDiv.children[i+1], \"PosOffsetY\", [\"posOffset\"], 1);\n\t\t\t\t\tthis.addTextEdit(overlayRendering, <Div> parentDiv.children[i+1], \"PosOffsetZ\", [\"posOffset\"], 2);\n\n\t\t\t\t\tthis.addCheckbox(overlayRendering, <Div> parentDiv.children[i+1], \"CastShadow\", [\"pointLight\", \"castShadow\"]);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.updateTextEdit(<Div> parentDiv.children[i+1], \"R\", [\"pointLight\", \"colour\"], 0);\n\t\t\t\t\tthis.updateTextEdit(<Div> parentDiv.children[i+1], \"G\", [\"pointLight\", \"colour\"], 1);\n\t\t\t\t\tthis.updateTextEdit(<Div> parentDiv.children[i+1], \"B\", [\"pointLight\", \"colour\"], 2);\n\n\t\t\t\t\tthis.updateTextEdit(<Div> parentDiv.children[i+1], \"PosOffsetX\", [\"posOffset\"], 0);\n\t\t\t\t\tthis.updateTextEdit(<Div> parentDiv.children[i+1], \"PosOffsetY\", [\"posOffset\"], 1);\n\t\t\t\t\tthis.updateTextEdit(<Div> parentDiv.children[i+1], \"PosOffsetZ\", [\"posOffset\"], 2);\n\n\t\t\t\t\tthis.updateCheckbox(<Div> parentDiv.children[i+1], \"CastShadow\", [\"pointLight\", \"castShadow\"]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","import { Component, ComponentTypeEnum } from \"./Component\";\nimport Div from \"../../Rendering/GUI/Objects/Div\";\nimport { OverlayRendering } from \"../../Rendering/GUI/OverlayRendering\";\nimport ObjectPlacer from \"../../../Game/ObjectPlacer\";\nimport EditText from \"../../Rendering/GUI/Objects/Text/EditText\";\nimport { mat4, quat, vec3 } from \"gl-matrix\";\n\nexport default class PositionComponent extends Component {\n\tposition: vec3;\n\trotation: quat;\n\tscale: vec3;\n\torigin: vec3;\n\n\tmatrix: mat4;\n\n\tconstructor(componentType?: ComponentTypeEnum) {\n\t\tsuper(componentType ? componentType : ComponentTypeEnum.POSITION);\n\n\t\tthis.position = vec3.create();\n\t\tthis.rotation = quat.create();\n\t\tthis.scale = vec3.fromValues(1.0, 1.0, 1.0);\n\t\tthis.origin = vec3.create();\n\n\t\tthis.matrix = mat4.create();\n\t}\n\n\tcalculateMatrix(matrix: mat4) {\n\t\tmat4.translate(matrix, matrix, this.position);\n\t\tmat4.multiply(matrix, matrix, mat4.fromQuat(mat4.create(), this.rotation));\n\t\tmat4.scale(matrix, matrix, this.scale);\n\t\tmat4.translate(matrix, matrix, vec3.negate(vec3.create(), this.origin));\n\t}\n\n\tupdateGui(\n\t\toverlayRendering: OverlayRendering,\n\t\tparentDiv: Div,\n\t\tobjectPlacer: ObjectPlacer\n\t) {\n\t\tfor (let i = 1; i < parentDiv.children.length; i++) {\n\t\t\tif (parentDiv.children[i].textString == ComponentTypeEnum[this.type]) {\n\t\t\t\t// Next should be a div that should hold the text edits\n\t\t\t\tif ((<Div>(parentDiv.children[i+1])).children.length == 0) {\n\t\t\t\t\tthis.addTextEdit(overlayRendering, <Div> parentDiv.children[i+1], \"PosX\", [\"position\"], 0);\n\t\t\t\t\tthis.addTextEdit(overlayRendering, <Div> parentDiv.children[i+1], \"PosY\", [\"position\"], 1);\n\t\t\t\t\tthis.addTextEdit(overlayRendering, <Div> parentDiv.children[i+1], \"PosZ\", [\"position\"], 2);\n\n\t\t\t\t\tthis.addTextEdit(overlayRendering, <Div> parentDiv.children[i+1], \"RotX\", [\"rotation\"], 0);\n\t\t\t\t\tthis.addTextEdit(overlayRendering, <Div> parentDiv.children[i+1], \"RotY\", [\"rotation\"], 1);\n\t\t\t\t\tthis.addTextEdit(overlayRendering, <Div> parentDiv.children[i+1], \"RotZ\", [\"rotation\"], 2);\n\t\t\t\t\tthis.addTextEdit(overlayRendering, <Div> parentDiv.children[i+1], \"RotW\", [\"rotation\"], 3);\n\n\t\t\t\t\tthis.addTextEdit(overlayRendering, <Div> parentDiv.children[i+1], \"ScaleX\", [\"scale\"], 0);\n\t\t\t\t\tthis.addTextEdit(overlayRendering, <Div> parentDiv.children[i+1], \"ScaleY\", [\"scale\"], 1);\n\t\t\t\t\tthis.addTextEdit(overlayRendering, <Div> parentDiv.children[i+1], \"ScaleZ\", [\"scale\"], 2);\n\n\t\t\t\t\tthis.addTextEdit(overlayRendering, <Div> parentDiv.children[i+1], \"OriginX\", [\"origin\"], 0);\n\t\t\t\t\tthis.addTextEdit(overlayRendering, <Div> parentDiv.children[i+1], \"OriginY\", [\"origin\"], 1);\n\t\t\t\t\tthis.addTextEdit(overlayRendering, <Div> parentDiv.children[i+1], \"OriginZ\", [\"origin\"], 2);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.updateTextEdit(<Div> parentDiv.children[i+1], \"PosX\", [\"position\"], 0);\n\t\t\t\t\tthis.updateTextEdit(<Div> parentDiv.children[i+1], \"PosY\", [\"position\"], 1);\n\t\t\t\t\tthis.updateTextEdit(<Div> parentDiv.children[i+1], \"PosZ\", [\"position\"], 2);\n\n\t\t\t\t\tthis.updateTextEdit(<Div> parentDiv.children[i+1], \"RotX\", [\"rotation\"], 0);\n\t\t\t\t\tthis.updateTextEdit(<Div> parentDiv.children[i+1], \"RotY\", [\"rotation\"], 1);\n\t\t\t\t\tthis.updateTextEdit(<Div> parentDiv.children[i+1], \"RotZ\", [\"rotation\"], 2);\n\t\t\t\t\tthis.updateTextEdit(<Div> parentDiv.children[i+1], \"RotW\", [\"rotation\"], 3);\n\n\t\t\t\t\tthis.updateTextEdit(<Div> parentDiv.children[i+1], \"ScaleX\", [\"scale\"], 0);\n\t\t\t\t\tthis.updateTextEdit(<Div> parentDiv.children[i+1], \"ScaleY\", [\"scale\"], 1);\n\t\t\t\t\tthis.updateTextEdit(<Div> parentDiv.children[i+1], \"ScaleZ\", [\"scale\"], 2);\n\n\t\t\t\t\tthis.updateTextEdit(<Div> parentDiv.children[i+1], \"OriginX\", [\"origin\"], 0);\n\t\t\t\t\tthis.updateTextEdit(<Div> parentDiv.children[i+1], \"OriginY\", [\"origin\"], 1);\n\t\t\t\t\tthis.updateTextEdit(<Div> parentDiv.children[i+1], \"OriginZ\", [\"origin\"], 2);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","import System from \"./Systems/System\";\nimport CollisionSystem from \"./Systems/CollisionSystem\";\nimport MovementSystem from \"./Systems/MovementSystem\";\nimport GraphicsSystem from \"./Systems/GraphicsSystem\";\nimport ParticleSpawnerSystem from \"./Systems/ParticleSpawnerSystem\";\nimport Rendering from \"../Rendering/Rendering\";\nimport Entity from \"./Entity\";\nimport { Component, ComponentTypeEnum } from \"./Components/Component\";\nimport Camera from \"../Objects/Camera\";\nimport CameraFocusSystem from \"./Systems/CameraFocusSystem\";\nimport PositionMatrixUpdateSystem from \"./Systems/PositionMatrixUpdateSystem\";\n\nexport default class ECSManager {\n\tprivate systems: Map<String, System>;\n\tprivate entityCounter: number;\n\tentities: Array<Entity>;\n\tprivate entityAdditionQueue: Array<Entity>;\n\tprivate entityDeletionQueue: Array<number>;\n\tprivate componentAdditionQueue: Array<{\n\t\tentity: Entity;\n\t\tcomponent: Component;\n\t}>;\n\tprivate componentRemovalQueue: Array<{\n\t\tentity: Entity;\n\t\tcomponentType: ComponentTypeEnum;\n\t}>;\n\tcamera: Camera;\n\trendering: Rendering;\n\n\tconstructor(rendering: Rendering) {\n\t\tthis.camera = rendering.camera;\n\t\tthis.rendering = rendering;\n\n\t\tthis.systems = new Map<String, System>();\n\t\tthis.entityCounter = 0;\n\n\t\tthis.entities = new Array<Entity>();\n\t\tthis.entityAdditionQueue = new Array<Entity>();\n\t\tthis.entityDeletionQueue = new Array<number>();\n\t\tthis.componentAdditionQueue = new Array<{\n\t\t\tentity: Entity;\n\t\t\tcomponent: Component;\n\t\t}>();\n\t\tthis.componentRemovalQueue = new Array<{\n\t\t\tentity: Entity;\n\t\t\tcomponentType: ComponentTypeEnum;\n\t\t}>();\n\n\t\tthis.initializeSystems();\n\t}\n\n\tinitializeSystems() {\n\t\tthis.systems.set(\"COLLISION\", new CollisionSystem());\n\t\tthis.systems.set(\"MOVEMENT\", new MovementSystem());\n\t\tthis.systems.set(\"POSITIONMATRIXUPDATE\", new PositionMatrixUpdateSystem());\n\t\tthis.systems.set(\"GRAPHICS\", new GraphicsSystem());\n\t\tthis.systems.set(\"PARTICLE\", new ParticleSpawnerSystem());\n\t\tthis.systems.set(\n\t\t\t\"CAMERAFOCUS\",\n\t\t\tnew CameraFocusSystem(this.rendering.camera)\n\t\t);\n\t}\n\n\tupdate(dt: number) {\n\t\t// Add new entities\n\t\tthis.addQueuedEntities();\n\n\t\t// For all entities, remove/add components\n\t\t// Remove/add entities from systems\n\t\tthis.addQueuedComponents();\n\t\tthis.removeComponents();\n\t\tthis.removeEntitiesMarkedForDeletion();\n\n\t\tthis.systems.get(\"MOVEMENT\").update(dt);\n\t\tthis.systems.get(\"POSITIONMATRIXUPDATE\").update(dt);\n\t\tthis.systems.get(\"GRAPHICS\").update(dt);\n\t\tthis.systems.get(\"COLLISION\").update(dt);\n\t}\n\n\tupdateRenderingSystems(dt: number, updateCameraFocus: boolean = true) {\n\t\tthis.systems.get(\"PARTICLE\").update(dt);\n\t\tif (updateCameraFocus) {\n\t\t\tthis.systems.get(\"CAMERAFOCUS\").update(dt);\n\t\t}\n\t}\n\n\tcreateEntity(): Entity {\n\t\tconst length = this.entityAdditionQueue.push(\n\t\t\tnew Entity(this.entityCounter++)\n\t\t);\n\t\treturn this.entityAdditionQueue[length - 1];\n\t}\n\n\taddComponent(entity: Entity, component: Component) {\n\t\tthis.componentAdditionQueue.push({ entity, component });\n\t}\n\n\tremoveEntity(entityID: number) {\n\t\tif (this.getEntity(entityID)) {\n\t\t\tthis.entityDeletionQueue.push(entityID);\n\t\t\tfor (const comp of this.getEntity(entityID).components) {\n\t\t\t\tthis.removeComponent(this.getEntity(entityID), comp.type);\n\t\t\t}\n\t\t}\n\t}\n\n\tremoveComponent(entity: Entity, componentType: ComponentTypeEnum) {\n\t\tthis.componentRemovalQueue.push({ entity, componentType });\n\t}\n\n\tgetEntity(entityID: number): Entity {\n\t\tfor (const entity of this.entities) {\n\t\t\tif (entity.id == entityID) {\n\t\t\t\treturn entity;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tgetSystem(type: string): System {\n\t\treturn this.systems.get(type);\n\t}\n\n\t// Private\n\tprivate addQueuedEntities() {\n\t\tfor (const newEntity of this.entityAdditionQueue) {\n\t\t\t// Add to manager\n\t\t\tconst length = this.entities.push(newEntity);\n\n\t\t\t// Add to systems\n\t\t\tfor (let system of this.systems) {\n\t\t\t\tsystem[1].addEntity(this.entities[length - 1]);\n\t\t\t}\n\t\t}\n\n\t\t// Empty queue\n\t\tthis.entityAdditionQueue.length = 0;\n\t}\n\n\tprivate addQueuedComponents() {\n\t\tfor (const compEntityPair of this.componentAdditionQueue) {\n\t\t\t// If enitity does not already have component, proceed\n\t\t\tif (!compEntityPair.entity.hasComponent(compEntityPair.component.type)) {\n\t\t\t\tcompEntityPair.entity.components.push(compEntityPair.component);\n\t\t\t\tfor (let system of this.systems) {\n\t\t\t\t\t// If entity is not already belonging to the system, try and add it\n\t\t\t\t\tif (!system[1].containsEntity(compEntityPair.entity.id)) {\n\t\t\t\t\t\tsystem[1].addEntity(compEntityPair.entity);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Empty queue\n\t\tthis.componentAdditionQueue.length = 0;\n\t}\n\n\tprivate removeEntitiesMarkedForDeletion() {\n\t\tfor (let entityId of this.entityDeletionQueue) {\n\t\t\t// Delete in systems\n\t\t\tfor (let system of this.systems) {\n\t\t\t\tsystem[1].removeEntity(entityId);\n\t\t\t}\n\n\t\t\t// Delete in manager\n\t\t\tlet index = this.entities.findIndex((e) => e.id == entityId);\n\t\t\tif (index != -1) {\n\t\t\t\tthis.entities.splice(index, 1);\n\t\t\t}\n\t\t}\n\n\t\t// Empty queue\n\t\tthis.entityDeletionQueue.length = 0;\n\t}\n\n\tprivate removeComponents() {\n\t\tfor (const compEntityPair of this.componentRemovalQueue) {\n\t\t\t// Remove component from entity\n\t\t\tlet index = compEntityPair.entity.components.findIndex((c) => c.type == compEntityPair.componentType);\n\t\t\tif (index != -1) {\n\t\t\t\tcompEntityPair.entity.components[index].destructor();\n\t\t\t\tcompEntityPair.entity.components.splice(index, 1);\n\t\t\t}\n\n\t\t\t// Remove entity from system if it no longer lives up to the requirements of being in the system\n\t\t\tfor (let system of this.systems) {\n\t\t\t\tsystem[1].removeFaultyEntity(compEntityPair.entity.id);\n\t\t\t}\n\t\t}\n\n\t\t// Empty queue\n\t\tthis.componentRemovalQueue.length = 0;\n\t}\n}\n","import { Component, ComponentTypeEnum } from \"./Components/Component\";\n\nexport default class Entity {\n\tpublic readonly id: number;\n\tcomponents: Array<Component>;\n\n\tconstructor(id: number) {\n\t\tthis.id = id;\n\t\tthis.components = new Array<Component>();\n\t}\n\t\n\thasComponent(type: ComponentTypeEnum): boolean {\n\t\treturn this.components.some((c) => c.type == type);\n\t}\n\n\tgetComponent(type: ComponentTypeEnum): Component {\n\t\treturn this.components.find((c) => c.type == type);\n\t}\n}\n","import System from \"./System\";\nimport { ComponentTypeEnum } from \"../Components/Component\";\nimport CameraFocusComponent from \"../Components/CameraFocusCompontent\";\nimport PositionComponent from \"../Components/PositionComponent\";\nimport Camera from \"../../Objects/Camera\";\nimport { mat4, vec3 } from \"gl-matrix\";\n\nexport default class CameraFocusSystem extends System {\n\tcamera: Camera;\n\n\tconstructor(camera: Camera) {\n\t\tsuper([ComponentTypeEnum.POSITION, ComponentTypeEnum.CAMERAFOCUS]);\n\t\tthis.camera = camera;\n\t}\n\n\tupdate(dt: number) {\n\t\tfor (const e of this.entities) {\n\t\t\tlet posComp = <PositionComponent>(\n\t\t\t\te.getComponent(ComponentTypeEnum.POSITIONPARENT)\n\t\t\t);\n\n\t\t\tif (!posComp) {\n\t\t\t\tposComp = <PositionComponent>e.getComponent(ComponentTypeEnum.POSITION);\n\t\t\t}\n\n\t\t\tlet camFocusComp = <CameraFocusComponent>(\n\t\t\t\te.getComponent(ComponentTypeEnum.CAMERAFOCUS)\n\t\t\t);\n\n\t\t\tlet tempMatrix = mat4.create();\n\t\t\tposComp.calculateMatrix(tempMatrix);\n\t\t\tlet camPosVector = vec3.transformMat4(vec3.create(), vec3.create(), tempMatrix);\n\t\t\tlet camPos = vec3.add(\n\t\t\t\tvec3.create(), vec3.add(\n\t\t\t\t\tvec3.create(), camPosVector, \n\t\t\t\t\tcamFocusComp.focusPoint)\n\t\t\t\t, camFocusComp.offset);\n\n\t\t\tthis.camera.setPosition(camPos);\n\t\t\tthis.camera.setDir(\n\t\t\t\tvec3.negate(vec3.create(), camFocusComp.offset)\n\t\t\t);\n\t\t}\n\t}\n}\n","import System from \"./System\";\nimport { ComponentTypeEnum } from \"../Components/Component\";\nimport { IntersectionTester } from \"../../Physics/IntersectionTester\";\nimport MeshCollisionComponent from \"../Components/MeshCollisionComponent\";\nimport MovementComponent from \"../Components/MovementComponent\";\nimport { CollisionSolver } from \"../../Physics/CollisionSolver\";\nimport CollisionComponent from \"../Components/CollisionComponent\";\nimport BoundingBoxComponent from \"../Components/BoundingBoxComponent\";\nimport Shape from \"../../Physics/Shapes/Shape\";\nimport Triangle from \"../../Physics/Shapes/Triangle\";\nimport { mat4, vec3 } from \"gl-matrix\";\n\nexport default class CollisionSystem extends System {\n\tlastCollisionPoint: vec3;\n\n\tconstructor() {\n\t\tsuper([\n\t\t\tComponentTypeEnum.COLLISION,\n\t\t\tComponentTypeEnum.BOUNDINGBOX,\n\t\t\tComponentTypeEnum.POSITION,\n\t\t]);\n\t\t// Optional MESHCOLLISION, MOVEMENT\n\n\t\tthis.lastCollisionPoint = vec3.create();\n\t}\n\n\tupdate(dt: number) {\n\t\tlet information = new Array<IntersectionTester.IntersectionInformation>();\n\n\t\t// First update the bounding box for all entities that are not static\n\t\tfor (let e of this.entities) {\n\t\t\tlet collisionComp = <CollisionComponent>(\n\t\t\t\te.getComponent(ComponentTypeEnum.COLLISION)\n\t\t\t);\n\n\t\t\tif (collisionComp.isStatic) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet bbComp = <BoundingBoxComponent>(\n\t\t\t\te.getComponent(ComponentTypeEnum.BOUNDINGBOX)\n\t\t\t);\n\t\t\tbbComp.updateTransformMatrix();\n\n\t\t\tlet movComp = <MovementComponent>(e.getComponent(ComponentTypeEnum.MOVEMENT));\n\t\t\tif (movComp) {\n\t\t\t\tmovComp.onGround = false;\n\t\t\t}\n\t\t}\n\n\t\t// Now do collisions\n\t\tfor (let i = 0; i < this.entities.length; i++) {\n\t\t\tconst e1 = this.entities[i];\n\t\t\tlet e1CollisionComp = <CollisionComponent>(\n\t\t\t\te1.getComponent(ComponentTypeEnum.COLLISION)\n\t\t\t);\n\n\t\t\tlet e1BoundingBoxComp = <BoundingBoxComponent>(\n\t\t\t\te1.getComponent(ComponentTypeEnum.BOUNDINGBOX)\n\t\t\t);\n\n\t\t\tlet e1MeshCollisionComp = <MeshCollisionComponent>(\n\t\t\t\te1.getComponent(ComponentTypeEnum.MESHCOLLISION)\n\t\t\t);\n\n\t\t\tfor (let j = i+1; j < this.entities.length; j++) {\n\t\t\t\tconst e2 = this.entities[j];\n\t\t\t\tif (e1.id == e2.id) {\n\t\t\t\t\t// Don't collide with self\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tlet e2CollisionComp = <CollisionComponent>(\n\t\t\t\t\te2.getComponent(ComponentTypeEnum.COLLISION)\n\t\t\t\t);\n\n\t\t\t\tif ((e1CollisionComp.isStatic || e1CollisionComp.isImmovable) && (e2CollisionComp.isStatic || e2CollisionComp.isImmovable)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tlet e2BoundingBoxComp = <BoundingBoxComponent>(\n\t\t\t\t\te2.getComponent(ComponentTypeEnum.BOUNDINGBOX)\n\t\t\t\t);\n\n\t\t\t\tlet e2MeshCollisionComp = <MeshCollisionComponent>(\n\t\t\t\t\te2.getComponent(ComponentTypeEnum.MESHCOLLISION)\n\t\t\t\t);\n\n\t\t\t\t\n\t\t\t\tinformation.length = 0;\n\t\t\t\tif (e1MeshCollisionComp || e2MeshCollisionComp) {\n\t\t\t\t\t// At least one of the entities have mesh collision\n\t\t\t\t\t// Start by checking bounding boxes, but don't save information\n\t\t\t\t\tif (\n\t\t\t\t\t\tIntersectionTester.identifyIntersection(\n\t\t\t\t\t\t\t[e1BoundingBoxComp.boundingBox],\n\t\t\t\t\t\t\t[e2BoundingBoxComp.boundingBox]\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tlet e1ShapeArray = new Array<Shape>();\n\t\t\t\t\t\tlet e2ShapeArray = new Array<Shape>();\n\n\t\t\t\t\t\tif (e1MeshCollisionComp) {\n\t\t\t\t\t\t\t// Entity 1 has mesh collision, check e2 bb versus e1 mesh octree\n\n\t\t\t\t\t\t\t// By first giving e2 bb inverse matrix of e1 matrix\n\t\t\t\t\t\t\te2BoundingBoxComp.boundingBox.setInverseMatrix(mat4.invert(mat4.create(), e1BoundingBoxComp.boundingBox.getTransformMatrix()));\n\n\t\t\t\t\t\t\t// Then check against mesh octree (now in e1 local coords)\n\t\t\t\t\t\t\tlet localE1ShapeArray = new Array<Triangle>();\n\t\t\t\t\t\t\te1MeshCollisionComp.octree.getShapesForCollision(\n\t\t\t\t\t\t\t\te2BoundingBoxComp.boundingBox,\n\t\t\t\t\t\t\t\tlocalE1ShapeArray\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Reset the inverse matrix\n\t\t\t\t\t\t\te2BoundingBoxComp.boundingBox.setInverseMatrix(mat4.create());\n\n\t\t\t\t\t\t\t// Apply actual matrices on the resulting shape array (only triangles since this is a mesh)\n\t\t\t\t\t\t\tfor (let shape of localE1ShapeArray) {\n\t\t\t\t\t\t\t\tlet index = e1ShapeArray.push(new Triangle()) - 1;\n\t\t\t\t\t\t\t\tlet shapeOriginalVertices = shape.getOriginalVertices();\n\t\t\t\t\t\t\t\t(<Triangle>e1ShapeArray[index]).setVertices(shapeOriginalVertices[0], shapeOriginalVertices[1], shapeOriginalVertices[2]);\n\t\t\t\t\t\t\t\t(<Triangle>e1ShapeArray[index]).setTransformMatrix(e1BoundingBoxComp.boundingBox.getTransformMatrix());\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Entity 1 does not have mesh collision, use the bounding box for intersection testing\n\t\t\t\t\t\t\te1ShapeArray.push(e1BoundingBoxComp.boundingBox);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (e2MeshCollisionComp) {\n\t\t\t\t\t\t\t// Entity 2 has mesh collision, check e1 bb versus e2 mesh octree\n\n\t\t\t\t\t\t\t// By first giving e1 bb inverse matrix of e2 matrix\n\t\t\t\t\t\t\te1BoundingBoxComp.boundingBox.setInverseMatrix(mat4.invert(mat4.create(), e2BoundingBoxComp.boundingBox.getTransformMatrix()));\n\n\t\t\t\t\t\t\t// Then get the shapes from the octree (now in e2 local coords)\n\t\t\t\t\t\t\tlet localE2ShapeArray = new Array<Triangle>();\n\t\t\t\t\t\t\te2MeshCollisionComp.octree.getShapesForCollision(\n\t\t\t\t\t\t\t\te1BoundingBoxComp.boundingBox,\n\t\t\t\t\t\t\t\tlocalE2ShapeArray\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Reset the inverse matrix\n\t\t\t\t\t\t\te1BoundingBoxComp.boundingBox.setInverseMatrix(mat4.create());\n\n\t\t\t\t\t\t\t// Apply actual matrices on the resulting shape array (only triangles since this is a mesh)\n\t\t\t\t\t\t\tfor (let shape of localE2ShapeArray) {\n\t\t\t\t\t\t\t\tlet index = e2ShapeArray.push(new Triangle()) - 1;\n\t\t\t\t\t\t\t\tlet shapeOriginalVertices = shape.getOriginalVertices();\n\t\t\t\t\t\t\t\t(<Triangle>e2ShapeArray[index]).setVertices(shapeOriginalVertices[0], shapeOriginalVertices[1], shapeOriginalVertices[2]);\n\t\t\t\t\t\t\t\t(<Triangle>e2ShapeArray[index]).setTransformMatrix(e2BoundingBoxComp.boundingBox.getTransformMatrix());\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Entity 2 does not have mesh collision, use the bounding box for intersection testing\n\t\t\t\t\t\t\te2ShapeArray.push(e2BoundingBoxComp.boundingBox);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// We now have our updated shape arrays to intersection test, let's do it!\n\t\t\t\t\t\tIntersectionTester.identifyIntersectionInformation(\n\t\t\t\t\t\t\te1ShapeArray,\n\t\t\t\t\t\t\te2ShapeArray,\n\t\t\t\t\t\t\tinformation\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// None of the entities have mesh collision, do collision with bounding boxes, and save information\n\t\t\t\t\tIntersectionTester.identifyIntersectionInformation(\n\t\t\t\t\t\t[e1BoundingBoxComp.boundingBox],\n\t\t\t\t\t\t[e2BoundingBoxComp.boundingBox],\n\t\t\t\t\t\tinformation\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tif (information.length > 0) {\n\t\t\t\t\tCollisionSolver.handleCollision(information, e1, e2);\n\t\t\t\t\tif (e1CollisionComp.isDynamic || e2CollisionComp.isDynamic) {\n\t\t\t\t\t\tvec3.copy(this.lastCollisionPoint, information[0].point);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","import System from \"./System\";\nimport GraphicsComponent from \"../Components/GraphicsComponent\";\nimport { ComponentTypeEnum } from \"../Components/Component\";\nimport PositionComponent from \"../Components/PositionComponent\";\nimport PointLightComponent from \"../Components/PointLightComponent\";\nimport PositionParentComponent from \"../Components/PositionParentComponent\";\nimport { ECSUtils } from \"../../Utils/ESCUtils\";\nimport { mat4, vec3 } from \"gl-matrix\";\n\nexport default class GraphicsSystem extends System {\n\tconstructor() {\n\t\tsuper([ComponentTypeEnum.POSITION]);\n\t\t// Optional ComponentTypeEnum.GRAPHICS, ComponentTypeEnum.POINTLIGHT, ComponentTypeEnun.POSITIONPARENT\n\t}\n\n\tupdate(dt: number) {\n\t\tfor (const e of this.entities) {\n\t\t\tlet posComp = <PositionComponent>(\n\t\t\t\te.getComponent(ComponentTypeEnum.POSITION)\n\t\t\t);\n\n\t\t\tlet graphComp = <GraphicsComponent>(\n\t\t\t\te.getComponent(ComponentTypeEnum.GRAPHICS)\n\t\t\t);\n\n\t\t\tlet posParentComp = <PositionParentComponent>(\n\t\t\t\te.getComponent(ComponentTypeEnum.POSITIONPARENT)\n\t\t\t);\n\n\t\t\tif (graphComp && posComp) {\n\t\t\t\tmat4.identity(graphComp.object.modelMatrix);\n\n\t\t\t\tif (posParentComp) {\n\t\t\t\t\tposParentComp.calculateMatrix(graphComp.object.modelMatrix);\n\t\t\t\t\tmat4.copy(posParentComp.matrix, graphComp.object.modelMatrix);\n\t\t\t\t}\n\n\t\t\t\tposComp.calculateMatrix(graphComp.object.modelMatrix);\n\t\t\t}\n\n\t\t\tlet pointLightComp = <PointLightComponent>(\n\t\t\t\te.getComponent(ComponentTypeEnum.POINTLIGHT)\n\t\t\t);\n\n\t\t\tif (pointLightComp && (posComp || posParentComp)) {\n\t\t\t\tvec3.add(pointLightComp.pointLight.position, ECSUtils.CalculatePosition(e), pointLightComp.posOffset);\n\t\t\t}\n\t\t}\n\t}\n}\n","import System from \"./System\";\nimport { ComponentTypeEnum } from \"../Components/Component\";\nimport PositionComponent from \"../Components/PositionComponent\";\nimport MovementComponent from \"../Components/MovementComponent\";\nimport { quat, vec3 } from \"gl-matrix\";\n\nexport default class MovementSystem extends System {\n\tconstructor() {\n\t\tsuper([ComponentTypeEnum.POSITION, ComponentTypeEnum.MOVEMENT]);\n\t}\n\n\tupdate(dt: number) {\n\t\tfor (const e of this.entities) {\n\t\t\tlet posComp = <PositionComponent>(\n\t\t\t\te.getComponent(ComponentTypeEnum.POSITIONPARENT)\n\t\t\t);\n\n\t\t\tif (posComp == undefined) {\n\t\t\t\tposComp = <PositionComponent>e.getComponent(ComponentTypeEnum.POSITION);\n\t\t\t}\n\t\t\tlet movComp = <MovementComponent>(\n\t\t\t\te.getComponent(ComponentTypeEnum.MOVEMENT)\n\t\t\t);\n\n\t\t\tlet oldVel = vec3.clone(movComp.velocity);\n\n\t\t\t// Do movement calculations\n\t\t\tvec3.add(movComp.velocity, movComp.velocity, vec3.scale(vec3.create(), movComp.accelerationDirection, movComp.acceleration * dt));\n\t\t\tvec3.add(movComp.velocity, movComp.velocity, vec3.scale(vec3.create(), movComp.constantAcceleration, dt));\n\n\t\t\tmovComp.jumpAllowed = movComp.jumpAllowed || movComp.onGround;\n\n\t\t\tif (movComp.jumpAllowed && movComp.jumpRequested) {\n\t\t\t\tmovComp.velocity[1] = movComp.jumpPower;\n\t\t\t\tmovComp.onGround = false;\n\t\t\t\tmovComp.jumpRequested = false;\n\t\t\t\tmovComp.jumpAllowed = false;\n\t\t\t}\n\n\t\t\t//Drag\n\t\t\tlet dragVec = vec3.scale(vec3.create(), movComp.velocity, -1.0);\n\t\t\tdragVec[1] = 0.0;\n\t\t\tlet magnitude = vec3.len(dragVec);\n\t\t\tvec3.add(movComp.velocity, movComp.velocity, vec3.scale(dragVec, vec3.normalize(dragVec, dragVec), Math.min(movComp.drag * dt, magnitude)));\n\n\t\t\t//stop if velocity is too slow\n\t\t\tconst accelerating =\n\t\t\t\tmovComp.accelerationDirection[0] != 0.0 ||\n\t\t\t\tmovComp.accelerationDirection[2] != 0.0;\n\t\t\tif (!accelerating && vec3.sqrLen(movComp.velocity) < 0.001) {\n\t\t\t\tvec3.scale(movComp.velocity, movComp.velocity, 0.0);\n\t\t\t}\n\n\t\t\tlet displacement = vec3.scale(vec3.create(), vec3.add(vec3.create(), movComp.velocity, oldVel), 0.5 * dt);\n\n\t\t\tif (Math.abs(displacement[0]) > 0.001) {\n\t\t\t\tposComp.position[0] += displacement[0];\n\t\t\t}\n\n\t\t\tif (Math.abs(displacement[1]) > 0.001) {\n\t\t\t\tposComp.position[1] += displacement[1];\n\t\t\t}\n\n\t\t\tif (Math.abs(displacement[2]) > 0.001) {\n\t\t\t\tposComp.position[2] += displacement[2];\n\t\t\t}\n\n\t\t\tvec3.set(movComp.accelerationDirection, 0.0, 0.0, 0.0);\n\t\t\tquat.slerp(posComp.rotation, posComp.rotation, quat.mul(quat.create(), posComp.rotation, movComp.momentum), dt);\n\t\t}\n\t}\n}\n","import System from \"./System\";\nimport ParticleSpawnerComponent from \"../Components/ParticleSpawnerComponent\";\nimport { ComponentTypeEnum } from \"../Components/Component\";\nimport PositionComponent from \"../Components/PositionComponent\";\nimport { ECSUtils } from \"../../Utils/ESCUtils\";\nimport { vec3 } from \"gl-matrix\";\n\nexport default class ParticleSpawnerSystem extends System {\n\tconstructor() {\n\t\tsuper([ComponentTypeEnum.PARTICLESPAWNER]);\n\t}\n\n\tupdate(dt: number) {\n\t\tfor (const e of this.entities) {\n\t\t\tlet particleComp = <ParticleSpawnerComponent>(\n\t\t\t\te.getComponent(ComponentTypeEnum.PARTICLESPAWNER)\n\t\t\t);\n\t\t\tlet posComp = <PositionComponent>(\n\t\t\t\te.getComponent(ComponentTypeEnum.POSITIONPARENT)\n\t\t\t);\n\t\t\tif (posComp == undefined) {\n\t\t\t\tposComp = <PositionComponent>e.getComponent(ComponentTypeEnum.POSITION);\n\t\t\t}\n\n\t\t\tif (particleComp) {\n\t\t\t\tlet currentParticle = Math.floor(\n\t\t\t\t\t(particleComp.resetTimer / Math.max(particleComp.lifeTime, 0.00001)) *\n\t\t\t\t\t\tparticleComp.particleSpawner.getNumberOfParticles()\n\t\t\t\t);\n\t\t\t\tparticleComp.resetTimer += dt;\n\t\t\t\tlet endParticle = Math.floor(\n\t\t\t\t\t(particleComp.resetTimer / Math.max(particleComp.lifeTime, 0.00001)) *\n\t\t\t\t\t\tparticleComp.particleSpawner.getNumberOfParticles()\n\t\t\t\t);\n\t\t\t\tfor (\n\t\t\t\t\tcurrentParticle;\n\t\t\t\t\tcurrentParticle < endParticle;\n\t\t\t\t\tcurrentParticle++\n\t\t\t\t) {\n\t\t\t\t\tparticleComp.particleSpawner.resetParticleStartTime(\n\t\t\t\t\t\tcurrentParticle %\n\t\t\t\t\t\t\tparticleComp.particleSpawner.getNumberOfParticles()\n\t\t\t\t\t);\n\n\t\t\t\t\tif (posComp) {\n\t\t\t\t\t\tparticleComp.particleSpawner.setParticleStartPosition(\n\t\t\t\t\t\t\tcurrentParticle %\n\t\t\t\t\t\t\t\tparticleComp.particleSpawner.getNumberOfParticles(),\n\t\t\t\t\t\t\tvec3.add(vec3.create(), ECSUtils.CalculatePosition(e), particleComp.offset)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (particleComp.resetTimer > particleComp.lifeTime) {\n\t\t\t\t\tparticleComp.resetTimer -= particleComp.lifeTime;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","import System from \"./System\";\nimport { ComponentTypeEnum } from \"../Components/Component\";\nimport PositionComponent from \"../Components/PositionComponent\";\nimport { mat4 } from \"gl-matrix\";\n\nexport default class PositionMatrixUpdateSystem extends System {\n\tconstructor() {\n\t\tsuper([ComponentTypeEnum.POSITION]);\n\t}\n\n\tupdate(dt: number) {\n\t\tfor (const e of this.entities) {\n\t\t\t// TODO: Add locic for position parent if that is ever needed. Or redo the whole position parent thing because it is not very nice to work with.\n\n\t\t\tlet posComp = <PositionComponent>(\n\t\t\t\te.getComponent(ComponentTypeEnum.POSITION)\n\t\t\t);\n\n\t\t\tmat4.identity(posComp.matrix);\n\t\t\tposComp.calculateMatrix(posComp.matrix);\n\t\t}\n\t}\n}\n","import { ComponentTypeEnum } from \"../Components/Component\";\nimport Entity from \"../Entity\";\n\nexport default class System {\n\tprotected entities: Array<Entity>;\n\tprotected requiredComponents: Array<ComponentTypeEnum>;\n\n\tconstructor(componentTypes: Array<ComponentTypeEnum>) {\n\t\tthis.requiredComponents = componentTypes;\n\t\tthis.entities = new Array<Entity>();\n\t}\n\n\tentityHasCorrectComponents(entity: Entity): boolean {\n\t\tfor (const type of this.requiredComponents) {\n\t\t\tif (!entity.hasComponent(type)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\taddEntity(entity: Entity): boolean {\n\t\tif (this.entityHasCorrectComponents(entity)) {\n\t\t\tthis.entities.push(entity);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tcontainsEntity(entityId: number) {\n\t\treturn this.entities.some((c) => c.id == entityId);\n\t}\n\n\tremoveFaultyEntity(entityId: number) {\n\t\tconst index = this.entities.findIndex((c) => c.id == entityId);\n\t\tif (index != -1) {\n\t\t\tif (!this.entityHasCorrectComponents(this.entities[index])) {\n\t\t\t\tthis.entities.splice(index, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\tremoveEntity(entityId: number) {\n\t\tconst index = this.entities.findIndex((c) => c.id == entityId);\n\t\tif (index != -1) {\n\t\t\tthis.entities.splice(index, 1);\n\t\t}\n\t}\n\n\tupdate(dt: number) {\n\t\t// Pure virtual possible?\n\t}\n}\n","import { vec2 } from \"gl-matrix\";\nimport { windowInfo } from \"../../main\";\nimport TextObject2D from \"../Rendering/GUI/Objects/Text/TextObject2D\";\n\nexport default class Input {\n\tkeys: boolean[];\n\tbuttons: Map<string, boolean>;\n\tgamepads: Gamepad[];\n\tmousePosition: { x: number; y: number; previousX: number; previousY: number };\n\tmousePositionOnCanvas: {\n\t\tx: number;\n\t\ty: number;\n\t\tpreviousX: number;\n\t\tpreviousY: number;\n\t};\n\tmouseClicked: boolean;\n\tmouseRightClicked: boolean;\n\n\tsimulateTouchBasedOnMouse: boolean;\n\n\ttouchUsed: boolean;\n\tjoystickLeftDirection: vec2;\n\tjoystickRightDirection: vec2;\n\trepositionTouchControls: boolean;\n\tprivate joystickLeftRadius: number;\n\tprivate joystickRightRadius: number;\n\tprivate screenAspectRatio: number;\n\n\tprivate joystickLeftCenter: TextObject2D;\n\tprivate joystickLeftBorder: TextObject2D;\n\tprivate joystickRightCenter: TextObject2D;\n\tprivate joystickRightBorder: TextObject2D;\n\n\tprivate buttonRadius: number;\n\tprivate aButton: TextObject2D;\n\tprivate bButton: TextObject2D;\n\n\tprivate mouseMovementSinceLast: vec2;\n\n\tconstructor() {\n\t\tthis.keys = [];\n\t\tthis.buttons = new Map();\n\t\tthis.gamepads = new Array<Gamepad>();\n\t\tthis.mousePosition = { x: 0, y: 0, previousX: 0, previousY: 0 };\n\t\tthis.mousePositionOnCanvas = { x: 0, y: 0, previousX: 0, previousY: 0 };\n\t\tthis.mouseClicked = false;\n\t\tthis.mouseRightClicked = false;\n\n\t\tthis.mouseMovementSinceLast = vec2.create();\n\n\t\tthis.simulateTouchBasedOnMouse = false;\n\n\t\tthis.touchUsed = false;\n\n\t\t//----Controls----\n\t\t// https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values <-- for key codes\n\t\tlet self = this;\n\t\tdocument.addEventListener(\"keydown\", function (event) {\n\t\t\tself.keys[event.key.toUpperCase()] = true;\n\t\t\tself.touchUsed = false;\n\t\t});\n\n\t\tdocument.addEventListener(\"keyup\", function (event) {\n\t\t\tself.keys[event.key.toUpperCase()] = false;\n\t\t\tself.touchUsed = false;\n\t\t});\n\n\t\tdocument.addEventListener(\"mousemove\", function (event) {\n\t\t\tself.mouseMoveCallBack(event);\n\t\t\tself.mouseMovementSinceLast[0] += event.movementX;\n\t\t\tself.mouseMovementSinceLast[1] += event.movementY;\n\t\t\tself.mousePosition = {\n\t\t\t\tx: event.clientX,\n\t\t\t\ty: event.clientY,\n\t\t\t\tpreviousX: self.mousePosition.x,\n\t\t\t\tpreviousY: self.mousePosition.y,\n\t\t\t};\n\t\t\tself.mousePositionOnCanvas = {\n\t\t\t\tx: self.mousePosition.x - windowInfo.paddingX,\n\t\t\t\ty: self.mousePosition.y - windowInfo.paddingY,\n\t\t\t\tpreviousX: self.mousePositionOnCanvas.x,\n\t\t\t\tpreviousY: self.mousePositionOnCanvas.y,\n\t\t\t};\n\t\t\tif (self.simulateTouchBasedOnMouse && self.mouseClicked) {\n\t\t\t\tself.handleTouch([event]);\n\t\t\t}\n\t\t});\n\n\t\tdocument.addEventListener(\"mousedown\", (event) => {\n\t\t\tif (event.button == 0) {\n\t\t\t\tself.mouseClicked = true;\n\t\t\t\tif (self.simulateTouchBasedOnMouse) {\n\t\t\t\t\tself.handleTouch([event]);\n\t\t\t\t}\n\t\t\t} else if (event.button == 2) {\n\t\t\t\tself.mouseRightClicked = true;\n\t\t\t}\n\t\t});\n\t\tdocument.addEventListener(\"mouseup\", (event) => {\n\t\t\tif (event.button == 0) {\n\t\t\t\tself.mouseClicked = false;\n\t\t\t\tif (self.simulateTouchBasedOnMouse) {\n\t\t\t\t\tself.handleTouch([]);\n\t\t\t\t}\n\t\t\t} else if (event.button == 2) {\n\t\t\t\tself.mouseRightClicked = false;\n\t\t\t}\n\t\t});\n\n\t\tdocument.addEventListener(\"touchstart\", function (event) {\n\t\t\tself.handleTouch(event.touches);\n\t\t});\n\t\tdocument.addEventListener(\"touchmove\", function (event) {\n\t\t\tevent.preventDefault();\n\t\t\tself.handleTouch(event.touches);\n\t\t});\n\t\tdocument.addEventListener(\"touchend\", function (event) {\n\t\t\tself.handleTouch(event.touches);\n\t\t});\n\t\t//----------------\n\n\t\tthis.joystickLeftDirection = vec2.create();\n\t\tthis.joystickRightDirection = vec2.create();\n\t\tthis.repositionTouchControls = false;\n\t\tthis.joystickLeftRadius = 0.1; // 10 % of the width\n\t\tthis.joystickRightRadius = 0.1; // 10 % of the width\n\t\tthis.screenAspectRatio = 16 / 9;\n\n\t\tthis.joystickLeftBorder = new TextObject2D();\n\t\tthis.joystickLeftBorder.center = true;\n\t\tthis.joystickLeftBorder.scaleWithWindow = true;\n\t\tthis.joystickLeftBorder.position = vec2.fromValues(0.15, 0.8);\n\t\tthis.joystickLeftBorder.size = 1920 * this.joystickLeftRadius * 2.0;\n\t\tthis.joystickLeftBorder.textString = \"⊕\";\n\t\tthis.joystickLeftBorder.getElement().style.opacity = \"50%\";\n\t\tthis.joystickLeftBorder.setHidden(true);\n\n\t\tthis.joystickLeftCenter = new TextObject2D();\n\t\tthis.joystickLeftCenter.center = true;\n\t\tthis.joystickLeftCenter.scaleWithWindow = true;\n\t\tvec2.copy(this.joystickLeftCenter.position, this.joystickLeftBorder.position);\n\t\tthis.joystickLeftCenter.size = 1920 * this.joystickLeftRadius;\n\t\tthis.joystickLeftCenter.textString = \"⚫\";\n\t\tthis.joystickLeftCenter.getElement().style.opacity = \"50%\";\n\t\tthis.joystickLeftCenter.getElement().style.color = \"red\";\n\t\tthis.joystickLeftCenter.setHidden(true);\n\n\t\tthis.joystickRightBorder = new TextObject2D();\n\t\tthis.joystickRightBorder.center = true;\n\t\tthis.joystickRightBorder.scaleWithWindow = true;\n\t\tthis.joystickRightBorder.position = vec2.fromValues(0.85, 0.8);\n\t\tthis.joystickRightBorder.size = 1920 * this.joystickRightRadius * 2.0;\n\t\tthis.joystickRightBorder.textString = \"⊕\";\n\t\tthis.joystickRightBorder.getElement().style.opacity = \"50%\";\n\t\tthis.joystickRightBorder.setHidden(true);\n\n\t\tthis.joystickRightCenter = new TextObject2D();\n\t\tthis.joystickRightCenter.center = true;\n\t\tthis.joystickRightCenter.scaleWithWindow = true;\n\t\tvec2.copy(this.joystickRightCenter.position, this.joystickRightBorder.position);\n\t\tthis.joystickRightCenter.size = 1920 * this.joystickRightRadius;\n\t\tthis.joystickRightCenter.textString = \"⚫\";\n\t\tthis.joystickRightCenter.getElement().style.opacity = \"50%\";\n\t\tthis.joystickRightCenter.getElement().style.color = \"red\";\n\t\tthis.joystickRightCenter.setHidden(true);\n\n\t\tthis.buttonRadius = 0.05; // 5 % of the width\n\n\t\tthis.aButton = new TextObject2D();\n\t\tthis.aButton.center = true;\n\t\tthis.aButton.scaleWithWindow = true;\n\t\tthis.aButton.position[0] = 0.65;\n\t\tthis.aButton.position[1] = 0.8;\n\t\tthis.aButton.size = 1920 * this.buttonRadius * 2.0;\n\t\tthis.aButton.textString = \"🔴\";\n\t\tthis.aButton.getElement().style.opacity = \"50%\";\n\t\tthis.aButton.setHidden(true);\n\n\t\tthis.bButton = new TextObject2D();\n\t\tthis.bButton.center = true;\n\t\tthis.bButton.scaleWithWindow = true;\n\t\tthis.bButton.position[0] = 0.75;\n\t\tthis.bButton.position[1] = 0.55;\n\t\tthis.bButton.size = 1920 * this.buttonRadius * 2.0;\n\t\tthis.bButton.textString = \"🔵\";\n\t\tthis.bButton.getElement().style.opacity = \"50%\";\n\t\tthis.bButton.setHidden(true);\n\t}\n\n\tmouseMoveCallBack(event: MouseEvent) {\n\t\t// Overload this if you want direct controll of the events\n\t}\n\n\thandleTouch(touches) {\n\t\tthis.touchUsed = true;\n\n\t\tlet joystickLeftBeingUsed =\n\t\t\tthis.joystickLeftDirection[0] != 0.0 ||\n\t\t\tthis.joystickLeftDirection[1] != 0.0;\n\n\t\tthis.joystickLeftDirection[0] = 0.0;\n\t\tthis.joystickLeftDirection[1] = 0.0;\n\n\t\tlet joystickRightBeingUsed =\n\t\t\tthis.joystickRightDirection[0] != 0.0 ||\n\t\t\tthis.joystickRightDirection[1] != 0.0;\n\n\t\tthis.joystickRightDirection[0] = 0.0;\n\t\tthis.joystickRightDirection[1] = 0.0;\n\n\t\tfor (const key of this.buttons.keys()) {\n\t\t\tthis.buttons.set(key, false);\n\t\t}\n\n\t\tvar paddingX = windowInfo.paddingX;\n\t\tvar paddingY = windowInfo.paddingY;\n\t\tlet width = windowInfo.resolutionWidth;\n\t\tlet height = windowInfo.resolutionHeight;\n\n\t\tlet joystickLeftRadiusInPixels = width * this.joystickLeftRadius;\n\t\tlet joystickLeftCenter = vec2.fromValues(\n\t\t\tpaddingX + width * this.joystickLeftBorder.position[0],\n\t\t\tpaddingY + height * this.joystickLeftBorder.position[1],\n\t\t); // In pixels\n\n\t\tlet joystickRightRadiusInPixels = width * this.joystickRightRadius;\n\t\tlet joystickRightCenter = vec2.fromValues(\n\t\t\tpaddingX + width * this.joystickRightBorder.position[0],\n\t\t\tpaddingY + height * this.joystickRightBorder.position[1],\n\t\t); // In pixels\n\n\t\tlet aButtonCenter = vec2.fromValues(\n\t\t\tpaddingX + width * this.aButton.position[0],\n\t\t\tpaddingY + height * this.aButton.position[1],\n\t\t); // In pixels\n\t\tlet bButtonCenter = vec2.fromValues(\n\t\t\tpaddingX + width * this.bButton.position[0],\n\t\t\tpaddingY + height * this.bButton.position[1],\n\t\t); // In pixels\n\n\t\tfor (let touch of touches) {\n\t\t\tlet touchPos = vec2.fromValues(touch.clientX, touch.clientY);\n\n\t\t\t// Handle touches not related to joystickLeft here, break if they are fulfilled\n\t\t\tif (\n\t\t\t\tvec2.dist(touchPos, aButtonCenter) <\n\t\t\t\tthis.buttonRadius * width\n\t\t\t) {\n\t\t\t\tif (this.repositionTouchControls) {\n\t\t\t\t\tthis.aButton.position[0] = (touchPos[0] - paddingX) / width;\n\t\t\t\t\tthis.aButton.position[1] = (touchPos[1] - paddingY) / height;\n\t\t\t\t} else {\n\t\t\t\t\tthis.buttons.set(\"A\", true);\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tvec2.dist(touchPos, bButtonCenter) <\n\t\t\t\tthis.buttonRadius * width\n\t\t\t) {\n\t\t\t\tif (this.repositionTouchControls) {\n\t\t\t\t\tthis.bButton.position[0] = (touchPos[0] - paddingX) / width;\n\t\t\t\t\tthis.bButton.position[1] = (touchPos[1] - paddingY) / height;\n\t\t\t\t} else {\n\t\t\t\t\tthis.buttons.set(\"B\", true);\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Handle joystickLeft\n\t\t\tlet joystickLeftDistanceFromCenter = vec2.subtract(vec2.create(), touchPos, joystickLeftCenter);\n\t\t\t// If the joystickLeft was being used already, allow movement on the left size of the screen, otherwise allow movement within the joystickLeft border\n\t\t\tif (\n\t\t\t\t(joystickLeftBeingUsed ||\n\t\t\t\t\tvec2.len(joystickLeftDistanceFromCenter) < joystickLeftRadiusInPixels) &&\n\t\t\t\ttouchPos[0] < paddingX + width * 0.5\n\t\t\t) {\n\t\t\t\tif (this.repositionTouchControls) {\n\t\t\t\t\tthis.joystickLeftBorder.position[0] = (touchPos[0] - paddingX) / width;\n\t\t\t\t\tthis.joystickLeftBorder.position[1] = (touchPos[1] - paddingY) / height;\n\t\t\t\t} else {\n\t\t\t\t\tthis.joystickLeftDirection[0] =\n\t\t\t\t\t\tjoystickLeftDistanceFromCenter[0] / joystickLeftRadiusInPixels;\n\t\t\t\t\tthis.joystickLeftDirection[1] =\n\t\t\t\t\t\tjoystickLeftDistanceFromCenter[1] / joystickLeftRadiusInPixels;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Handle joystickRight\n\t\t\tlet joystickRightDistanceFromCenter = vec2.subtract(vec2.create(), touchPos, joystickRightCenter);\n\t\t\t// If the joystickRight was being used already, allow movement on the left size of the screen, otherwise allow movement within the joystickRight border\n\t\t\tif (\n\t\t\t\t(joystickRightBeingUsed ||\n\t\t\t\t\tvec2.len(joystickRightDistanceFromCenter) <\n\t\t\t\t\t\tjoystickRightRadiusInPixels) &&\n\t\t\t\ttouchPos[0] > paddingX + width * 0.5\n\t\t\t) {\n\t\t\t\tif (this.repositionTouchControls) {\n\t\t\t\t\tthis.joystickRightBorder.position[0] = (touchPos[0] - paddingX) / width;\n\t\t\t\t\tthis.joystickRightBorder.position[1] =\n\t\t\t\t\t\t(touchPos[1] - paddingY) / height;\n\t\t\t\t} else {\n\t\t\t\t\tthis.joystickRightDirection[0] =\n\t\t\t\t\t\tjoystickRightDistanceFromCenter[0] / joystickRightRadiusInPixels;\n\t\t\t\t\tthis.joystickRightDirection[1] =\n\t\t\t\t\t\tjoystickRightDistanceFromCenter[1] / joystickRightRadiusInPixels;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tgetMouseMovement(): vec2 {\n\t\tlet diff = vec2.clone(this.mouseMovementSinceLast);\n\t\tvec2.set(this.mouseMovementSinceLast, 0.0, 0.0);\n\t\treturn diff;\n\t}\n\n\tupdateGamepad() {\n\t\tif (window.isSecureContext) {\n\t\t\tthis.gamepads = navigator.getGamepads();\n\n\t\t\tfor (const gp of this.gamepads) {\n\t\t\t\tif (!gp) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tthis.touchUsed = false;\n\t\t\t\tif (Math.abs(gp.axes[0]) > 0.1) {\n\t\t\t\t\tthis.joystickLeftDirection[0] = gp.axes[0];\n\t\t\t\t} else {\n\t\t\t\t\tthis.joystickLeftDirection[0] = 0.0;\n\t\t\t\t}\n\n\t\t\t\tif (Math.abs(gp.axes[1]) > 0.1) {\n\t\t\t\t\tthis.joystickLeftDirection[1] = gp.axes[1];\n\t\t\t\t} else {\n\t\t\t\t\tthis.joystickLeftDirection[1] = 0.0;\n\t\t\t\t}\n\n\t\t\t\tthis.touchUsed = false;\n\t\t\t\tif (Math.abs(gp.axes[2]) > 0.1) {\n\t\t\t\t\tthis.joystickRightDirection[0] = gp.axes[2];\n\t\t\t\t} else {\n\t\t\t\t\tthis.joystickRightDirection[0] = 0.0;\n\t\t\t\t}\n\n\t\t\t\tif (Math.abs(gp.axes[3]) > 0.1) {\n\t\t\t\t\tthis.joystickRightDirection[1] = gp.axes[3];\n\t\t\t\t} else {\n\t\t\t\t\tthis.joystickRightDirection[1] = 0.0;\n\t\t\t\t}\n\n\t\t\t\tfor (const key of this.buttons.keys()) {\n\t\t\t\t\tthis.buttons.set(key, false);\n\t\t\t\t}\n\n\t\t\t\tif (gp.buttons[0].value > 0.5) {\n\t\t\t\t\tthis.buttons.set(\"A\", true);\n\t\t\t\t\tconsole.log(\"Pressed A\");\n\t\t\t\t}\n\t\t\t\tif (gp.buttons[1].value > 0.5) {\n\t\t\t\t\tthis.buttons.set(\"B\", true);\n\t\t\t\t\tconsole.log(\"Pressed B\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdrawTouchControls() {\n\t\tthis.joystickLeftBorder.setHidden(!this.touchUsed);\n\t\tthis.joystickLeftCenter.setHidden(!this.touchUsed);\n\t\tthis.joystickRightBorder.setHidden(!this.touchUsed);\n\t\tthis.joystickRightCenter.setHidden(!this.touchUsed);\n\t\tthis.aButton.setHidden(!this.touchUsed);\n\t\tthis.bButton.setHidden(!this.touchUsed);\n\t\tif (this.touchUsed) {\n\t\t\tthis.joystickLeftCenter.position[0] =\n\t\t\t\tthis.joystickLeftBorder.position[0] +\n\t\t\t\tthis.joystickLeftDirection[0] * this.joystickLeftRadius;\n\t\t\tthis.joystickLeftCenter.position[1] =\n\t\t\t\tthis.joystickLeftBorder.position[1] +\n\t\t\t\tthis.joystickLeftDirection[1] *\n\t\t\t\t\t(this.joystickLeftRadius * this.screenAspectRatio) -\n\t\t\t\t0.01;\n\t\t\tthis.joystickRightCenter.position[0] =\n\t\t\t\tthis.joystickRightBorder.position[0] +\n\t\t\t\tthis.joystickRightDirection[0] * this.joystickRightRadius;\n\t\t\tthis.joystickRightCenter.position[1] =\n\t\t\t\tthis.joystickRightBorder.position[1] +\n\t\t\t\tthis.joystickRightDirection[1] *\n\t\t\t\t\t(this.joystickRightRadius * this.screenAspectRatio) -\n\t\t\t\t0.01;\n\n\t\t\tthis.joystickLeftBorder.draw();\n\t\t\tthis.joystickLeftCenter.draw();\n\t\t\tthis.joystickRightBorder.draw();\n\t\t\tthis.joystickRightCenter.draw();\n\t\t\tthis.aButton.draw();\n\t\t\tthis.bButton.draw();\n\t\t}\n\t}\n}\n","import { mat4, vec2, vec3, vec4 } from \"gl-matrix\";\nimport { input } from \"../../Game/GameMachine\";\nimport { windowInfo } from \"../../main\";\nimport Camera from \"../Objects/Camera\";\nimport Ray from \"../Physics/Shapes/Ray\";\n\nexport module MousePicking {\n\texport function GetRay(camera: Camera): Ray {\n\t\tlet ndc = vec2.fromValues(\n\t\t\tinput.mousePositionOnCanvas.x,\n\t\t\tinput.mousePositionOnCanvas.y,\n\t\t);\n\t\tndc[0] = (ndc[0] / windowInfo.resolutionWidth - 0.5) * 2.0;\n\t\tndc[1] = (ndc[1] / windowInfo.resolutionHeight - 0.5) * -2.0;\n\n\t\tlet mouseRayClip = vec4.fromValues(ndc[0], ndc[1], -1.0, 1.0);\n\t\tlet mouseRayCamera = vec4.transformMat4(vec4.create(), mouseRayClip, mat4.invert(mat4.create(), camera.getProjectionMatrix()))\n\t\tmouseRayCamera[2] = -1.0;\n\t\tmouseRayCamera[3] = 0.0;\n\t\tlet mouseRayWorld4D = vec4.transformMat4(vec4.create(), mouseRayCamera, mat4.invert(mat4.create(), camera.getViewMatrix())); \n\t\tlet dir = vec3.normalize(vec3.create(), vec3.fromValues(\n\t\t\tmouseRayWorld4D[0],\n\t\t\tmouseRayWorld4D[1],\n\t\t\tmouseRayWorld4D[2],\n\t\t));\n\n\t\tlet ray = new Ray();\n\t\tray.setDir(dir);\n\t\tray.setStart(vec3.clone(camera.getPosition()));\n\n\t\treturn ray;\n\t}\n}\n","import { ReadonlyVec3, vec3 } from \"gl-matrix\";\nimport Shape from \"../Physics/Shapes/Shape\";\nimport Triangle from \"../Physics/Shapes/Triangle\";\n\nexport module SAT {\n\t/**\n\t * Finds how big of an overlap there is between two sets of points along a vector.\n\t * @param overlapVector The vector to test along.\n\t * @param shapeAVertices Points in set A\n\t * @param shapeBVertices Points in set B\n\t * @param reverse An object holding a variable \"value\" that is set to true if the vector should be flipped in order to have the vector point from dataset B towards dataset A.\n\t * Is set by this function.\n\t * @returns How big the overlap is, returns -1.0 if there is no overlap.\n\t */\n\texport function getOverlap(\n\t\toverlapVector: vec3,\n\t\tshapeAVertices: Array<vec3>,\n\t\tshapeBVertices: Array<vec3>,\n\t\treverse: { value: boolean },\n\t\tmargin: number\n\t): number {\n\t\tlet maxA = vec3.dot(overlapVector, shapeAVertices[0]);\n\t\tlet minA = maxA;\n\t\tlet maxB = vec3.dot(overlapVector, shapeBVertices[0]);\n\t\tlet minB = maxB;\n\n\t\tlet tempDot = 0.0;\n\n\t\tfor (let i = 1; i < shapeAVertices.length; i++) {\n\t\t\ttempDot = vec3.dot(overlapVector, shapeAVertices[i]);\n\t\t\tminA = Math.min(tempDot, minA);\n\t\t\tmaxA = Math.max(tempDot, maxA);\n\t\t}\n\n\t\tfor (let i = 1; i < shapeBVertices.length; i++) {\n\t\t\ttempDot = vec3.dot(overlapVector, shapeBVertices[i]);\n\t\t\tminB = Math.min(tempDot, minB);\n\t\t\tmaxB = Math.max(tempDot, maxB);\n\t\t}\n\n\t\tlet overlap1 = maxB - minA;\n\t\tlet overlap2 = maxA - minB;\n\t\tif (overlap1 >= -margin && overlap2 >= -margin) {\n\t\t\tif (overlap1 > overlap2) {\n\t\t\t\treverse.value = true;\n\t\t\t\treturn overlap2;\n\t\t\t} else {\n\t\t\t\treverse.value = false;\n\t\t\t\treturn overlap1;\n\t\t\t}\n\t\t}\n\n\t\treturn -1.0;\n\t}\n\n\t/**\n\t * Finds if two sets of vertices will overlap along an axis given their relative speed within the time frame (time input object).\n\t * Will alter the first collision time and last collision time in the info object, as well as copy the test vec to the intersectionVec in the info object\n\t * @param testVec The axis for overlap\n\t * @param shapeAVertices Vertices for shape A\n\t * @param shapeBVertices Vertices for shape B\n\t * @param relativeVelocity Relative velocity between the shapes\n\t * @param info info object which contains - time for first, last, max. Max is how soon the overlap has to happen to count. Also holds the intersection vector for the first overlap\n\t * @returns If an overlap happens within the timeframe (info.max)\n\t */\n\texport function getContinousOverlap(\n\t\ttestVec: vec3,\n\t\tshapeAVertices: Array<vec3>,\n\t\tshapeBVertices: Array<vec3>,\n\t\trelativeVelocity: vec3,\n\t\tinfo: { first: number; last: number; max: number; intersectionVec: vec3}\n\t): boolean {\n\t\tlet minA = Infinity,\n\t\t\tminB = Infinity;\n\t\tlet maxA = -Infinity,\n\t\t\tmaxB = -Infinity;\n\n\t\tlet tempDot = 0.0;\n\n\t\tfor (const vert of shapeAVertices) {\n\t\t\ttempDot = vec3.dot(vert, testVec);\n\n\t\t\tminA = Math.min(minA, tempDot);\n\t\t\tmaxA = Math.max(maxA, tempDot);\n\t\t}\n\n\t\tfor (const vert of shapeBVertices) {\n\t\t\ttempDot = vec3.dot(vert, testVec);\n\n\t\t\tminB = Math.min(minB, tempDot);\n\t\t\tmaxB = Math.max(maxB, tempDot);\n\t\t}\n\n\t\t//Following found here: https://www.geometrictools.com/Documentation/MethodOfSeparatingAxes.pdf\n\n\t\tlet T: number;\n\t\tlet speed = vec3.dot(testVec, relativeVelocity);\n\n\t\tif (maxB <= minA) {\n\t\t\tif (speed <= 0.0) {\n\t\t\t\t// Interval (B) initially on ‘left’ of interval (A)\n\t\t\t\treturn false; // Intervals moving apart\n\t\t\t}\n\n\t\t\tT = (minA - maxB) / speed;\n\t\t\tif (T > info.first) {\n\t\t\t\tinfo.first = T;\n\t\t\t\tvec3.copy(info.intersectionVec, testVec);\n\t\t\t}\n\t\t\tif (info.first > info.max) {\n\t\t\t\treturn false;\n\t\t\t} // Early exit\n\n\t\t\tT = (maxA - minB) / speed;\n\t\t\tif (T < info.last) {\n\t\t\t\tinfo.last = T;\n\t\t\t}\n\t\t\tif (info.first > info.last) {\n\t\t\t\treturn false;\n\t\t\t} // Early exit\n\t\t} else if (maxA <= minB) {\n\t\t\t// Interval (B) initially on ‘right’ of interval (A)\n\t\t\tif (speed >= 0.0) {\n\t\t\t\treturn false;\n\t\t\t} // Intervals moving apart\n\n\t\t\tT = (maxA - minB) / speed;\n\t\t\tif (T > info.first) {\n\t\t\t\tinfo.first = T;\n\t\t\t\tvec3.copy(info.intersectionVec, testVec);\n\t\t\t}\n\t\t\tif (info.first > info.max) {\n\t\t\t\treturn false;\n\t\t\t} // Early exit\n\n\t\t\tT = (minA - maxB) / speed;\n\t\t\tif (T < info.last) {\n\t\t\t\tinfo.last = T;\n\t\t\t}\n\t\t\tif (info.first > info.last) {\n\t\t\t\treturn false;\n\t\t\t} // Early exit\n\t\t} else {\n\t\t\t// Interval (A) and interval (B) overlap\n\t\t\tif (speed > 0.0) {\n\t\t\t\tT = (maxA - minB) / speed;\n\t\t\t\tif (T < info.last) {\n\t\t\t\t\tinfo.last = T;\n\t\t\t\t}\n\t\t\t\tif (info.first > info.last) {\n\t\t\t\t\treturn false;\n\t\t\t\t} // Early exit\n\t\t\t} else if (speed < 0.0) {\n\t\t\t\tT = (minA - maxB) / speed;\n\t\t\t\tif (T < info.last) {\n\t\t\t\t\tinfo.last = T;\n\t\t\t\t}\n\t\t\t\tif (info.first > info.last) {\n\t\t\t\t\treturn false;\n\t\t\t\t} // Early exit\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * This will find the average point of intersection between two shapes along an axis.\n\t * This assumes that the shapes are intersecting and can not be used to find out IF two shapes are intersecting.\n\t * @param shapeA Shape A\n\t * @param shapeB Shape B\n\t * @param testAxis The axis to test along.\n\t * @returns The average point of intersection.\n\t */\n\texport function getIntersectionPoint(\n\t\tshapeA: Shape,\n\t\tshapeB: Shape,\n\t\ttestAxis: vec3\n\t): vec3 {\n\t\tlet shapeAVertices = shapeA.getTransformedVertices();\n\t\tlet shapeBVertices = shapeB.getTransformedVertices();\n\n\t\tlet maxAPoints: Array<number> = new Array<number>();\n\t\tlet minAPoints: Array<number> = new Array<number>();\n\t\tlet maxBPoints: Array<number> = new Array<number>();\n\t\tlet minBPoints: Array<number> = new Array<number>();\n\n\t\tlet maxA = vec3.dot(testAxis, shapeAVertices[0]);\n\t\tmaxAPoints.push(0);\n\t\tlet minA = maxA;\n\t\tminAPoints.push(0);\n\t\tlet maxB = vec3.dot(testAxis, shapeBVertices[0]);\n\t\tmaxBPoints.push(0);\n\t\tlet minB = maxB;\n\t\tminBPoints.push(0);\n\n\t\tlet tempDot = 0.0;\n\n\t\tfor (let i = 1; i < shapeAVertices.length; i++) {\n\t\t\ttempDot = vec3.dot(testAxis, shapeAVertices[i]);\n\t\t\tif (tempDot < minA) {\n\t\t\t\tminA = tempDot;\n\t\t\t\tminAPoints.length = 0;\n\t\t\t\tminAPoints.push(i);\n\t\t\t} else if (Math.abs(tempDot - minA) < 0.0001) {\n\t\t\t\tminAPoints.push(i);\n\t\t\t}\n\t\t\tif (tempDot > maxA) {\n\t\t\t\tmaxA = tempDot;\n\t\t\t\tmaxAPoints.length = 0;\n\t\t\t\tmaxAPoints.push(i);\n\t\t\t} else if (Math.abs(tempDot - maxA) < 0.0001) {\n\t\t\t\tmaxAPoints.push(i);\n\t\t\t}\n\t\t}\n\n\t\tfor (let i = 1; i < shapeBVertices.length; i++) {\n\t\t\ttempDot = vec3.dot(testAxis, shapeBVertices[i]);\n\t\t\tif (tempDot < minB) {\n\t\t\t\tminB = tempDot;\n\t\t\t\tminBPoints.length = 0;\n\t\t\t\tminBPoints.push(i);\n\t\t\t} else if (Math.abs(tempDot - minB) < 0.0001) {\n\t\t\t\tminBPoints.push(i);\n\t\t\t}\n\t\t\tif (tempDot > maxB) {\n\t\t\t\tmaxB = tempDot;\n\t\t\t\tmaxBPoints.length = 0;\n\t\t\t\tmaxBPoints.push(i);\n\t\t\t} else if (Math.abs(tempDot - maxB) < 0.0001) {\n\t\t\t\tmaxBPoints.push(i);\n\t\t\t}\n\t\t}\n\n\t\tlet overlap1 = Math.abs(maxB - minA);\n\t\tlet overlap2 = Math.abs(maxA - minB);\n\n\t\t// let averagePoint = new Vec3();\n\t\t// let nrPoints = 0;\n\t\tlet intersectionPoint = vec3.create();\n\n\t\tif (overlap1 > overlap2) {\n\t\t\t// overlap2\n\t\t\t// for (const p of maxAPoints) {\n\t\t\t// \taveragePoint.add(shapeAVertices[p]);\n\t\t\t// \tnrPoints++;\n\t\t\t// }\n\t\t\t// for (const p of minBPoints) {\n\t\t\t// \taveragePoint.add(shapeBVertices[p]);\n\t\t\t// \tnrPoints++;\n\t\t\t// }\n\n\t\t\tif (maxAPoints.length == 1) {\n\t\t\t\tvec3.copy(intersectionPoint, shapeAVertices[maxAPoints[0]]);\n\t\t\t}\n\t\t\telse if (minBPoints.length == 1) {\n\t\t\t\tvec3.copy(intersectionPoint, shapeBVertices[minBPoints[0]]);\n\t\t\t}\n\t\t} else {\n\t\t\t// overlap1;\n\t\t\t// for (const p of minAPoints) {\n\t\t\t// \taveragePoint.add(shapeAVertices[p]);\n\t\t\t// \tnrPoints++;\n\t\t\t// }\n\t\t\t// for (const p of maxBPoints) {\n\t\t\t// \taveragePoint.add(shapeBVertices[p]);\n\t\t\t// \tnrPoints++;\n\t\t\t// }\n\n\t\t\tif (minAPoints.length == 1) {\n\t\t\t\tvec3.copy(intersectionPoint, shapeAVertices[minAPoints[0]]);\n\t\t\t}\n\t\t\telse if (maxBPoints.length == 1) {\n\t\t\t\tvec3.copy(intersectionPoint, shapeBVertices[maxBPoints[0]]);\n\t\t\t}\n\t\t}\n\t\t// averagePoint.multiply(1.0 / nrPoints);\n\t\treturn intersectionPoint;\n\t}\n\n\t/**\n\t * Intersection testing of two shapes.\n\t * @param shapeA Shape A\n\t * @param shapeB Shape B\n\t * @param intersectionAxis The minimum translation vector (MTV).\n\t * This is the axis at which the shapes are intersecting the least.\n\t * Is set by this function.\n\t * Will always point from Shape B towards Shape A.\n\t * @param intersectionDepth An object holding a variable \"depth\" that will state how much the shapes are intersecting.\n\t * Is set by this function\n\t * @returns Boolean stating if the shapes intersect or not.\n\t */\n\texport function getIntersection3D(\n\t\tshapeA: Shape,\n\t\tshapeB: Shape,\n\t\tintersectionAxis: vec3,\n\t\tintersectionDepth: { depth: number }\n\t): boolean {\n\t\tintersectionDepth.depth = Infinity;\n\n\t\tlet shapeAVertices = shapeA.getTransformedVertices();\n\t\tlet shapeBVertices = shapeB.getTransformedVertices();\n\n\t\t// Check normal and update intersection depth and axis if shallower than previous\n\t\tlet checkNormal = function (normal: vec3): boolean {\n\t\t\tlet reverse = { value: false };\n\t\t\tlet overlap = SAT.getOverlap(\n\t\t\t\tnormal,\n\t\t\t\tshapeAVertices,\n\t\t\t\tshapeBVertices,\n\t\t\t\treverse,\n\t\t\t\tshapeA.margin + shapeB.margin\n\t\t\t);\n\n\t\t\tif (overlap < 0.0) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (overlap < intersectionDepth.depth) {\n\t\t\t\tintersectionDepth.depth = overlap;\n\t\t\t\tvec3.copy(intersectionAxis, normal);\n\t\t\t\tif (reverse.value) {\n\t\t\t\t\tvec3.scale(intersectionAxis, intersectionAxis, -1);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n\t\tlet shapeBNormals = shapeB.getTransformedNormals();\n\t\tfor (let normal of shapeBNormals) {\n\t\t\tif (!checkNormal(normal)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tlet shapeANormals = shapeA.getTransformedNormals();\n\t\tfor (let normal of shapeANormals) {\n\t\t\tif (!checkNormal(normal)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// The shapes are intersecting along all normals\n\t\t// Two cases are possible;\n\t\t// 1. The shapes are flat and coplanar -> We need to test the shapes in \"2d\", projected on the plane they are on\n\t\t// 2. The shapes are not flat and coplanar -> We need to test the cross products of all the edges of ShapeA with the edges of ShapeB\n\n\t\t// Lets start with the coplanar possibility, which can be checked by seeing if both shapes have only one normal, and the two shapes normals are perpendicular\n\t\t// Side note; If the normals are perpendicular, but the shapes are not coplanar, the previous tests would have found a seperating axis, so we wouldn't have gotten here\n\n\t\tif (shapeANormals.length == 1 && shapeBNormals.length == 1) {\n\t\t\t// Coplanar possible\n\t\t\tlet crossVector = vec3.cross(vec3.create(), shapeANormals[0], shapeBNormals[0]);\n\n\t\t\tif (\n\t\t\t\tcrossVector[0] == 0.0 &&\n\t\t\t\tcrossVector[1] == 0.0 &&\n\t\t\t\tcrossVector[2] == 0.0\n\t\t\t) {\n\t\t\t\t// Coplanar\n\t\t\t\t// Test the edge normals for all edges\n\t\t\t\tfor (const AEdgeNormal of shapeA.getTransformedEdgeNormals()) {\n\t\t\t\t\tif (!checkNormal(AEdgeNormal)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (const BEdgeNormal of shapeB.getTransformedEdgeNormals()) {\n\t\t\t\t\tif (!checkNormal(BEdgeNormal)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// There is an intersection, return it\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\t// Calculate cross vectors of edges and test along the results\n\t\tfor (const e1 of shapeA.getTransformedEdges()) {\n\t\t\tfor (const e2 of shapeB.getTransformedEdges()) {\n\t\t\t\tconst dotProd = vec3.dot(e1, e2);\n\t\t\t\tif (dotProd < 0.99 && dotProd > -0.99) {\n\t\t\t\t\tlet testVec = vec3.clone(e1);\n\t\t\t\t\tvec3.normalize(testVec, vec3.cross(testVec, testVec, e2));\n\t\t\t\t\tif (!checkNormal(testVec)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Check when an intersection will occur (if it happens before timeMax).\n\t * @param shapeA\n\t * @param shapeB\n\t * @param velocityA\n\t * @param velocityB\n\t * @param timeMax\n\t * @returns Returns time of intersection if there is one within timeMax, otherwise returns -1.0\n\t */\n\texport function getContinousIntersection3D(\n\t\tshapeA: Shape,\n\t\tshapeB: Shape,\n\t\tvelocityA: ReadonlyVec3,\n\t\tvelocityB: ReadonlyVec3,\n\t\ttimeMax: number\n\t): [number, vec3]{\n\t\t// Treat shapeA as stationary and shapeB as moving\n\t\tlet relativeVel = vec3.subtract(vec3.create(), velocityB, velocityA);\n\n\t\tlet info = { first: 0.0, last: Infinity, max: timeMax, intersectionVec: vec3.create()};\n\n\t\tlet shapeAVertices = shapeA.getTransformedVertices();\n\t\tlet shapeBVertices = shapeB.getTransformedVertices();\n\n\t\tlet shapeANormals = shapeA.getTransformedNormals();\n\t\tfor (let normal of shapeANormals) {\n\t\t\tif (\n\t\t\t\t!getContinousOverlap(\n\t\t\t\t\tnormal,\n\t\t\t\t\tshapeAVertices,\n\t\t\t\t\tshapeBVertices,\n\t\t\t\t\trelativeVel,\n\t\t\t\t\tinfo\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\treturn [-1.0, null];\n\t\t\t}\n\t\t}\n\n\t\tlet shapeBNormals = shapeB.getTransformedNormals();\n\t\tfor (let normal of shapeBNormals) {\n\t\t\tif (\n\t\t\t\t!getContinousOverlap(\n\t\t\t\t\tnormal,\n\t\t\t\t\tshapeAVertices,\n\t\t\t\t\tshapeBVertices,\n\t\t\t\t\trelativeVel,\n\t\t\t\t\tinfo\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\treturn [-1.0, null];\n\t\t\t}\n\t\t}\n\n\t\t// The shapes are intersecting along all normals\n\t\t// Two cases are possible;\n\t\t// 1. The shapes are flat and coplanar -> We need to test the shapes in \"2d\", projected on the plane they are on\n\t\t// 2. The shapes are not flat and coplanar -> We need to test the cross products of all the edges of ShapeA with the edges of ShapeB\n\n\t\t// Lets start with the coplanar possibility, which can be checked by seeing if both shapes have only one normal, and the two shapes normals are perpendicular\n\t\t// Side note; If the normals are perpendicular, but the shapes are not coplanar, the previous tests would have found a seperating axis, so we wouldn't have gotten here\n\n\t\tif (shapeANormals.length == 1 && shapeBNormals.length == 1) {\n\t\t\t// Coplanar possible\n\t\t\tlet crossVector = vec3.cross(vec3.create(), shapeANormals[0], shapeBNormals[0]);\n\n\t\t\tif (\n\t\t\t\tcrossVector[0] == 0.0 &&\n\t\t\t\tcrossVector[1] == 0.0 &&\n\t\t\t\tcrossVector[2] == 0.0\n\t\t\t) {\n\t\t\t\t// Coplanar\n\t\t\t\t// Test the edge normals for all edges\n\t\t\t\tfor (const AEdgeNormal of shapeA.getTransformedEdgeNormals()) {\n\t\t\t\t\tif (\n\t\t\t\t\t\t!getContinousOverlap(\n\t\t\t\t\t\t\tAEdgeNormal,\n\t\t\t\t\t\t\tshapeAVertices,\n\t\t\t\t\t\t\tshapeBVertices,\n\t\t\t\t\t\t\trelativeVel,\n\t\t\t\t\t\t\tinfo\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn [-1.0, null];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (const BEdgeNormal of shapeB.getTransformedEdgeNormals()) {\n\t\t\t\t\tif (\n\t\t\t\t\t\t!getContinousOverlap(\n\t\t\t\t\t\t\tBEdgeNormal,\n\t\t\t\t\t\t\tshapeAVertices,\n\t\t\t\t\t\t\tshapeBVertices,\n\t\t\t\t\t\t\trelativeVel,\n\t\t\t\t\t\t\tinfo\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn [-1.0, null];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// There is an intersection\n\t\t\t\t// If the intersection is NOT exactly at 0.0 and never again, return it\n\t\t\t\tif (info.last == 0.0) {\n\t\t\t\t\treturn [-1.0, null];\n\t\t\t\t}\n\t\t\t\treturn [info.first, info.intersectionVec];\n\t\t\t}\n\t\t}\n\n\t\t// Calculate cross vectors of edges and test along the results\n\t\tfor (const e1 of shapeA.getTransformedEdges()) {\n\t\t\tfor (const e2 of shapeB.getTransformedEdges()) {\n\t\t\t\tconst dotProd = vec3.dot(e1, e2);\n\t\t\t\tif (dotProd < 0.99 && dotProd > -0.99) {\n\t\t\t\t\tlet testVec = vec3.clone(e1);\n\t\t\t\t\tvec3.normalize(testVec, vec3.cross(testVec, testVec, e2));\n\t\t\t\t\tif (\n\t\t\t\t\t\t!getContinousOverlap(\n\t\t\t\t\t\t\ttestVec,\n\t\t\t\t\t\t\tshapeAVertices,\n\t\t\t\t\t\t\tshapeBVertices,\n\t\t\t\t\t\t\trelativeVel,\n\t\t\t\t\t\t\tinfo\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn [-1.0, null];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// If the intersection is NOT exactly at 0.0 and never again, return it\n\t\tif (info.last == 0.0) {\n\t\t\treturn [-1.0, null];\n\t\t}\n\t\treturn [info.first, info.intersectionVec];\n\t}\n}\n","import { ReadonlyVec3, mat4, vec3 } from \"gl-matrix\";\nimport { gl } from \"../../main\";\n\nexport default class Camera {\n\tprivate pos: vec3;\n\tprivate dir: vec3;\n\tprivate up: vec3;\n\tprivate fov: number;\n\tprivate ratio: number;\n\tprivate farPlaneDistance: number;\n\tprivate viewMatrixNeedsUpdate: boolean;\n\tprivate projMatrixNeedsUpdate: boolean;\n\tprivate viewMatrix: mat4;\n\tprivate projectionMatrix: mat4;\n\tprivate viewProjMatrix: mat4;\n\n\tconstructor() {\n\t\t// ----View----\n\t\tthis.pos = vec3.create();\n\t\tthis.dir = vec3.fromValues(0.0, 0.0, -1.0);\n\t\tthis.up = vec3.fromValues(0.0, 1.0, 0.0);\n\t\tthis.viewMatrix = mat4.create();\n\t\tthis.viewMatrixNeedsUpdate = true;\n\t\t// ------------\n\n\t\t// ----Proj----\n\t\tthis.projectionMatrix = mat4.create();\n\t\tthis.projMatrixNeedsUpdate = true;\n\t\tthis.ratio = 16.0 / 9.0;\n\t\tthis.fov = 85.0 * Math.PI / 180;\n\t\tthis.farPlaneDistance = 1000.0;\n\t\t// ------------\n\n\t\tthis.viewProjMatrix = mat4.create();\n\t}\n\n\tgetViewProjMatrix(): mat4 {\n\t\tthis.updateViewProjMatrix();\n\t\treturn this.viewProjMatrix;\n\t}\n\n\tgetViewMatrix(): mat4 {\n\t\tthis.updateViewProjMatrix();\n\t\treturn this.viewMatrix;\n\t}\n\n\tgetProjectionMatrix(): mat4 {\n\t\tthis.updateViewProjMatrix();\n\t\treturn this.projectionMatrix;\n\t}\n\n\tgetFov(): number {\n\t\treturn this.fov;\n\t}\n\n\tgetPosition(): vec3 {\n\t\treturn this.pos;\n\t}\n\n\tgetDir(): ReadonlyVec3 {\n\t\treturn this.dir;\n\t}\n\n\tgetRight(): vec3 {\n\t\tlet returnVec = vec3.create();\n\t\tvec3.cross(returnVec, this.dir, this.up);\n\t\tvec3.normalize(returnVec, returnVec);\n\t\treturn returnVec;\n\t}\n\n\tsetPosition(pos: ReadonlyVec3) {\n\t\tvec3.copy(this.pos, pos);\n\t\tthis.viewMatrixNeedsUpdate = true;\n\t}\n\n\ttranslate(translation: ReadonlyVec3) {\n\t\tvec3.add(this.pos, this.pos, translation);\n\t\tthis.viewMatrixNeedsUpdate = true;\n\t}\n\n\tsetDir(dir: vec3) {\n\t\tvec3.normalize(this.dir, dir);\n\t\tthis.viewMatrixNeedsUpdate = true;\n\t}\n\n\tsetUp(up: vec3) {\n\t\tvec3.normalize(this.up, up);\n\t\tthis.viewMatrixNeedsUpdate = true;\n\t}\n\n\tsetPitchJawDegrees(pitch: number, jaw: number) {\n\t\tvec3.set(this.dir,Math.cos(pitch * Math.PI/180) * Math.sin(jaw * Math.PI/180), Math.sin(pitch * Math.PI/180), Math.cos(pitch * Math.PI/180) * Math.cos(jaw * Math.PI/180));\n\t\tthis.viewMatrixNeedsUpdate = true;\n\t}\n\n\tsetPitchJawRadians(pitch: number, jaw: number) {\n\t\tvec3.set(this.dir,Math.cos(pitch) * Math.sin(jaw), Math.sin(pitch), Math.cos(pitch) * Math.cos(jaw));\n\t\tthis.viewMatrixNeedsUpdate = true;\n\t}\n\n\tsetFOV(fov: number) {\n\t\tthis.fov = fov * Math.PI / 180.0;\n\t\tthis.projMatrixNeedsUpdate = true;\n\t}\n\n\tsetAspectRatio(ratio: number) {\n\t\tthis.ratio = ratio;\n\t\tthis.projMatrixNeedsUpdate = true;\n\t}\n\n\tsetFarPlaneDistance(distance: number) {\n\t\tthis.farPlaneDistance = distance;\n\t\tthis.projMatrixNeedsUpdate\n\t}\n\n\tprivate updateViewProjMatrix() {\n\t\tlet updateViewProj = false;\n\t\tif (this.viewMatrixNeedsUpdate) {\n\t\t\tmat4.lookAt(this.viewMatrix, \n\t\t\t\tthis.pos,\n\t\t\t\tvec3.add(vec3.create(), this.pos, this.dir),\n\t\t\t\tthis.up\n\t\t\t);\n\t\t\tthis.viewMatrixNeedsUpdate = false;\n\t\t\tupdateViewProj = true;\n\t\t}\n\n\t\tif (this.projMatrixNeedsUpdate) {\n\t\t\tmat4.perspective(this.projectionMatrix, this.fov, this.ratio, 0.01, this.farPlaneDistance);\n\t\t\tthis.projMatrixNeedsUpdate = false;\n\t\t\tupdateViewProj = true;\n\t\t}\n\n\t\tif (updateViewProj) {\n\t\t\tmat4.mul(this.viewProjMatrix, this.projectionMatrix, this.viewMatrix);\n\t\t}\n\t}\n\n\tbindViewProjMatrix(\n\t\tuniformLocation: WebGLUniformLocation,\n\t\tskybox: boolean = false\n\t) {\n\t\tthis.updateViewProjMatrix();\n\n\t\tif (skybox) {\n\t\t\tlet tempViewMatrix = mat4.lookAt(mat4.create(), vec3.create(), this.dir, this.up);\n\t\t\tlet tempViewProj = mat4.mul(mat4.create(), this.projectionMatrix, tempViewMatrix);\n\n\t\t\tgl.uniformMatrix4fv(uniformLocation, false, tempViewProj);\n\t\t} else {\n\t\t\tgl.uniformMatrix4fv(uniformLocation, false, this.viewProjMatrix);\n\t\t}\n\t}\n}\n","import { mat4, vec3 } from \"gl-matrix\";\nimport { gl } from \"../../main\";\nimport Texture from \"../Rendering/Textures/Texture\";\nimport GraphicsObject from \"./GraphicsObjects/GraphicsObject\";\n\nexport default class GraphicsBundle {\n\tmodelMatrix: mat4;\n\ttextureMatrix: mat4;\n\n\tdiffuse: Texture;\n\tspecular: Texture;\n\temission: Texture;\n\n\temissionColor: vec3;\n\n\tgraphicsObject: GraphicsObject;\n\n\tconstructor(\n\t\tdiffuse: Texture,\n\t\tspecular: Texture,\n\t\tgraphicsObject: GraphicsObject,\n\t\temissionMap?: Texture\n\t) {\n\t\tthis.diffuse = diffuse;\n\t\tthis.specular = specular;\n\n\t\tif (emissionMap != undefined) {\n\t\t\tthis.emission = emissionMap;\n\t\t} else {\n\t\t\tthis.emission = new Texture();\n\t\t\tthis.emission.setTextureData(new Uint8Array([0.0, 0.0, 0.0, 0.0]), 1, 1);\n\t\t}\n\t\tthis.emissionColor = vec3.fromValues(0.0, 0.0, 0.0);\n\n\t\tthis.modelMatrix = mat4.create();\n\t\tthis.textureMatrix = mat4.create();\n\n\t\tthis.graphicsObject = graphicsObject;\n\t}\n\n\tdraw(bindSpecialTextures: boolean = true) {\n\t\tthis.diffuse.bind(0);\n\n\t\tif (bindSpecialTextures) {\n\t\t\tthis.specular.bind(1);\n\t\t\tthis.emission.bind(2);\n\t\t}\n\n\t\tlet emissionColorU: [WebGLUniformLocation, boolean] =\n\t\t\tthis.graphicsObject.shaderProgram.getUniformLocation(\"emissionColor\");\n\t\tif (emissionColorU[1]) {\n\t\t\tgl.uniform3fv(emissionColorU[0], this.emissionColor);\n\t\t}\n\t\tlet modelReturn: [WebGLUniformLocation, boolean] =\n\t\t\tthis.graphicsObject.shaderProgram.getUniformLocation(\"modelMatrix\");\n\t\tif (modelReturn[1]) {\n\t\t\tgl.uniformMatrix4fv(modelReturn[0], false, this.modelMatrix);\n\t\t}\n\t\tlet textureReturn: [WebGLUniformLocation, boolean] =\n\t\t\tthis.graphicsObject.shaderProgram.getUniformLocation(\"textureMatrix\");\n\t\tif (textureReturn[1]) {\n\t\t\tgl.uniformMatrix4fv(textureReturn[0], false, this.textureMatrix);\n\t\t}\n\n\t\tthis.graphicsObject.draw();\n\t}\n}\n","import { gl } from \"../../../main\";\r\n\r\nimport GraphicsObject from \"./GraphicsObject\";\r\nimport ShaderProgram from \"../../Rendering/ShaderPrograms/ShaderProgram\";\r\n\r\nexport default class GodRayPlanes extends GraphicsObject {\r\n\t// Private\r\n\tprivate numPlanes: number;\r\n\tprivate fogMaxDistance: number;\r\n\tprivate vertices: Float32Array;\r\n\tprivate indices: Int32Array;\r\n\r\n\tconstructor(\r\n\t\tshaderProgram: ShaderProgram\r\n\t) {\r\n\t\tsuper(shaderProgram);\r\n\r\n\t\tthis.numPlanes = 50;\r\n\t\tthis.fogMaxDistance = 100.0;\r\n\t\t\r\n\t\tthis.bindVAO();\r\n\t\tthis.unbindVAO();\r\n\r\n\t\t// prettier-ignore\r\n\t\tthis.vertices = new Float32Array([ \r\n            // positions\r\n            -1.0,  1.0,\r\n            -1.0, -1.0,\r\n             1.0, -1.0,\r\n             1.0,  1.0,\r\n        ]);\r\n\r\n\t\t// prettier-ignore\r\n\t\tthis.indices = new Int32Array([\r\n            0, 1, 2,\r\n            0, 2, 3,\r\n        ]);\r\n\t\tthis.setVertexData(this.vertices);\r\n\t\tthis.setIndexData(this.indices);\r\n\t}\r\n\r\n\tdraw() {\r\n\t\tthis.bindVAO();\r\n\r\n\t\tgl.uniform1f(\r\n\t\t\tthis.shaderProgram.getUniformLocation(\"fogMaxDistance\")[0],\r\n\t\t\tthis.fogMaxDistance\r\n\t\t);\r\n\t\tgl.uniform1f(\r\n\t\t\tthis.shaderProgram.getUniformLocation(\"numPlanes\")[0],\r\n\t\t\tthis.numPlanes\r\n\t\t);\r\n\r\n\t\tgl.drawElementsInstanced(gl.TRIANGLES, 6, gl.UNSIGNED_INT, 0, this.numPlanes);\r\n\t}\r\n}\r\n","import { vec3 } from \"gl-matrix\";\nimport { gl } from \"../../../main\";\nimport Triangle from \"../../Physics/Shapes/Triangle\";\nimport ShaderProgram from \"../../Rendering/ShaderPrograms/ShaderProgram\";\n\nexport default class GraphicsObject {\n\tshaderProgram: ShaderProgram;\n\n\t// Private\n\tprivate VAO: WebGLVertexArrayObject;\n\tprivate VBO: WebGLBuffer;\n\tprivate EBO: WebGLBuffer;\n\n\tconstructor(shaderProgram: ShaderProgram) {\n\t\tthis.shaderProgram = shaderProgram;\n\n\t\tthis.VAO = null;\n\t\tthis.VBO = null;\n\t\tthis.EBO = null; // Optional\n\n\t\tthis.init();\n\t}\n\n\tinit() {\n\t\t// Create buffers\n\t\tthis.VAO = gl.createVertexArray();\n\t\tthis.VBO = gl.createBuffer();\n\t\tthis.EBO = gl.createBuffer();\n\n\t\t// Bind buffers\n\t\tgl.bindVertexArray(this.VAO);\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.VBO);\n\n\t\tthis.shaderProgram.setupVertexAttributePointers();\n\n\t\tgl.bindVertexArray(null);\n\t}\n\n\tbindVAO() {\n\t\tgl.bindVertexArray(this.VAO);\n\t}\n\n\tunbindVAO() {\n\t\tgl.bindVertexArray(null);\n\t}\n\n\tsetVertexData(data: Float32Array) {\n\t\tgl.bindVertexArray(this.VAO);\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.VBO);\n\t\tgl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW);\n\t\tgl.bindVertexArray(null);\n\t}\n\n\tsetIndexData(data: Int32Array) {\n\t\tgl.bindVertexArray(this.VAO);\n\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.EBO);\n\t\tgl.bufferData(gl.ELEMENT_ARRAY_BUFFER, data, gl.STATIC_DRAW);\n\n\t\tgl.bindVertexArray(null);\n\t}\n\n\tsetupTriangles(triangles: Array<Triangle>) {}\n\n\tgetVertexPositions(): Array<vec3> {\n\t\treturn null;\n\t}\n\n\tdraw() {\n\t\t// Can this be virtual?\n\t}\n}\n","import { gl } from \"../../../main\";\n\nimport GraphicsObject from \"./GraphicsObject\";\nimport ShaderProgram from \"../../Rendering/ShaderPrograms/ShaderProgram\";\nimport { vec3 } from \"gl-matrix\";\n\nexport default class GrassSpawner extends GraphicsObject {\n\t// Private\n\tprivate numGrassStraws: number;\n\tprivate vertices: Float32Array;\n\tprivate instanceVBO: WebGLBuffer;\n\n\tconstructor(\n\t\tshaderProgram: ShaderProgram,\n\t\tnumberOfStartingGrassStraws: number = 0\n\t) {\n\t\tsuper(shaderProgram);\n\n\t\tthis.bindVAO();\n\t\tthis.instanceVBO = gl.createBuffer();\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.instanceVBO);\n\t\tgl.bufferData(\n\t\t\tgl.ARRAY_BUFFER,\n\t\t\tnumberOfStartingGrassStraws * 7 * 4,\n\t\t\tgl.STATIC_DRAW\n\t\t);\n\t\tshaderProgram.setupInstancedVertexAttributePointers();\n\t\tthis.unbindVAO();\n\n\t\t// prettier-ignore\n\t\tthis.vertices = new Float32Array([ \n            // positions  // uv\n             0.0,  1.0,   0.5, 1.0,\n            -0.1,  0.0,   0.0, 0.0,\n             0.1,  0.0,   1.0, 0.0,\n        ]);\n\n\t\tthis.setVertexData(this.vertices);\n\n\t\t// All starting particles are initialized as size and position 0, so they wont be visable unless manually changed\n\t\tthis.numGrassStraws = numberOfStartingGrassStraws;\n\t}\n\n\tsetNumGrassStraws(amount: number) {\n\t\tthis.numGrassStraws = amount;\n\n\t\tthis.bindVAO();\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.instanceVBO);\n\t\tgl.bufferData(gl.ARRAY_BUFFER, this.numGrassStraws * 7 * 4, gl.STATIC_DRAW);\n\t\tthis.unbindVAO();\n\t}\n\n\tgetNumberOfGrassStraws(): number {\n\t\treturn this.numGrassStraws;\n\t}\n\n\tsetGrassStrawData(\n\t\tparticleIndex: number,\n\t\tstartPosition: vec3,\n\t\tsize: number,\n\t\ttipOffset: vec3\n\t): boolean {\n\t\tif (particleIndex > this.numGrassStraws) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet data = new Float32Array([\n\t\t\tstartPosition[0],\n\t\t\tstartPosition[1],\n\t\t\tstartPosition[2],\n\t\t\tsize,\n\t\t\ttipOffset[0],\n\t\t\ttipOffset[1],\n\t\t\ttipOffset[2],\n\t\t]);\n\n\t\tthis.bufferSubDataUpdate(particleIndex * 7, data);\n\n\t\treturn true;\n\t}\n\n\tsetGrassStrawPosition(particleIndex: number, position: vec3): boolean {\n\t\tif (particleIndex > this.numGrassStraws) {\n\t\t\treturn false;\n\t\t}\n\t\tthis.bufferSubDataUpdate(particleIndex * 7, <Float32Array>position);\n\t\treturn true;\n\t}\n\n\tsetGrassStrawSize(particleIndex: number, size: number): boolean {\n\t\tif (particleIndex > this.numGrassStraws) {\n\t\t\treturn false;\n\t\t}\n\t\tthis.bufferSubDataUpdate(particleIndex * 7 + 3, new Float32Array([size]));\n\t\treturn true;\n\t}\n\n\tsetGrassTipOffset(particleIndex: number, offset: vec3): boolean {\n\t\tif (particleIndex > this.numGrassStraws) {\n\t\t\treturn false;\n\t\t}\n\t\tthis.bufferSubDataUpdate(particleIndex * 7 + 4,  <Float32Array>offset);\n\t\treturn true;\n\t}\n\n\tbufferSubDataUpdate(start: number, data: Float32Array): boolean {\n\t\tif (start < 0 || start + data.length > this.numGrassStraws * 7) {\n\t\t\treturn false;\n\t\t}\n\t\tthis.bindVAO();\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.instanceVBO);\n\t\tgl.bufferSubData(gl.ARRAY_BUFFER, start * 4, data);\n\t\tthis.unbindVAO();\n\t\treturn true;\n\t}\n\n\tdraw() {\n\t\tthis.bindVAO();\n\n\t\tgl.drawArraysInstanced(gl.TRIANGLES, 0, 3, this.numGrassStraws);\n\t\tthis.unbindVAO();\n\t}\n}\n","import { mat4, vec3, vec4 } from \"gl-matrix\";\nimport { gl } from \"../../../main\";\nimport Triangle from \"../../Physics/Shapes/Triangle\";\nimport ShaderProgram from \"../../Rendering/ShaderPrograms/ShaderProgram\";\nimport Mesh from \"./Mesh\";\n\nexport default class Heightmap extends Mesh {\n\timageData: Uint8ClampedArray;\n\n\txResolution: number;\n\tzResolution: number;\n\txQuadSize: number;\n\tzQuadSize: number;\n\tprivate indices: Int32Array;\n\n\tconstructor(shaderProgram: ShaderProgram) {\n\t\tsuper(shaderProgram, null);\n\t\tthis.xResolution = 0;\n\t\tthis.zResolution = 0;\n\t\tthis.createPlane(2, 2, 1, 1);\n\t\tthis.imageData = null;\n\t}\n\n\tsetupTriangles(triangles: Array<Triangle>) {\n\t\ttriangles.length = 0; // Clear triangles\n\t\tfor (let i = 0; i < this.indices.length; i += 3) {\n\t\t\t// Go through the vertices\n\t\t\t// Save the positions as shapes in the input array\n\t\t\tconst length = triangles.push(new Triangle());\n\t\t\ttriangles[length - 1].setVertices(\n\t\t\t\tvec3.fromValues(\n\t\t\t\t\tthis.vertices[this.indices[i] * 8],\n\t\t\t\t\tthis.vertices[this.indices[i] * 8 + 1],\n\t\t\t\t\tthis.vertices[this.indices[i] * 8 + 2],\n\t\t\t\t),\n\t\t\t\tvec3.fromValues(\n\t\t\t\t\tthis.vertices[this.indices[i + 1] * 8],\n\t\t\t\t\tthis.vertices[this.indices[i + 1] * 8 + 1],\n\t\t\t\t\tthis.vertices[this.indices[i + 1] * 8 + 2],\n\t\t\t\t),\n\t\t\t\tvec3.fromValues(\n\t\t\t\t\tthis.vertices[this.indices[i + 2] * 8],\n\t\t\t\t\tthis.vertices[this.indices[i + 2] * 8 + 1],\n\t\t\t\t\tthis.vertices[this.indices[i + 2] * 8 + 2],\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate updateVertexData(x: number, z: number, values: number[]) {\n\t\tlet offset = z * this.xResolution * 8 + x * 8;\n\t\tfor (let i = 0; i < values.length; i++) {\n\t\t\tthis.vertices[offset + i] = values[i];\n\t\t}\n\t}\n\n\tprivate updateVertexHeight(x: number, z: number, height: number) {\n\t\tthis.vertices[z * this.xResolution * 8 + x * 8 + 1] = height;\n\t}\n\n\tprivate calculateVertexNormal(x: number, z: number) {\n\t\tif (\n\t\t\tx < 1 ||\n\t\t\tx > this.xResolution - 2 ||\n\t\t\tz < 1 ||\n\t\t\tz > this.zResolution - 2\n\t\t) {\n\t\t\treturn;\n\t\t}\n\t\tlet resultingNormal = vec3.create();\n\t\tlet middlePos = vec3.fromValues(\n\t\t\t0.0,\n\t\t\tthis.vertices[z * this.xResolution * 8 + x * 8 + 1],\n\t\t\t0.0,\n\t\t);\n\n\t\tlet offsets = [\n\t\t\t[-1, -1],\n\t\t\t[1, -1],\n\t\t\t[1, 1],\n\t\t\t[-1, 1],\n\t\t];\n\n\t\tlet tempTriangle = new Triangle();\n\n\t\tfor (let i = 0; i < 4; i++) {\n\t\t\tlet first = i;\n\t\t\tlet second = (i + 1) % 4;\n\n\t\t\ttempTriangle.setVertices(\n\t\t\t\tvec3.fromValues(\n\t\t\t\t\toffsets[first][0] * this.xQuadSize,\n\t\t\t\t\tthis.vertices[\n\t\t\t\t\t\t(z + offsets[first][1]) * this.xResolution * 8 +\n\t\t\t\t\t\t\t(x + offsets[first][0]) * 8 +\n\t\t\t\t\t\t\t1\n\t\t\t\t\t],\n\t\t\t\t\toffsets[first][1] * this.zQuadSize,\n\t\t\t\t),\n\t\t\t\tmiddlePos,\n\t\t\t\tvec3.fromValues(\n\t\t\t\t\toffsets[second][0] * this.xQuadSize,\n\t\t\t\t\tthis.vertices[\n\t\t\t\t\t\t(z + offsets[second][1]) * this.xResolution * 8 +\n\t\t\t\t\t\t\t(x + offsets[second][0]) * 8 +\n\t\t\t\t\t\t\t1\n\t\t\t\t\t],\n\t\t\t\t\toffsets[second][1] * this.zQuadSize,\n\t\t\t\t)\n\t\t\t);\n\t\t\tvec3.add(resultingNormal, resultingNormal, tempTriangle.getTransformedNormals()[0]);\n\t\t}\n\n\t\tvec3.normalize(resultingNormal, resultingNormal);\n\t\tfor (let i = 0; i < 3; i++) {\n\t\t\tthis.vertices[z * this.xResolution * 8 + x * 8 + 3 + i] =\n\t\t\t\tresultingNormal[i];\n\t\t}\n\t}\n\n\tcreatePlane(\n\t\txResolution: number,\n\t\tzResolution: number,\n\t\txQuadSize: number,\n\t\tzQuadSize: number\n\t) {\n\t\tthis.xResolution = Math.max(Math.ceil(xResolution), 2);\n\t\tthis.zResolution = Math.max(Math.ceil(zResolution), 2);\n\t\tthis.xQuadSize = xQuadSize;\n\t\tthis.zQuadSize = zQuadSize;\n\t\tthis.vertices = new Float32Array(\n\t\t\tthis.xResolution * this.zResolution * 8\n\t\t).fill(0.0);\n\t\tfor (let z = 0; z < this.zResolution; z++) {\n\t\t\tfor (let x = 0; x < this.xResolution; x++) {\n\t\t\t\tthis.updateVertexData(x, z, [\n\t\t\t\t\tx * xQuadSize,\n\t\t\t\t\t0.0,\n\t\t\t\t\tz * zQuadSize,\n\t\t\t\t\t0.0,\n\t\t\t\t\t1.0,\n\t\t\t\t\t0.0,\n\t\t\t\t\tx / (this.xResolution - 1),\n\t\t\t\t\tz / (this.zResolution - 1),\n\t\t\t\t]);\n\t\t\t}\n\t\t}\n\n\t\tthis.setVertexData(this.vertices);\n\n\t\tthis.indices = new Int32Array(\n\t\t\t(this.xResolution - 1) * (this.zResolution - 1) * 6\n\t\t).fill(0);\n\n\t\tfor (let z = 0; z < this.zResolution - 1; z++) {\n\t\t\tfor (let x = 0; x < this.xResolution - 1; x++) {\n\t\t\t\tlet indicesOffset = z * (this.xResolution - 1) * 6 + x * 6;\n\t\t\t\tlet topLeftIndex = z * this.xResolution + x;\n\t\t\t\tlet bottomLeftIndex = topLeftIndex + this.xResolution;\n\n\t\t\t\t// Make the diagonals go zig zag to hide repeating patterns along the diagonals\n\t\t\t\tif ((z + x) % 2 == 0) {\n\t\t\t\t\tthis.indices[indicesOffset + 0] = topLeftIndex;\n\t\t\t\t\tthis.indices[indicesOffset + 1] = bottomLeftIndex;\n\t\t\t\t\tthis.indices[indicesOffset + 2] = bottomLeftIndex + 1;\n\t\t\t\t\tthis.indices[indicesOffset + 3] = topLeftIndex;\n\t\t\t\t\tthis.indices[indicesOffset + 4] = bottomLeftIndex + 1;\n\t\t\t\t\tthis.indices[indicesOffset + 5] = topLeftIndex + 1;\n\t\t\t\t} else {\n\t\t\t\t\tthis.indices[indicesOffset + 0] = topLeftIndex;\n\t\t\t\t\tthis.indices[indicesOffset + 1] = bottomLeftIndex;\n\t\t\t\t\tthis.indices[indicesOffset + 2] = topLeftIndex + 1;\n\t\t\t\t\tthis.indices[indicesOffset + 3] = topLeftIndex + 1;\n\t\t\t\t\tthis.indices[indicesOffset + 4] = bottomLeftIndex;\n\t\t\t\t\tthis.indices[indicesOffset + 5] = bottomLeftIndex + 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.setIndexData(this.indices);\n\t}\n\n\t/**\n\t *\n\t * @param texturePath - texture path / URL\n\t * @param createResolutionFromPixels - if the plane should be recreated using the resolution of the picture\n\t */\n\tasync readHeightDataFromTexture(\n\t\ttexturePath: string,\n\t\tcreateResolutionFromPixels: boolean = true\n\t) {\n\t\tlet loadImage = function (src: string): Promise<HTMLImageElement> {\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tlet img = new Image();\n\t\t\t\timg.onload = () => resolve(img);\n\t\t\t\timg.onerror = reject;\n\t\t\t\timg.src = src;\n\t\t\t});\n\t\t};\n\n\t\tlet resizeImage = function (\n\t\t\timage: HTMLImageElement,\n\t\t\tnewWidth: number,\n\t\t\tnewHeight: number\n\t\t): Uint8ClampedArray {\n\t\t\tvar canvas = document.createElement(\"canvas\");\n\t\t\tvar ctx = canvas.getContext(\"2d\");\n\t\t\tcanvas.width = newWidth;\n\t\t\tcanvas.height = newHeight;\n\t\t\tctx.drawImage(image, 0, 0, newWidth, newHeight);\n\t\t\treturn ctx.getImageData(0, 0, newWidth, newHeight).data;\n\t\t};\n\n\t\tlet texture = await loadImage(texturePath);\n\n\t\tif (createResolutionFromPixels) {\n\t\t\tthis.createPlane(texture.width, texture.height, 1.0, 1.0);\n\t\t}\n\n\t\t// Resize the image to the same resolution as our hightmap\n\t\tthis.imageData = resizeImage(texture, this.xResolution, this.zResolution);\n\n\t\t// Go through the heightmap and set the height to the corrsponding pixel in the (resized) image\n\t\tfor (let z = 0; z < this.zResolution; z++) {\n\t\t\tfor (let x = 0; x < this.xResolution; x++) {\n\t\t\t\tthis.updateVertexHeight(\n\t\t\t\t\tx,\n\t\t\t\t\tz,\n\t\t\t\t\tthis.imageData[x * 4 + z * this.xResolution * 4] / 255.0\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t// Calculate normals\n\t\tfor (let z = 0; z < this.zResolution; z++) {\n\t\t\tfor (let x = 0; x < this.xResolution; x++) {\n\t\t\t\tthis.calculateVertexNormal(x, z);\n\t\t\t}\n\t\t}\n\n\t\tthis.setVertexData(this.vertices);\n\t}\n\n\tgetNormalFromWorldPosition(\n\t\theightmapTransformMatrix: mat4,\n\t\tworldPosition: vec3,\n\t\tinvertedTransformMatrix?: mat4\n\t) {\n\t\t// Invert the transform matrix used for the heightmap\n\t\tlet invertedMatrix: mat4;\n\t\tif (invertedTransformMatrix != undefined) {\n\t\t\tinvertedMatrix = invertedTransformMatrix;\n\t\t} else {\n\t\t\tinvertedMatrix = mat4.invert(mat4.create(), heightmapTransformMatrix);\n\t\t}\n\n\t\t// Take the world position and transform it into heightmap local coordinates\n\t\tlet transformedPos = vec3.transformMat4(vec3.create(), vec3.fromValues(worldPosition[0], worldPosition[1], worldPosition[2]), invertedMatrix);\n\n\t\treturn this.getNormal(\n\t\t\ttransformedPos[0],\n\t\t\ttransformedPos[2]\n\t\t);\n\t}\n\n\tgetHeightFromWorldPosition(\n\t\theightmapTransformMatrix: mat4,\n\t\tworldPosition: vec3,\n\t\tinvertedTransformMatrix?: mat4\n\t): number {\n\t\t// Invert the transform matrix used for the heightmap\n\t\tlet invertedMatrix;\n\t\tif (invertedTransformMatrix != undefined) {\n\t\t\tinvertedMatrix = invertedTransformMatrix;\n\t\t} else {\n\t\t\tinvertedMatrix = mat4.invert(mat4.create(), heightmapTransformMatrix);\n\t\t}\n\n\t\t// Take the world position and transform it into heightmap local coordinates\n\t\tlet transformedPos = vec4.transformMat4(vec4.create(), vec4.fromValues(worldPosition[0], worldPosition[1], worldPosition[2], 1.0), invertedTransformMatrix);\n\n\t\t// Get the height of the heightmap at the corresponding position\n\t\tlet height = this.getHeight(\n\t\t\ttransformedPos[0],\n\t\t\ttransformedPos[2]\n\t\t);\n\n\t\tif (height == null) {\n\t\t\treturn null;\n\t\t}\n\n\t\ttransformedPos[1] = height; // set the y coord to the heightmap height\n\t\ttransformedPos[3] = 1.0; // set the w to 1 to be able to transform the position back into world space\n\n\t\tvec4.transformMat4(transformedPos, transformedPos, heightmapTransformMatrix); // To world space! :D\n\n\t\treturn transformedPos[1];\n\t}\n\n\tgetHeight(x: number, z: number): number {\n\t\tif (\n\t\t\tx < 0 ||\n\t\t\tx > this.xResolution * this.xQuadSize ||\n\t\t\tz < 0 ||\n\t\t\tz > this.zResolution * this.zQuadSize\n\t\t) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// Find out what triangle to get the height from\n\t\tlet baseX = Math.floor(x / this.xQuadSize);\n\t\tlet baseZ = Math.floor(z / this.zQuadSize);\n\t\tlet diffX = x - baseX * this.xQuadSize;\n\t\tlet diffZ = z - baseZ * this.zQuadSize;\n\n\t\tlet topRightHeight =\n\t\t\tthis.imageData[(baseX + 1) * 4 + (baseZ + 0) * this.xResolution * 4] /\n\t\t\t255.0;\n\t\tlet bottomLeftHeight =\n\t\t\tthis.imageData[(baseX + 0) * 4 + (baseZ + 1) * this.xResolution * 4] /\n\t\t\t255.0;\n\t\tlet topLeftHeight =\n\t\t\tthis.imageData[(baseX + 0) * 4 + (baseZ + 0) * this.xResolution * 4] /\n\t\t\t255.0;\n\t\tlet bottomRightHeight =\n\t\t\tthis.imageData[(baseX + 1) * 4 + (baseZ + 1) * this.xResolution * 4] /\n\t\t\t255.0;\n\n\t\tif ((baseZ + baseX) % 2 == 0) {\n\t\t\t// Because of the zig-zagging mentioned in the createPlane indices set up\n\t\t\t/*\n            Base\n            |\n            v\n            +--------+ x\n            |\\    A  |\n            |   \\    |\n            | B    \\ |\n            +--------+\n            z\n            */\n\t\t\tif (diffX > diffZ) {\n\t\t\t\t// A\n\t\t\t\tlet kx = topLeftHeight - topRightHeight;\n\t\t\t\tlet kz = bottomRightHeight - topRightHeight;\n\t\t\t\tdiffX = 1 - diffX;\n\t\t\t\treturn topRightHeight + kx * diffX + kz * diffZ;\n\t\t\t} else {\n\t\t\t\t// B\n\t\t\t\tlet kx = bottomRightHeight - bottomLeftHeight;\n\t\t\t\tlet kz = topLeftHeight - bottomLeftHeight;\n\t\t\t\tdiffZ = 1 - diffZ;\n\t\t\t\treturn bottomLeftHeight + kx * diffX + kz * diffZ;\n\t\t\t}\n\t\t} else {\n\t\t\t/*\n            Base\n            |\n            v\n            +--------+ x\n            |  A    /|\n            |    /   |\n            | /    B |\n            +--------+\n            z\n            */\n\t\t\tif (diffX < 1 - diffZ) {\n\t\t\t\t// A\n\t\t\t\tlet kx = topRightHeight - topLeftHeight;\n\t\t\t\tlet kz = bottomLeftHeight - topLeftHeight;\n\t\t\t\treturn topLeftHeight + kx * diffX + kz * diffZ;\n\t\t\t} else {\n\t\t\t\t// B\n\t\t\t\tlet kx = bottomLeftHeight - bottomRightHeight;\n\t\t\t\tlet kz = topRightHeight - bottomRightHeight;\n\t\t\t\tdiffX = 1 - diffX;\n\t\t\t\tdiffZ = 1 - diffZ;\n\t\t\t\treturn bottomRightHeight + kx * diffX + kz * diffZ;\n\t\t\t}\n\t\t}\n\t}\n\n\tgetNormal(x: number, z: number): vec3 {\n\t\tlet xCoord = Math.round(x / this.xQuadSize);\n\t\tlet zCoord = Math.round(z / this.zQuadSize);\n\t\tif (\n\t\t\txCoord < 0 ||\n\t\t\txCoord > this.xResolution - 1 ||\n\t\t\tzCoord < 0 ||\n\t\t\tzCoord > this.zResolution - 1\n\t\t) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet normal = vec3.fromValues(\n\t\t\tthis.vertices[zCoord * this.xResolution * 8 + xCoord * 8 + 3],\n\t\t\tthis.vertices[zCoord * this.xResolution * 8 + xCoord * 8 + 4],\n\t\t\tthis.vertices[zCoord * this.xResolution * 8 + xCoord * 8 + 5],\n\t\t);\n\n\t\treturn normal;\n\t}\n\n\tgetVertices() {\n\t\treturn this.vertices;\n\t}\n\n\tdraw() {\n\t\tthis.bindVAO();\n\t\tgl.drawElements(gl.TRIANGLES, this.indices.length, gl.UNSIGNED_INT, 0);\n\t}\n}\n","import GraphicsObject from \"./GraphicsObject\";\nimport ShaderProgram from \"../../Rendering/ShaderPrograms/ShaderProgram\";\nimport Triangle from \"../../Physics/Shapes/Triangle\";\nimport { gl } from \"../../../main\";\nimport { vec3 } from \"gl-matrix\";\n\nexport default class Mesh extends GraphicsObject {\n\t// Protected\n\tprotected vertices: Float32Array;\n\n\tconstructor(shaderProgram: ShaderProgram, vertices: Float32Array) {\n\t\tsuper(shaderProgram);\n\n\t\tthis.vertices = vertices;\n\t\tthis.setVertexData(this.vertices);\n\t}\n\n\tsetupTriangles(triangles: Array<Triangle>) {\n\t\ttriangles.length = 0; // Clear triangles\n\t\tfor (let i = 0; i < this.vertices.length; i += 8 * 3) {\n\t\t\t// Go through the vertices\n\t\t\t// Save the positions as shapes in the input array\n\t\t\tconst length = triangles.push(new Triangle());\n\t\t\ttriangles[length - 1].setVertices(\n\t\t\t\tvec3.fromValues(\n\t\t\t\t\tthis.vertices[i],\n\t\t\t\t\tthis.vertices[i + 1],\n\t\t\t\t\tthis.vertices[i + 2],\n\t\t\t\t),\n\t\t\t\tvec3.fromValues(\n\t\t\t\t\tthis.vertices[i + 8],\n\t\t\t\t\tthis.vertices[i + 8 + 1],\n\t\t\t\t\tthis.vertices[i + 8 + 2],\n\t\t\t\t),\n\t\t\t\tvec3.fromValues(\n\t\t\t\t\tthis.vertices[i + 16],\n\t\t\t\t\tthis.vertices[i + 16 + 1],\n\t\t\t\t\tthis.vertices[i + 16 + 2],\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t}\n\n\tgetVertexPositions(): Array<vec3> {\n\t\tlet returnArr = new Array<vec3>();\n\t\tfor (let i = 0; i < this.vertices.length; i += 8) {\n\t\t\treturnArr.push(\n\t\t\t\tvec3.fromValues(this.vertices[i], this.vertices[i + 1], this.vertices[i + 2])\n\t\t\t);\n\t\t}\n\t\treturn returnArr;\n\t}\n\n\tdraw() {\n\t\tthis.bindVAO();\n\t\tgl.drawArrays(gl.TRIANGLES, 0, this.vertices.length / 8);\n\t}\n}\n","import { applicationStartTime, gl } from \"../../../main\";\n\nimport GraphicsObject from \"./GraphicsObject\";\nimport Texture from \"../../Rendering/Textures/Texture\";\nimport ShaderProgram from \"../../Rendering/ShaderPrograms/ShaderProgram\";\nimport { vec3 } from \"gl-matrix\";\n\nexport default class ParticleSpawner extends GraphicsObject {\n\ttexture: Texture;\n\tfadePerSecond: number;\n\tsizeChangePerSecond: number;\n\n\t// Private\n\tprivate numParticles: number;\n\tprivate vertices: Float32Array;\n\tprivate indices: Int32Array;\n\tprivate instanceVBO: WebGLBuffer;\n\n\tconstructor(\n\t\tshaderProgram: ShaderProgram,\n\t\ttexture: Texture,\n\t\tnumberOfStartingParticles: number = 0\n\t) {\n\t\tsuper(shaderProgram);\n\n\t\tthis.texture = texture;\n\n\t\tthis.bindVAO();\n\t\tthis.instanceVBO = gl.createBuffer();\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.instanceVBO);\n\t\tgl.bufferData(\n\t\t\tgl.ARRAY_BUFFER,\n\t\t\tnumberOfStartingParticles * 11 * 4,\n\t\t\tgl.DYNAMIC_DRAW\n\t\t);\n\t\tshaderProgram.setupInstancedVertexAttributePointers();\n\t\tthis.unbindVAO();\n\n\t\t// prettier-ignore\n\t\tthis.vertices = new Float32Array([ \n            // positions  // uv\n            -0.5,  0.5,   0.0, 1.0,\n            -0.5, -0.5,   0.0, 0.0,\n             0.5, -0.5,   1.0, 0.0,\n             0.5,  0.5,   1.0, 1.0,\n        ]);\n\n\t\t// prettier-ignore\n\t\tthis.indices = new Int32Array([\n            0, 1, 2,\n            0, 2, 3,\n        ]);\n\t\tthis.setVertexData(this.vertices);\n\t\tthis.setIndexData(this.indices);\n\n\t\t// All starting particles are initialized as size and position 0, so they wont be visable unless manually changed\n\t\tthis.numParticles = numberOfStartingParticles;\n\n\t\tthis.fadePerSecond = 0.0;\n\t\tthis.sizeChangePerSecond = 1.0;\n\t}\n\n\tsetNumParticles(amount: number) {\n\t\tthis.numParticles = amount;\n\n\t\tthis.bindVAO();\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.instanceVBO);\n\t\tgl.bufferData(gl.ARRAY_BUFFER, this.numParticles * 11 * 4, gl.DYNAMIC_DRAW);\n\t\tthis.unbindVAO();\n\t}\n\n\tgetNumberOfParticles(): number {\n\t\treturn this.numParticles;\n\t}\n\n\tsetParticleData(\n\t\tparticleIndex: number,\n\t\tstartPosition: vec3,\n\t\tsize: number,\n\t\tstartVel: vec3,\n\t\tacceleration: vec3\n\t): boolean {\n\t\tif (particleIndex > this.numParticles) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet data = new Float32Array([\n\t\t\tstartPosition[0],\n\t\t\tstartPosition[1],\n\t\t\tstartPosition[2],\n\t\t\tsize,\n\t\t\tstartVel[0],\n\t\t\tstartVel[1],\n\t\t\tstartVel[2],\n\t\t\t(Date.now() - applicationStartTime) * 0.001,\n\t\t\tacceleration[0],\n\t\t\tacceleration[1],\n\t\t\tacceleration[2],\n\t\t]);\n\n\t\tthis.bufferSubDataUpdate(particleIndex * 11, data);\n\n\t\treturn true;\n\t}\n\n\tsetParticleStartPosition(particleIndex: number, position: vec3): boolean {\n\t\tif (particleIndex > this.numParticles) {\n\t\t\treturn false;\n\t\t}\n\t\tthis.bufferSubDataUpdate(particleIndex * 11, <Float32Array>position);\n\t\treturn true;\n\t}\n\n\tsetParticleSize(particleIndex: number, size: number): boolean {\n\t\tif (particleIndex > this.numParticles) {\n\t\t\treturn false;\n\t\t}\n\t\tthis.bufferSubDataUpdate(particleIndex * 11 + 3, new Float32Array([size]));\n\t\treturn true;\n\t}\n\n\tsetParticleStartVelocity(particleIndex: number, vel: vec3): boolean {\n\t\tif (particleIndex > this.numParticles) {\n\t\t\treturn false;\n\t\t}\n\t\tthis.bufferSubDataUpdate(particleIndex * 11 + 4, <Float32Array>vel);\n\t\treturn true;\n\t}\n\n\tsetParticleStartTime(particleIndex: number, time: number): boolean {\n\t\tif (particleIndex > this.numParticles) {\n\t\t\treturn false;\n\t\t}\n\t\tthis.bufferSubDataUpdate(particleIndex * 11 + 7, new Float32Array([time]));\n\t\treturn true;\n\t}\n\n\tresetParticleStartTime(particleIndex: number): boolean {\n\t\tif (particleIndex > this.numParticles) {\n\t\t\treturn false;\n\t\t}\n\t\tthis.bufferSubDataUpdate(\n\t\t\tparticleIndex * 11 + 7,\n\t\t\tnew Float32Array([(Date.now() - applicationStartTime) * 0.001])\n\t\t);\n\t\treturn true;\n\t}\n\n\tsetParticleAcceleration(particleIndex: number, acc: vec3): boolean {\n\t\tif (particleIndex > this.numParticles) {\n\t\t\treturn false;\n\t\t}\n\t\tthis.bufferSubDataUpdate(particleIndex * 11 + 8, <Float32Array>acc);\n\t\treturn true;\n\t}\n\n\tprivate bufferSubDataUpdate(start: number, data: Float32Array): boolean {\n\t\tif (start > this.numParticles * 11) {\n\t\t\treturn false;\n\t\t}\n\t\tthis.bindVAO();\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.instanceVBO);\n\t\tgl.bufferSubData(gl.ARRAY_BUFFER, start * 4, data);\n\t\tthis.unbindVAO();\n\t\treturn true;\n\t}\n\n\tdraw() {\n\t\tthis.bindVAO();\n\n\t\tthis.texture.bind(0);\n\t\tgl.uniform1f(\n\t\t\tthis.shaderProgram.getUniformLocation(\"fadePerSecond\")[0],\n\t\t\tthis.fadePerSecond\n\t\t);\n\t\tgl.uniform1f(\n\t\t\tthis.shaderProgram.getUniformLocation(\"sizeChangePerSecond\")[0],\n\t\t\tthis.sizeChangePerSecond\n\t\t);\n\n\t\tgl.drawElementsInstanced(\n\t\t\tgl.TRIANGLES,\n\t\t\t6,\n\t\t\tgl.UNSIGNED_INT,\n\t\t\t0,\n\t\t\tthis.getNumberOfParticles()\n\t\t);\n\t\tthis.unbindVAO();\n\t}\n}\n","import GraphicsObject from \"./GraphicsObject\";\nimport ShaderProgram from \"../../Rendering/ShaderPrograms/ShaderProgram\";\nimport Triangle from \"../../Physics/Shapes/Triangle\";\nimport { gl } from \"../../../main\";\nimport { vec3 } from \"gl-matrix\";\n\nexport default class PhongQuad extends GraphicsObject {\n\t// Private\n\tprivate vertices: Float32Array;\n\tprivate indices: Int32Array;\n\n\tconstructor(shaderProgram: ShaderProgram) {\n\t\tsuper(shaderProgram);\n\n\t\t// prettier-ignore\n\t\tthis.vertices = new Float32Array([ \n            // positions        // normals         // uv\n            -0.5,  0.5,  0.0,   0.0, 0.0, 1.0,     0.0, 1.0,\n            -0.5, -0.5,  0.0,   0.0, 0.0, 1.0,     0.0, 0.0,\n             0.5, -0.5,  0.0,   0.0, 0.0, 1.0,     1.0, 0.0,\n             0.5,  0.5,  0.0,   0.0, 0.0, 1.0,     1.0, 1.0,\n        ]);\n\n\t\t// prettier-ignore\n\t\tthis.indices = new Int32Array([\n            0, 1, 2,\n            0, 2, 3,\n        ]);\n\t\tthis.setVertexData(this.vertices);\n\t\tthis.setIndexData(this.indices);\n\t}\n\n\tsetupTriangles(triangles: Array<Triangle>) {\n\t\ttriangles.length = 0; // Clear triangles\n\t\tfor (let i = 0; i < this.indices.length; i += 3) {\n\t\t\t// Go through the vertices\n\t\t\t// Save the positions as shapes in the input array\n\t\t\tconst length = triangles.push(new Triangle());\n\t\t\ttriangles[length - 1].setVertices(\n\t\t\t\tvec3.fromValues(\n\t\t\t\t\tthis.vertices[this.indices[i] * 8],\n\t\t\t\t\tthis.vertices[this.indices[i] * 8 + 1],\n\t\t\t\t\tthis.vertices[this.indices[i] * 8 + 2],\n\t\t\t\t),\n\t\t\t\tvec3.fromValues(\n\t\t\t\t\tthis.vertices[this.indices[i + 1] * 8],\n\t\t\t\t\tthis.vertices[this.indices[i + 1] * 8 + 1],\n\t\t\t\t\tthis.vertices[this.indices[i + 1] * 8 + 2],\n\t\t\t\t),\n\t\t\t\tvec3.fromValues(\n\t\t\t\t\tthis.vertices[this.indices[i + 2] * 8],\n\t\t\t\t\tthis.vertices[this.indices[i + 2] * 8 + 1],\n\t\t\t\t\tthis.vertices[this.indices[i + 2] * 8 + 2],\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t}\n\n\tgetVertexPositions(): Array<vec3> {\n\t\tlet returnArr = new Array<vec3>();\n\t\tfor (let i = 0; i < this.vertices.length; i += 8) {\n\t\t\treturnArr.push(\n\t\t\t\tvec3.fromValues(this.vertices[i], this.vertices[i + 1], this.vertices[i + 2])\n\t\t\t);\n\t\t}\n\t\treturn returnArr;\n\t}\n\n\tdraw() {\n\t\tthis.bindVAO();\n\t\tgl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_INT, 0);\n\t}\n}\n","import GraphicsObject from \"./GraphicsObject\";\nimport Texture from \"../../Rendering/Textures/Texture\";\nimport ShaderProgram from \"../../Rendering/ShaderPrograms/ShaderProgram\";\nimport { gl } from \"../../../main\";\n\nexport default class ScreenQuad extends GraphicsObject {\n\ttextures: Array<Texture>;\n\n\t// Private\n\tprivate vertices: Float32Array;\n\tprivate indices: Int32Array;\n\n\tconstructor(shaderProgram: ShaderProgram, textures: Array<Texture>) {\n\t\tsuper(shaderProgram);\n\n\t\t// prettier-ignore\n\t\tthis.vertices = new Float32Array([ \n            // positions        // uv\n            -1.0,  1.0,     0.0, 1.0,\n            -1.0, -1.0,     0.0, 0.0,\n             1.0, -1.0,     1.0, 0.0,\n             1.0,  1.0,     1.0, 1.0,\n        ]);\n\n\t\t// prettier-ignore\n\t\tthis.indices = new Int32Array([\n            0, 1, 2,\n            0, 2, 3,\n        ]);\n\n\t\tthis.setVertexData(this.vertices);\n\t\tthis.setIndexData(this.indices);\n\n\t\tthis.textures = textures;\n\n\t\tfor (let texture of this.textures) {\n\t\t\ttexture.setTexParameterI(gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\ttexture.setTexParameterI(gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t}\n\t}\n\n\tdraw(bindTextures: boolean = true) {\n\t\tthis.bindVAO();\n\n\t\tif (bindTextures) {\n\t\t\tfor (let i = 0; i < this.textures.length; i++) {\n\t\t\t\tthis.textures[i].bind(i);\n\t\t\t}\n\t\t}\n\n\t\tgl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_INT, 0);\n\t}\n}\n","import GraphicsObject from \"./GraphicsObject\";\nimport ShaderProgram from \"../../Rendering/ShaderPrograms/ShaderProgram\";\nimport { gl } from \"../../../main\";\nimport CubeMap from \"../../Rendering/Textures/CubeMap\";\n\nexport default class Skybox extends GraphicsObject {\n\t// Public\n\ttexture: CubeMap;\n\n\t// Private\n\tprivate vertices: Float32Array;\n\tprivate indices: Int32Array;\n\n\tconstructor(shaderProgram: ShaderProgram, texture: CubeMap) {\n\t\tsuper(shaderProgram);\n\n\t\t// prettier-ignore\n\t\tthis.vertices = new Float32Array([ \n            // positions\n            -0.5,  0.5, -0.5,\t/*0*/\n            -0.5, -0.5, -0.5,\t/*1*/\n             0.5, -0.5, -0.5,\t/*2*/\n             0.5,  0.5, -0.5,\t/*3*/\n            -0.5,  0.5,  0.5,\t/*4*/\n            -0.5, -0.5,  0.5,\t/*5*/\n             0.5, -0.5,  0.5,\t/*6*/\n             0.5,  0.5,  0.5,\t/*7*/\n        ]);\n\n\t\t// prettier-ignore\n\t\tthis.indices = new Int32Array([\n            0, 1, 2,\n            0, 2, 3,\n\t\t\t\n\t\t\t3, 2, 6,\n\t\t\t3, 6, 7,\n\n\t\t\t7, 6, 5,\n\t\t\t7, 5, 4,\n\n\t\t\t4, 5, 1,\n\t\t\t4, 1, 0,\n\n\t\t\t4, 0, 3,\n\t\t\t4, 3, 7,\n\n\t\t\t1, 5, 6, \n\t\t\t1, 6, 2,\n        ]);\n\t\tthis.setVertexData(this.vertices);\n\t\tthis.setIndexData(this.indices);\n\n\t\tthis.texture = texture;\n\t}\n\n\tdraw() {\n\t\tthis.bindVAO();\n\n\t\tthis.texture.bind();\n\n\t\tgl.drawElements(gl.TRIANGLES, this.indices.length, gl.UNSIGNED_INT, 0);\n\t}\n}\n","import { vec3 } from \"gl-matrix\";\nimport { SAT } from \"../Maths/SAT\";\nimport { IntersectionTester } from \"../Physics/IntersectionTester\";\nimport OBB from \"../Physics/Shapes/OBB\";\nimport Ray from \"../Physics/Shapes/Ray\";\nimport Shape from \"../Physics/Shapes/Shape\";\nimport Triangle from \"../Physics/Shapes/Triangle\";\n\nclass TreeNode {\n\tobb: OBB;\n\tsize: number;\n\tposition: vec3;\n\tchildren: Array<TreeNode>;\n\tcontent: Array<Shape>;\n\n\tconstructor(size: number, position: vec3) {\n\t\tthis.obb = new OBB();\n\t\tthis.size = size;\n\t\tthis.position = position;\n\t\tlet halfSize = size * 0.5;\n\t\tthis.obb.setMinAndMaxVectors(\n\t\t\tvec3.add(vec3.create(), vec3.fromValues(-halfSize, -halfSize, -halfSize), this.position),\n\t\t\tvec3.add(vec3.create(), vec3.fromValues(halfSize, halfSize, halfSize), this.position)\n\t\t);\n\n\t\tthis.children = new Array<TreeNode>();\n\t\tthis.content = new Array<Shape>();\n\t}\n\n\t/**\n\t * Create 8 child nodes\n\t * @returns if new children was created. Will be false if there already exists children for this node or the sizes of the children would be smaller than minNodeSize.\n\t */\n\tprivate createChildren(minNodeSize: number): boolean {\n\t\tlet halfSize = this.size * 0.5;\n\t\tif (this.children.length == 0 && halfSize >= minNodeSize) {\n\t\t\tlet quarterSize = this.size * 0.25;\n\t\t\tfor (let x = -1; x < 2; x += 2) {\n\t\t\t\tfor (let y = -1; y < 2; y += 2) {\n\t\t\t\t\tfor (let z = -1; z < 2; z += 2) {\n\t\t\t\t\t\tthis.children.push(\n\t\t\t\t\t\t\tnew TreeNode(\n\t\t\t\t\t\t\t\thalfSize,\n\t\t\t\t\t\t\t\tvec3.add(vec3.create(), vec3.fromValues(\n\t\t\t\t\t\t\t\t\tx * quarterSize,\n\t\t\t\t\t\t\t\t\ty * quarterSize,\n\t\t\t\t\t\t\t\t\tz * quarterSize,\n\t\t\t\t\t\t\t\t), this.position)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate checkIfContains(shape: Shape) {\n\t\tlet minVec = vec3.subtract(vec3.create(), this.position,vec3.fromValues(\n\t\t\tthis.size / 2.0,\n\t\t\tthis.size / 2.0,\n\t\t\tthis.size / 2.0,\n\t\t));\n\t\tlet maxVec = vec3.add(vec3.create(), this.position, vec3.fromValues(\n\t\t\tthis.size / 2.0,\n\t\t\tthis.size / 2.0,\n\t\t\tthis.size / 2.0,\n\t\t));\n\t\tlet shapeVertices = shape.getTransformedVertices();\n\t\tfor (let vertex of shapeVertices) {\n\t\t\tlet returnVal = true;\n\t\t\tfor (let i = 0; i < 3; i++) {\n\t\t\t\tif (minVec[i] > vertex[i] || vertex[i] > maxVec[i]) {\n\t\t\t\t\treturnVal = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (returnVal) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tsubdivideTree(minNodeSize: number) {\n\t\tthis.createChildren(minNodeSize);\n\n\t\tfor (let child of this.children) {\n\t\t\tchild.subdivideTree(minNodeSize);\n\t\t}\n\t}\n\n\taddShape(shape: Shape, minNodeSize: number, maxShapesPerNode: number) {\n\t\tif (\n\t\t\tthis.checkIfContains(shape) &&\n\t\t\tIntersectionTester.identifyIntersection([shape], [this.obb])\n\t\t) {\n\t\t\tif (this.children.length == 0) {\n\t\t\t\t// Leaf node\n\t\t\t\tif (this.content.length >= maxShapesPerNode) {\n\t\t\t\t\t// New children are needed\n\t\t\t\t\tthis.createChildren(minNodeSize); // This will create children if the size of the child nodes are still bigger than the minNodeSize\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.children.length == 0) {\n\t\t\t\t// Still leaf node\n\t\t\t\tthis.content.push(shape);\n\t\t\t} else {\n\t\t\t\t// No longer leaf node\n\t\t\t\t// Add all the content from this node to child nodes instead\n\t\t\t\tfor (let shape of this.content) {\n\t\t\t\t\tfor (let child of this.children) {\n\t\t\t\t\t\tchild.addShape(shape, minNodeSize, maxShapesPerNode);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.content.length = 0;\n\n\t\t\t\t// Keep going deeper\n\t\t\t\tfor (let child of this.children) {\n\t\t\t\t\tchild.addShape(shape, minNodeSize, maxShapesPerNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprune() {\n\t\tfor (let i = 0; i < this.children.length; i++) {\n\t\t\tthis.children[i].prune();\n\n\t\t\tif (\n\t\t\t\tthis.children[i].content.length == 0 &&\n\t\t\t\tthis.children[i].children.length == 0\n\t\t\t) {\n\t\t\t\tthis.children.splice(i, 1);\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\t}\n\n\tgetShapesForCollision(boundingBox: OBB, shapeArray: Array<Shape>) {\n\t\tif (IntersectionTester.identifyIntersection([boundingBox], [this.obb])) {\n\t\t\tfor (const child of this.children) {\n\t\t\t\tchild.getShapesForCollision(boundingBox, shapeArray);\n\t\t\t}\n\n\t\t\tfor (const shape of this.content) {\n\t\t\t\tshapeArray.push(shape);\n\t\t\t}\n\t\t}\n\t}\n\n\tgetShapesForContinousCollision(\n\t\tboundingBox: OBB,\n\t\tvelocity1: vec3,\n\t\tvelocity2: vec3,\n\t\tshapeArray: Array<Shape>,\n\t\tmaxTime: number = Infinity\n\t) {\n\t\tif (IntersectionTester.doContinousIntersection([boundingBox], velocity1, [this.obb], velocity2, maxTime)[0] >= 0.0) {\n\t\t\tfor (const child of this.children) {\n\t\t\t\tchild.getShapesForContinousCollision(boundingBox, velocity1, velocity2, shapeArray, maxTime);\n\t\t\t}\n\n\t\t\tfor (const shape of this.content) {\n\t\t\t\tshapeArray.push(shape);\n\t\t\t}\n\t\t}\n\t}\n\n\tgetShapesForRayCast(\n\t\tray: Ray,\n\t\tshapeArray: Array<Shape>,\n\t\tmaxDistance: number = Infinity\n\t) {\n\t\tif (IntersectionTester.doRayCast(ray, [this.obb], maxDistance) >= 0.0) {\n\t\t\tfor (const child of this.children) {\n\t\t\t\tchild.getShapesForRayCast(ray, shapeArray, maxDistance);\n\t\t\t}\n\n\t\t\tfor (const shape of this.content) {\n\t\t\t\tshapeArray.push(shape);\n\t\t\t}\n\t\t}\n\t}\n\n\tprint(): string {\n\t\tlet result = \"{\\n\";\n\t\tresult += \"s\" + this.size + \"\\n\";\n\t\tresult += \"p\" + this.position + \"\\n\";\n\t\tresult += \"[\\n\";\n\t\tfor (let shape of this.content) {\n\t\t\tresult +=\n\t\t\t\t\"t[\" +\n\t\t\t\tshape.getOriginalVertices()[0] +\n\t\t\t\t\"], [\" +\n\t\t\t\tshape.getOriginalVertices()[1] +\n\t\t\t\t\"], [\" +\n\t\t\t\tshape.getOriginalVertices()[2] +\n\t\t\t\t\"]\\n\";\n\t\t}\n\t\tresult += \"]\\n\";\n\t\tif (this.children.length > 0) {\n\t\t\tfor (let child of this.children) {\n\t\t\t\tresult += child.print();\n\t\t\t}\n\t\t}\n\t\tresult += \"}\\n\";\n\n\t\treturn result;\n\t}\n}\n\nexport default class Octree {\n\tbaseNode: TreeNode;\n\tminNodeSize: number;\n\tmaxShapesPerNode: number;\n\n\tconstructor(\n\t\tminVec: vec3,\n\t\tmaxVec: vec3,\n\t\tsmallestNodeSizeMultiplicator: number,\n\t\tmaxShapesPerNode: number\n\t) {\n\t\tlet baseNodeSize = maxVec[0] - minVec[0];\n\t\tbaseNodeSize = Math.max(baseNodeSize, maxVec[1] - minVec[1]);\n\t\tbaseNodeSize = Math.max(baseNodeSize, maxVec[2] - minVec[2]);\n\n\t\tthis.baseNode = new TreeNode(\n\t\t\tbaseNodeSize,\n\t\t\tvec3.scale(vec3.create(), vec3.add(vec3.create(), minVec, maxVec), 0.5)\n\t\t);\n\t\tthis.minNodeSize = baseNodeSize * smallestNodeSizeMultiplicator;\n\t\tthis.maxShapesPerNode = maxShapesPerNode;\n\t}\n\n\taddShape(shape: Shape) {\n\t\tthis.baseNode.addShape(shape, this.minNodeSize, this.maxShapesPerNode);\n\t}\n\n\taddShapes(shapes: Array<Shape>) {\n\t\tfor (let shape of shapes) {\n\t\t\tthis.baseNode.addShape(shape, this.minNodeSize, this.maxShapesPerNode);\n\t\t}\n\t}\n\n\tprune() {\n\t\tthis.baseNode.prune();\n\t}\n\n\tgetShapesForCollision(boundingBox: OBB, shapeArray: Array<Shape>) {\n\t\tthis.baseNode.getShapesForCollision(boundingBox, shapeArray);\n\t}\n\n\tgetShapesForContinousCollision(boundingBox: OBB, velocity1: vec3, velocity2: vec3, shapeArray: Array<Shape>, maxTime: number = Infinity) {\n\t\tthis.baseNode.getShapesForContinousCollision(boundingBox, velocity1, velocity2, shapeArray, maxTime);\n\t}\n\n\tgetShapesForRayCast(\n\t\tray: Ray,\n\t\tshapeArray: Array<Shape>,\n\t\tmaxDistance: number = Infinity\n\t) {\n\t\tthis.baseNode.getShapesForRayCast(ray, shapeArray, maxDistance);\n\t}\n\n\tgetDataString() {\n\t\tlet output = \"\";\n\t\toutput += this.minNodeSize + \"\\n\";\n\t\toutput += this.maxShapesPerNode + \"\\n\";\n\t\toutput += this.baseNode.print();\n\t\treturn output;\n\t}\n\n\tparseOct(input: string) {\n\t\tdelete this.baseNode;\n\n\t\tlet rows = input.split(\"\\n\");\n\t\tthis.minNodeSize = parseFloat(rows[0]);\n\t\tthis.maxShapesPerNode = parseInt(rows[1]);\n\n\t\tlet currentNode = this.baseNode;\n\t\tlet currentSize = 0.0;\n\t\tlet parentQueue = new Array<TreeNode>();\n\n\t\tfor (let i = 3; i < rows.length; i++) {\n\t\t\tlet row = rows[i];\n\n\t\t\tif (row == \"{\") {\n\t\t\t\t// Information for child node starts\n\t\t\t} else if (row == \"[\") {\n\t\t\t\t// Start of triangles\n\t\t\t} else if (row == \"]\") {\n\t\t\t\t// End of triangles\n\t\t\t} else if (row == \"}\") {\n\t\t\t\t// Node over, set currentNode to parent\n\t\t\t\tcurrentNode = parentQueue.pop();\n\t\t\t} else if (row.startsWith(\"s\")) {\n\t\t\t\trow = row.substring(1);\n\t\t\t\t// Size of node\n\t\t\t\tcurrentSize = parseFloat(row);\n\t\t\t} else if (row.startsWith(\"p\")) {\n\t\t\t\trow = row.substring(1);\n\t\t\t\t// Position of node\n\t\t\t\tlet posArray = row.split(\",\").map((n) => parseFloat(n));\n\t\t\t\tlet currentPos = vec3.fromValues(posArray[0], posArray[1], posArray[2]);\n\n\t\t\t\t// The position is the last information needed to create the child node, so we do it\n\t\t\t\t// and set currentNode to the new child\n\t\t\t\tif (this.baseNode == undefined) {\n\t\t\t\t\tthis.baseNode = new TreeNode(currentSize, currentPos);\n\t\t\t\t\tcurrentNode = this.baseNode;\n\t\t\t\t} else {\n\t\t\t\t\t// Add current node to parent queue\n\t\t\t\t\tparentQueue.push(currentNode);\n\t\t\t\t\tlet length = currentNode.children.push(\n\t\t\t\t\t\tnew TreeNode(currentSize, currentPos)\n\t\t\t\t\t);\n\t\t\t\t\tcurrentNode = currentNode.children[length - 1];\n\t\t\t\t}\n\t\t\t} else if (row.startsWith(\"t\")) {\n\t\t\t\t// Triangle\n\t\t\t\t// t[-3,3,1.5], [-3,3,2.5], [-4,3,1.5]\n\t\t\t\trow = row.substring(1);\n\t\t\t\tlet points = row.split(\", \");\n\t\t\t\tlet tri = new Triangle();\n\n\t\t\t\ttri.setVertices(\n\t\t\t\t\tvec3.fromValues.apply(null, \n\t\t\t\t\t\tpoints[0]\n\t\t\t\t\t\t\t.substring(1, points[0].length - 1)\n\t\t\t\t\t\t\t.split(\",\")\n\t\t\t\t\t\t\t.map((n) => parseFloat(n))\n\t\t\t\t\t),\n\t\t\t\t\tvec3.fromValues.apply(null, \n\t\t\t\t\t\tpoints[1]\n\t\t\t\t\t\t\t.substring(1, points[1].length - 1)\n\t\t\t\t\t\t\t.split(\",\")\n\t\t\t\t\t\t\t.map((n) => parseFloat(n))\n\t\t\t\t\t),\n\t\t\t\t\tvec3.fromValues.apply(null, \n\t\t\t\t\t\tpoints[2]\n\t\t\t\t\t\t\t.substring(1, points[2].length - 1)\n\t\t\t\t\t\t\t.split(\",\")\n\t\t\t\t\t\t\t.map((n) => parseFloat(n))\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\t\tcurrentNode.content.push(tri);\n\t\t\t}\n\t\t}\n\t}\n}\n","import { quat, vec3 } from \"gl-matrix\";\nimport Entity from \"../ECS/Entity\";\nimport MovementComponent from \"../ECS/Components/MovementComponent\";\nimport { ComponentTypeEnum } from \"../ECS/Components/Component\";\nimport CollisionComponent from \"../ECS/Components/CollisionComponent\";\nimport PositionComponent from \"../ECS/Components/PositionComponent\";\nimport { ECSUtils } from \"../Utils/ESCUtils\";\nimport { IntersectionTester } from \"./IntersectionTester\";\n\nexport module CollisionSolver {\n\texport function getTranslationNeeded(\n\t\tintersectionInformation: Array<IntersectionTester.IntersectionInformation>\n\t): vec3 {\n\t\tif (intersectionInformation.length == 0) {\n\t\t\treturn vec3.create();\n\t\t}\n\n\t\t// Displace along the axis which has the most depth\n\t\tlet resultingVec = vec3.create();\n\t\tlet maxDepth = 0.0;\n\t\tfor (let inf of intersectionInformation) {\n\t\t\t// Only displace for triangles if it is along the normal\n\t\t\tif (inf.shapeB.getTransformedNormals().length == 1) {\n\t\t\t\tif (vec3.dot(inf.axis, inf.shapeB.getTransformedNormals()[0]) < 0.99) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (inf.depth > maxDepth) {\n\t\t\t\tvec3.copy(resultingVec, inf.axis);\n\t\t\t\tmaxDepth = inf.depth;\n\t\t\t}\n\t\t}\n\t\tvec3.scale(resultingVec, resultingVec, maxDepth);\n\n\t\treturn resultingVec;\n\t}\n\n\tfunction updateMomentum(collisionComp: CollisionComponent, movComp: MovementComponent, inf: IntersectionTester.IntersectionInformation, entity: Entity, axis: vec3, change: vec3) {\n\t\tif (collisionComp.isDynamic) {\n\t\t\tlet collisionPointOffset = vec3.subtract(vec3.create(), inf.point, ECSUtils.CalculatePosition(entity));\n\n\t\t\tlet rotationAxis = vec3.cross(vec3.create(), axis, collisionPointOffset);\n\t\t\tif (vec3.sqrLen(rotationAxis) > 0.0001) {\n\t\t\t\tvec3.normalize(rotationAxis, rotationAxis);\n\t\t\t\tlet axis = vec3.create();\n\t\t\t\tlet angle = quat.getAxisAngle(axis, movComp.momentum);\n\t\t\t\tvec3.normalize(axis, axis);\n\t\t\t\tlet rotationImpact = angle * vec3.dot(axis, rotationAxis);\n\t\t\t\tvec3.scale(rotationAxis, rotationAxis, (vec3.len(change) + rotationImpact) * vec3.len(collisionPointOffset) * 5.0);\n\t\t\t\tquat.mul(movComp.momentum, movComp.momentum, quat.fromEuler(quat.create(), rotationAxis[0], rotationAxis[1], rotationAxis[2]));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmovComp.momentum = quat.create();\n\t\t\t}\n\t\t}\n\t}\n\n\texport function handleCollision(intersectionInformation: Array<IntersectionTester.IntersectionInformation>, e1: Entity, e2: Entity) {\n\t\tlet e1MovComp = <MovementComponent>(e1.getComponent(ComponentTypeEnum.MOVEMENT));\n\t\tlet e1CollisionComp = <CollisionComponent>(e1.getComponent(ComponentTypeEnum.COLLISION));\n\t\t\n\t\tlet e2MovComp = <MovementComponent>(e2.getComponent(ComponentTypeEnum.MOVEMENT));\n\t\tlet e2CollisionComp = <CollisionComponent>(e2.getComponent(ComponentTypeEnum.COLLISION));\n\n\t\tfor (let inf of intersectionInformation) {\n\t\t\tlet axis = vec3.clone(inf.axis);\n\t\t\tif (inf.shapeB.getTransformedNormals().length == 1) {\n\t\t\t\tvec3.copy(axis, inf.shapeB.getTransformedNormals()[0]);\n\t\t\t}\n\t\t\telse if(inf.shapeA.getTransformedNormals().length == 1) {\n\t\t\t\tvec3.copy(axis, inf.shapeA.getTransformedNormals()[0]);\n\t\t\t\tvec3.negate(axis, axis); // Make sure axis is always pointing from b to a\n\t\t\t}\n\n\t\t\tlet e1Vel = e1MovComp ? e1MovComp.velocity : vec3.create();\n\t\t\tlet e2Vel = e2MovComp ? e2MovComp.velocity : vec3.create();\n\n\t\t\tlet velDifference = vec3.sub(vec3.create(), e1Vel, e2Vel);\n\t\t\tlet dotProd = vec3.dot(velDifference, axis);\n\t\t\tif (dotProd < 0.0) {\n\t\t\t\tlet eN = vec3.cross(vec3.create(), vec3.cross(vec3.create(), velDifference, axis), axis);\n\n\t\t\t\tif (vec3.squaredLength(eN) > 0.0001) {\n\t\t\t\t\tvec3.normalize(eN, eN);\n\t\t\t\t}\n\n\t\t\t\tlet e1Change = vec3.create();\n\t\t\t\tlet e2Change = vec3.create();\n\n\t\t\t\tlet collisionCoefficient = Math.max(e1CollisionComp.collisionCoefficient, e2CollisionComp.collisionCoefficient); // TODO: This can be calculated differently, will be based on material abilities in the future\n\t\t\t\tlet frictionCoefficient = Math.max(e1CollisionComp.frictionCoefficient, e2CollisionComp.frictionCoefficient); // TODO: This can be calculated differently, will be based on material abilities in the future\n\n\t\t\t\tif (e1MovComp && !e1CollisionComp.isStatic && !e1CollisionComp.isImmovable && e2MovComp && !e2CollisionComp.isStatic && !e2CollisionComp.isImmovable) {\n\t\t\t\t\tlet v1Dot = vec3.dot(e1Vel, axis);\n\t\t\t\t\tlet v2Dot = vec3.dot(e2Vel, axis);\n\t\t\t\t\tlet tangentVel1 = vec3.dot(e1Vel, eN);\n\t\t\t\t\tlet tangentVel2 = vec3.dot(e2Vel, eN);\n\t\t\t\t\tlet u1Dot = ((e1CollisionComp.mass - collisionCoefficient * e2CollisionComp.mass) / (e1CollisionComp.mass + e2CollisionComp.mass)) * v1Dot + ((1.0 + collisionCoefficient) * e2CollisionComp.mass) / (e1CollisionComp.mass + e2CollisionComp.mass) * v2Dot;\n\t\t\t\t\tlet u2Dot = ((e2CollisionComp.mass - collisionCoefficient * e1CollisionComp.mass) / (e2CollisionComp.mass + e1CollisionComp.mass)) * v2Dot + ((1.0 + collisionCoefficient) * e1CollisionComp.mass) / (e2CollisionComp.mass + e1CollisionComp.mass) * v1Dot;\n\n\t\t\t\t\tlet frictionMagnitude1 = -1.0 * (((u1Dot - v1Dot) * frictionCoefficient) < 0.0 ? 1 : 0) * Math.min(Math.abs(tangentVel1), Math.abs((u1Dot - v1Dot) * frictionCoefficient));\n\t\t\t\t\tlet frictionMagnitude2 = -1.0 * (((u2Dot - v2Dot) * frictionCoefficient) < 0.0 ? 1 : 0) * Math.min(Math.abs(tangentVel2), Math.abs((u2Dot - v2Dot) * frictionCoefficient));\n\n\t\t\t\t\tvec3.scaleAndAdd(e1Change, e1Change, axis, (u1Dot - v1Dot));\n\t\t\t\t\tvec3.scaleAndAdd(e1Change, e1Change, eN, frictionMagnitude1);\n\n\t\t\t\t\tvec3.scaleAndAdd(e2Change, e2Change, axis, (u2Dot - v2Dot));\n\t\t\t\t\tvec3.scaleAndAdd(e2Change, e2Change, eN, frictionMagnitude2);\n\t\t\t\t}\n\t\t\t\telse if (!e1MovComp || e1CollisionComp.isStatic || e1CollisionComp.isImmovable) {\n\t\t\t\t\tlet inverseVelDifference = vec3.negate(vec3.create(), velDifference);\n\t\t\t\t\tlet v2Dot = vec3.dot(inverseVelDifference, axis);\n\t\t\t\t\tlet relativeTangentVel = vec3.dot(inverseVelDifference, eN);\n\t\t\t\t\tlet frictionMagnitude = Math.min(relativeTangentVel * frictionCoefficient, v2Dot * (1.0 + collisionCoefficient) + frictionCoefficient);\n\n\t\t\t\t\tvec3.scaleAndAdd(e2Change, e2Change, axis, -v2Dot * (1.0 + collisionCoefficient));\n\t\t\t\t\tvec3.scaleAndAdd(e2Change, e2Change, eN, -frictionMagnitude);\n\t\t\t\t}\n\t\t\t\telse if (!e2MovComp || e2CollisionComp.isStatic || e2CollisionComp.isImmovable) {\n\t\t\t\t\tlet v1Dot = vec3.dot(velDifference, axis);\n\t\t\t\t\tlet relativeTangentVel = vec3.dot(velDifference, eN);\n\t\t\t\t\tlet frictionMagnitude = Math.min(relativeTangentVel * frictionCoefficient, v1Dot * (1.0 + collisionCoefficient) + frictionCoefficient);\n\n\t\t\t\t\tvec3.scaleAndAdd(e1Change, e1Change, axis, -v1Dot * (1.0 + collisionCoefficient));\n\t\t\t\t\tvec3.scaleAndAdd(e1Change, e1Change, eN, -frictionMagnitude);\n\t\t\t\t}\n\n\t\t\t\tif (e1MovComp) {\n\t\t\t\t\tvec3.add(e1Vel, e1Vel, e1Change);\n\t\t\t\t\tif (e1Change[1] > 0.0) {\n\t\t\t\t\t\te1MovComp.onGround = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tupdateMomentum(e1CollisionComp, e1MovComp, inf, e1, axis, e1Change);\n\t\t\t\t}\n\n\t\t\t\tif (e2MovComp) {\n\t\t\t\t\tvec3.add(e2Vel, e2Vel, e2Change);\n\t\t\t\t\tif (e2Change[1] > 0.0) {\n\t\t\t\t\t\te2MovComp.onGround = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tupdateMomentum(e2CollisionComp, e2MovComp, inf, e2, axis, e2Change);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tlet displacement = CollisionSolver.getTranslationNeeded([inf]);\n\n\t\t\t\tif (!e1CollisionComp.isImmovable && !e1CollisionComp.isStatic) {\n\t\t\t\t\t// Prioritize the parent position component if there is one\n\t\t\t\t\tlet posComp = <PositionComponent>(\n\t\t\t\t\t\te1.getComponent(ComponentTypeEnum.POSITIONPARENT)\n\t\t\t\t\t);\n\n\t\t\t\t\t// Otherwise move the position component\n\t\t\t\t\tif (!posComp) {\n\t\t\t\t\t\tposComp = <PositionComponent>(\n\t\t\t\t\t\t\te1.getComponent(ComponentTypeEnum.POSITION)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tvec3.add(posComp.position, posComp.position, vec3.scale(vec3.create(), displacement, vec3.len(e1Change) / (vec3.len(e1Change) + vec3.len(e2Change))));\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (!e2CollisionComp.isImmovable && !e2CollisionComp.isStatic) {\n\t\t\t\t\t// Prioritize the parent position component if there is one\n\t\t\t\t\tlet posComp = <PositionComponent>(\n\t\t\t\t\t\te2.getComponent(ComponentTypeEnum.POSITIONPARENT)\n\t\t\t\t\t);\n\n\t\t\t\t\t// Otherwise move the position component\n\t\t\t\t\tif (!posComp) {\n\t\t\t\t\t\tposComp = <PositionComponent>(\n\t\t\t\t\t\t\te2.getComponent(ComponentTypeEnum.POSITION)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tvec3.subtract(posComp.position, posComp.position, vec3.scale(vec3.create(), displacement, vec3.len(e2Change) / (vec3.len(e1Change) + vec3.len(e2Change))));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","import { ReadonlyVec3, vec3 } from \"gl-matrix\";\nimport { SAT } from \"../Maths/SAT\";\nimport Ray from \"./Shapes/Ray\";\nimport Shape from \"./Shapes/Shape\";\n\nexport module IntersectionTester {\n\n\t/**\n\t * \n\t */\n\texport class IntersectionInformation {\n\t\taxis: vec3;\n\t\tdepth: number;\n\t\tpoint: vec3;\n\t\tshapeA: Shape;\n\t\tshapeB: Shape;\n\n\t\t/**\n\t\t * Holds information about an intersection\n\t\t * @param axis Normalized axis for the minimum translation vector (mtv)\n\t\t * @param depth The magnitude of the mtv\n\t\t * @param point The point of intersection (Under construction, not fully accurate yet)\n\t\t * @param shapeA The shape of physical object A that is intersecting\n\t\t * @param shapeB The shape of physical object B that is intersecting\n\t\t */\n\t\tconstructor(\n\t\t\taxis: vec3,\n\t\t\tdepth: number,\n\t\t\tpoint: vec3,\n\t\t\tshapeA: Shape,\n\t\t\tshapeB: Shape\n\t\t) {\n\t\t\tthis.axis = vec3.clone(axis);\n\t\t\tthis.depth = depth;\n\t\t\tthis.point = vec3.clone(point);\n\t\t\tthis.shapeA = shapeA;\n\t\t\tthis.shapeB = shapeB;\n\t\t}\n\t}\n\n\n\t/**\n\t * Will check if there is an intersection between two meshes.\n\t * @param shapeArrayA List of shapes in physical object A.\n\t * @param shapeArrayB List of shapes in physical object B.\n\t * @returns if there is an intersection.\n\t */\n\texport function identifyIntersection(\n\t\tshapeArrayA: Array<Shape>,\n\t\tshapeArrayB: Array<Shape>\n\t): boolean {\n\t\tlet intersectionAxis = vec3.create();\n\t\tlet intersectionDepth = { depth: Infinity };\n\t\tfor (let shapeA of shapeArrayA) {\n\t\t\tfor (let shapeB of shapeArrayB) {\n\t\t\t\tif (\n\t\t\t\t\tSAT.getIntersection3D(\n\t\t\t\t\t\tshapeA,\n\t\t\t\t\t\tshapeB,\n\t\t\t\t\t\tintersectionAxis,\n\t\t\t\t\t\tintersectionDepth\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Finds the intersection information (axises, depths, and points) between two physical objects, if they intersect\n\t * @param shapeArrayA List of shapes in physical object A.\n\t * @param shapeArrayB List of shapes in physical object B.\n\t * @param intersectionInformation An array that gets filled with information about all intersections happening between the two objects.\n\t * @returns If there is an intersection.\n\t */\n\texport function identifyIntersectionInformation(\n\t\tshapeArrayA: Array<Shape>,\n\t\tshapeArrayB: Array<Shape>,\n\t\tintersectionInformation: Array<IntersectionInformation>\n\t): boolean {\n\t\tlet intersecting = false;\n\t\tlet tempIntersectionAxis = vec3.create();\n\t\tlet tempIntersectionDepth = { depth: Infinity };\n\n\t\tfor (let shapeA of shapeArrayA) {\n\t\t\tfor (let shapeB of shapeArrayB) {\n\t\t\t\tif (\n\t\t\t\t\tSAT.getIntersection3D(\n\t\t\t\t\t\tshapeA,\n\t\t\t\t\t\tshapeB,\n\t\t\t\t\t\ttempIntersectionAxis,\n\t\t\t\t\t\ttempIntersectionDepth\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tintersecting = true;\n\n\t\t\t\t\t// Save information about intersection\n\t\t\t\t\tintersectionInformation.push(\n\t\t\t\t\t\tnew IntersectionInformation(\n\t\t\t\t\t\t\ttempIntersectionAxis,\n\t\t\t\t\t\t\ttempIntersectionDepth.depth,\n\t\t\t\t\t\t\tSAT.getIntersectionPoint(shapeA, shapeB, tempIntersectionAxis),\n\t\t\t\t\t\t\tshapeA,\n\t\t\t\t\t\t\tshapeB\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn intersecting;\n\t}\n\n\t/**\n\t * Finds the closest ray cast hit between a ray and an array of shapes\n\t * @param ray Ray shape\n\t * @param shapeArray shape array to cast against\n\t * @param maxDistance The furthest allowed hit\n\t * @param breakOnFirstHit If the first hit should be returned immediately\n\t * @returns the closest hit\n\t */\n\texport function doRayCast(\n\t\tray: Ray,\n\t\tshapeArray: Array<Shape>,\n\t\tmaxDistance: number = Infinity,\n\t\tbreakOnFirstHit: boolean = false\n\t): number {\n\t\tlet closestHit = -1.0;\n\n\t\tfor (const shape of shapeArray) {\n\t\t\tlet [dist, _] = SAT.getContinousIntersection3D(\n\t\t\t\tray,\n\t\t\t\tshape,\n\t\t\t\tray.getDir(),\n\t\t\t\tvec3.create(),\n\t\t\t\tmaxDistance\n\t\t\t);\n\t\t\tif (dist >= 0.0 && (dist < closestHit || closestHit < 0)) {\n\t\t\t\tclosestHit = dist;\n\t\t\t\tmaxDistance = closestHit;\n\n\t\t\t\tif (breakOnFirstHit) {\n\t\t\t\t\treturn closestHit;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn closestHit;\n\t}\n\n\t/**\n\t * Finds the closest continous collision hit between two shape arrays with velocities\n\t * @param shapeArrayA List of shapes in physical object A.\n\t * @param shapeArrayB List of shapes in physical object B.\n\t * @param maxDistance The furthest allowed hit\n\t * @param breakOnFirstHit If the first hit should be returned immediately\n\t * @returns the closest hit\n\t */\n\texport function doContinousIntersection(\n\t\tshapeArrayA: Array<Shape>,\n\t\tshapeAVelocity: ReadonlyVec3,\n\t\tshapeArrayB: Array<Shape>,\n\t\tshapeBVelocity: ReadonlyVec3,\n\t\tmaxDistance: number = Infinity,\n\t\tallow0Collision: boolean = true,\n\t\tbreakOnFirstHit: boolean = false\n\t): [number, vec3] {\n\t\tlet earliestHit = -1.0;\n\t\tlet intersectionVec = null;\n\n\t\tfor (let shapeA of shapeArrayA) {\n\t\t\tfor (let shapeB of shapeArrayB) {\n\t\t\t\tlet [dist, iVec] = SAT.getContinousIntersection3D(\n\t\t\t\t\tshapeA,\n\t\t\t\t\tshapeB,\n\t\t\t\t\tshapeAVelocity,\n\t\t\t\t\tshapeBVelocity,\n\t\t\t\t\tmaxDistance\n\t\t\t\t);\n\n\t\t\t\tif (((allow0Collision && dist >= 0.0) || (dist > 0.0)) && (dist < earliestHit || earliestHit < 0)) {\n\t\t\t\t\tearliestHit = dist;\n\t\t\t\t\tintersectionVec = iVec;\n\t\t\t\t\tmaxDistance = earliestHit;\n\t\n\t\t\t\t\tif (breakOnFirstHit) {\n\t\t\t\t\t\treturn [earliestHit, intersectionVec];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn [earliestHit, intersectionVec];\n\t}\n}\n","import { mat3, mat4, vec3 } from \"gl-matrix\";\nimport Shape from \"./Shape\";\n\nexport default class OBB extends Shape {\n\tprivate originalVertices: Array<vec3>;\n\tprivate originalNormals: Array<vec3>;\n\n\tprivate transformedVertices: Array<vec3>;\n\tprivate transformedNormals: Array<vec3>;\n\n\tprivate transformMatrix: mat4;\n\tprivate inverseMatrix: mat4;\n\tprivate verticesNeedsUpdate: boolean;\n\tprivate normalsNeedsUpdate: boolean;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.originalVertices = new Array<vec3>();\n\t\tthis.originalNormals = new Array<vec3>();\n\t\tthis.transformedVertices = new Array<vec3>();\n\t\tthis.transformedNormals = new Array<vec3>();\n\t\tthis.transformMatrix = mat4.create();\n\t\tthis.inverseMatrix = mat4.create();\n\t\tthis.verticesNeedsUpdate = false;\n\t\tthis.normalsNeedsUpdate = false;\n\t}\n\n\tsetVertices(vertices: Array<vec3>) {\n\t\tthis.originalVertices.length = 0;\n\t\tfor (let vert of vertices) {\n\t\t\tthis.originalVertices.push(vert);\n\t\t}\n\n\t\tthis.verticesNeedsUpdate = true;\n\t}\n\n\tsetNormals(normals: Array<vec3>) {\n\t\tthis.originalNormals.length = 0;\n\t\tfor (let norm of normals) {\n\t\t\tthis.originalNormals.push(norm);\n\t\t}\n\n\t\tthis.normalsNeedsUpdate = true;\n\t}\n\n\t/**\n\t * Creates an axis aligned bounding box (AABB).\n\t * @param minVec Corner for the lower bound.\n\t * @param maxVec Corner for the upper bound.\n\t */\n\tsetMinAndMaxVectors(minVec: vec3, maxVec: vec3) {\n\t\tthis.originalNormals.length = 0;\n\t\tthis.originalNormals.push(vec3.fromValues(1.0, 0.0, 0.0));\n\t\tthis.originalNormals.push(vec3.fromValues(0.0, 1.0, 0.0));\n\t\tthis.originalNormals.push(vec3.fromValues(0.0, 0.0, 1.0));\n\n\t\tthis.originalVertices.length = 0;\n\n\t\tfor (let i = 0; i < 8; i++) {\n\t\t\tthis.originalVertices.push(vec3.create());\n\t\t}\n\n\t\tvec3.copy(this.originalVertices[0], minVec);\n\t\tvec3.set(this.originalVertices[1], minVec[0], minVec[1], maxVec[2]);\n\t\tvec3.set(this.originalVertices[2], minVec[0], maxVec[1], minVec[2]);\n\t\tvec3.set(this.originalVertices[3], minVec[0], maxVec[1], maxVec[2]);\n\t\tvec3.set(this.originalVertices[4], maxVec[0], minVec[1], minVec[2]);\n\t\tvec3.set(this.originalVertices[5], maxVec[0], minVec[1], maxVec[2]);\n\t\tvec3.set(this.originalVertices[6], maxVec[0], maxVec[1], minVec[2]);\n\t\tvec3.copy(this.originalVertices[7], maxVec);\n\n\t\tthis.normalsNeedsUpdate = true;\n\t\tthis.verticesNeedsUpdate = true;\n\t}\n\n\tsetUpdateNeeded() {\n\t\tthis.verticesNeedsUpdate = true;\n\t\tthis.normalsNeedsUpdate = true;\n\t}\n\n\tsetTransformMatrix(matrix: mat4) {\n\t\tthis.transformMatrix = matrix;\n\t\tthis.verticesNeedsUpdate = true;\n\t\tthis.normalsNeedsUpdate = true;\n\t}\n\n\tsetInverseMatrix(matrix: mat4): void {\n\t\tthis.inverseMatrix = matrix;\n\t\tthis.verticesNeedsUpdate = true;\n\t\tthis.normalsNeedsUpdate = true;\n\t}\n\n\tgetTransformedVertices(): Array<vec3> {\n\t\tif (this.verticesNeedsUpdate) {\n\t\t\tthis.transformedVertices.length = 0;\n\n\t\t\tlet resultingMatrix = mat4.mul(mat4.create(), this.inverseMatrix, this.transformMatrix);\n\n\t\t\tfor (const originalVertex of this.originalVertices) {\n\t\t\t\tthis.transformedVertices.push(vec3.transformMat4(vec3.create(), originalVertex, resultingMatrix));\n\t\t\t}\n\t\t\tthis.verticesNeedsUpdate = false;\n\t\t}\n\t\treturn this.transformedVertices;\n\t}\n\n\tgetTransformedNormals(): Array<vec3> {\n\t\tif (this.normalsNeedsUpdate) {\n\t\t\tthis.transformedNormals.length = 0;\n\t\t\t\n\t\t\tfor (const originalNormal of this.originalNormals) {\n\t\t\t\tthis.transformedNormals.push(\n\t\t\t\t\tvec3.normalize(vec3.create(), vec3.transformMat3(vec3.create(), originalNormal, mat3.normalFromMat4(mat3.create(), this.transformMatrix)))\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tthis.normalsNeedsUpdate = false;\n\t\t}\n\t\treturn this.transformedNormals;\n\t}\n\n\tgetTransformedEdges(): Array<vec3> {\n\t\treturn this.getTransformedNormals();\n\t}\n\n\tgetTransformedEdgeNormals(): Array<vec3> {\n\t\treturn this.getTransformedNormals();\n\t}\n\n\tgetTransformMatrix(): mat4 {\n\t\treturn this.transformMatrix;\n\t}\n}\n","import Shape from \"./Shape\";\nimport {ReadonlyVec3, mat3, mat4, vec3} from \"gl-matrix\";\n\nexport default class Ray extends Shape {\n\tprivate start: vec3;\n\tprivate dir: vec3;\n\tprivate inverseMatrix: mat4;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.start = vec3.create();\n\t\tthis.dir = vec3.fromValues(0.0, 0.0, 1.0);\n\t\tthis.inverseMatrix = mat4.create();\n\t}\n\n\tsetStart(start: vec3) {\n\t\tthis.start = start;\n\t}\n\n\tsetDir(dir: vec3) {\n\t\tvec3.normalize(this.dir, dir);\n\t}\n\n\tgetDir(): vec3 {\n\t\treturn this.getTransformedNormals()[0];\n\t}\n\n\tsetStartAndDir(start: ReadonlyVec3, dir: ReadonlyVec3) {\n\t\tvec3.copy(this.start, start);\n\t\tvec3.normalize(this.dir, dir);\n\t}\n\n\tsetInverseMatrix(matrix: mat4) {\n\t\tthis.inverseMatrix = matrix;\n\t}\n\n\tgetTransformedVertices(): Array<vec3> {\n\t\treturn [vec3.transformMat4(vec3.create(), this.start, this.inverseMatrix)];\n\t}\n\n\tgetTransformedNormals(): Array<vec3> {\n\t\tlet start = this.getTransformedVertices()[0];\n\t\tlet end = vec3.transformMat4(vec3.create(), vec3.add(vec3.create(), this.start, this.dir), this.inverseMatrix)\n\n\t\treturn [vec3.subtract(vec3.create(), end, start)]; // Not normalized because we want to keep distances\n\t}\n\n\tgetTransformedEdges(): Array<vec3> {\n\t\treturn [];\t\n\t} \n\t\n\tgetTransformedEdgeNormals(): Array<vec3> {\n\t\treturn [];\n\t};\n}\n","import { mat4, vec3 } from \"gl-matrix\";\n\nexport default class Shape {\n\tmargin: number;\n\n\tconstructor() {\n\t\tthis.margin = 0.0;\n\t}\n\n\tsetUpdateNeeded() {}\n\n\tsetTransformMatrix(matrix: mat4) {}\n\n\tgetOriginalVertices(): Array<vec3> {\n\t\treturn null;\n\t}\n\n\tgetTransformedVertices(): Array<vec3> {\n\t\treturn null;\n\t}\n\n\tgetTransformedNormals(): Array<vec3> {\n\t\treturn null;\n\t}\n\n\tgetTransformedEdges(): Array<vec3> {\n\t\treturn null;\n\t}\n\n\tgetTransformedEdgeNormals(): Array<vec3> {\n\t\treturn null;\n\t}\n}\n","import { mat3, mat4, vec3 } from \"gl-matrix\";\nimport Shape from \"./Shape\";\n\nexport default class Triangle extends Shape {\n\tprivate originalVertices: Array<vec3>;\n\tprivate originalNormal: vec3;\n\n\tprivate transformedVertices: Array<vec3>;\n\tprivate transformedNormals: Array<vec3>;\n\tprivate transformedEdges: Array<vec3>;\n\tprivate transformedEdgeNormals: Array<vec3>;\n\n\tprivate transformMatrix: mat4;\n\tprivate verticesNeedsUpdate: boolean;\n\tprivate normalNeedsUpdate: boolean;\n\tprivate edgesNeedsUpdate: boolean;\n\tprivate edgeNormalsNeedsUpdate: boolean;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.originalVertices = new Array<vec3>();\n\t\tthis.originalNormal = vec3.create();\n\t\tthis.transformedVertices = new Array<vec3>();\n\t\tthis.transformedNormals = new Array<vec3>(1);\n\t\tthis.transformedEdges = new Array<vec3>();\n\t\tthis.transformedEdgeNormals = new Array<vec3>();\n\t\tthis.transformMatrix = mat4.create();\n\t\tthis.verticesNeedsUpdate = false;\n\t\tthis.normalNeedsUpdate = false;\n\t\tthis.edgesNeedsUpdate = false;\n\t\tthis.edgeNormalsNeedsUpdate = false;\n\t}\n\n\tsetVertices(vertex1: vec3, vertex2: vec3, vertex3: vec3) {\n\t\tthis.originalVertices.length = 0;\n\t\tthis.transformedEdges.length = 0;\n\t\tthis.originalVertices.push(vertex1);\n\t\tthis.originalVertices.push(vertex2);\n\t\tthis.originalVertices.push(vertex3);\n\t\tvec3.normalize(this.originalNormal, \n\t\t\tvec3.cross(this.originalNormal, \n\t\t\t\tvec3.subtract(vec3.create(), vertex2, vertex1), \n\t\t\t\tvec3.subtract(vec3.create(), vertex3, vertex2)\n\t\t\t)\n\t\t);\n\n\t\tthis.verticesNeedsUpdate = true;\n\t\tthis.normalNeedsUpdate = true;\n\t\tthis.edgesNeedsUpdate = true;\n\t\tthis.edgeNormalsNeedsUpdate = true;\n\t}\n\n\tsetUpdateNeeded() {\n\t\tthis.verticesNeedsUpdate = true;\n\t\tthis.normalNeedsUpdate = true;\n\t\tthis.edgesNeedsUpdate = true;\n\t\tthis.edgeNormalsNeedsUpdate = true;\n\t}\n\n\tsetTransformMatrix(matrix: mat4) {\n\t\tthis.transformMatrix = matrix;\n\t\tthis.verticesNeedsUpdate = true;\n\t\tthis.normalNeedsUpdate = true;\n\t\tthis.edgesNeedsUpdate = true;\n\t\tthis.edgeNormalsNeedsUpdate = true;\n\t}\n\n\tgetOriginalVertices(): Array<vec3> {\n\t\treturn this.originalVertices;\n\t}\n\n\tgetTransformedVertices(): Array<vec3> {\n\t\tif (this.verticesNeedsUpdate) {\n\t\t\tthis.transformedVertices.length = 0;\n\n\t\t\tfor (const originalVertex of this.originalVertices) {\n\t\t\t\tlet transformedVertex = vec3.transformMat4(vec3.create(), vec3.fromValues(originalVertex[0], originalVertex[1], originalVertex[2]), this.transformMatrix);\n\t\t\t\tthis.transformedVertices.push(transformedVertex);\n\t\t\t}\n\t\t\tthis.verticesNeedsUpdate = false;\n\t\t}\n\t\treturn this.transformedVertices;\n\t}\n\n\tgetTransformedNormals(): Array<vec3> {\n\t\tif (this.normalNeedsUpdate) {\n\t\t\tthis.transformedNormals.length = 0;\n\t\t\tthis.transformedNormals.push(\n\t\t\t\tvec3.normalize(vec3.create(), vec3.transformMat3(vec3.create(), this.originalNormal, mat3.normalFromMat4(mat3.create(), this.transformMatrix)))\n\t\t\t);\n\n\t\t\tthis.normalNeedsUpdate = false;\n\t\t}\n\t\treturn this.transformedNormals;\n\t}\n\n\tgetTransformedEdges(): Array<vec3> {\n\t\tif (this.edgesNeedsUpdate) {\n\t\t\tthis.getTransformedVertices(); // Force update of vertices\n\t\t\tthis.transformedEdges.length = 0;\n\n\t\t\tthis.transformedEdges.push(\n\t\t\t\tvec3.normalize(vec3.create(), vec3.subtract(vec3.create(), this.transformedVertices[1], this.transformedVertices[0]))\n\t\t\t);\n\t\t\tthis.transformedEdges.push(\n\t\t\t\tvec3.normalize(vec3.create(), vec3.subtract(vec3.create(), this.transformedVertices[2], this.transformedVertices[1]))\n\t\t\t);\n\t\t\tthis.transformedEdges.push(\n\t\t\t\tvec3.normalize(vec3.create(), vec3.subtract(vec3.create(), this.transformedVertices[0], this.transformedVertices[2]))\n\t\t\t);\n\n\t\t\tthis.edgesNeedsUpdate = false;\n\t\t}\n\t\treturn this.transformedEdges;\n\t}\n\n\tgetTransformedEdgeNormals(): Array<vec3> {\n\t\tif (this.edgeNormalsNeedsUpdate) {\n\t\t\tthis.getTransformedEdges(); // Force update of edges\n\t\t\tthis.getTransformedNormals(); // Force update of normal\n\t\t\tthis.transformedEdgeNormals.length = 0;\n\n\t\t\tthis.transformedEdgeNormals.push(\n\t\t\t\tvec3.normalize(vec3.create(), vec3.cross(vec3.create(), this.transformedEdges[0], this.transformedNormals[0]))\n\t\t\t);\n\t\t\tthis.transformedEdgeNormals.push(\n\t\t\t\tvec3.normalize(vec3.create(), vec3.cross(vec3.create(), this.transformedEdges[1], this.transformedNormals[0]))\n\t\t\t);\n\t\t\tthis.transformedEdgeNormals.push(\n\t\t\t\tvec3.normalize(vec3.create(), vec3.cross(vec3.create(), this.transformedEdges[2], this.transformedNormals[0]))\n\t\t\t);\n\n\t\t\tthis.edgeNormalsNeedsUpdate = false;\n\t\t}\n\t\treturn this.transformedEdgeNormals;\n\t}\n}\n","import { gl } from \"../../../main\";\nimport Texture from \"../Textures/Texture\";\n\nexport default class Framebuffer {\n\t// Public\n\ttextures: Array<Texture>;\n\tdepthTexture: Texture;\n\n\t// Protected\n\tprotected rbo: WebGLRenderbuffer;\n\tprotected fbo: WebGLFramebuffer;\n\tprotected width: number;\n\tprotected height: number;\n\n\t/**\n\t * @param width - width of framebuffer textures\n\t * @param height - height of framebuffer textures\n\t * @param textures - colour attachment textures, send empty array if no colour attachments should be used\n\t * @param depthTexture - depth attachment texture, send null if no depth attachment (an rbo will be created instead)\n\t */\n\tconstructor(\n\t\twidth: number,\n\t\theight: number,\n\t\ttextures: Array<Texture>,\n\t\tdepthTexture: Texture\n\t) {\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t\tthis.textures = textures;\n\t\tthis.depthTexture = depthTexture;\n\n\t\tthis.fbo = gl.createFramebuffer();\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, this.fbo);\n\n\t\tthis.setupAttachments();\n\n\t\tif (gl.checkFramebufferStatus(gl.FRAMEBUFFER) != gl.FRAMEBUFFER_COMPLETE) {\n\t\t\tconsole.warn(\"ERROR::FRAMEBUFFER:: Framebuffer is not complete!\");\n\t\t}\n\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t}\n\n\tprotected setupAttachments() {\n\t\tlet attachments = new Array<number>();\n\t\tfor (let i = 0; i < this.textures.length; i++) {\n\t\t\tthis.textures[i].setTextureData(null, this.width, this.height);\n\t\t\tif (this.textures[i].textureTarget == gl.TEXTURE_CUBE_MAP) {\n\t\t\t\t// This is a cube map, set the positive x as target and rendering loop will take care of switching target to the correct side \n\t\t\t\tgl.framebufferTexture2D(\n\t\t\t\t\tgl.FRAMEBUFFER,\n\t\t\t\t\tgl.COLOR_ATTACHMENT0 + i,\n\t\t\t\t\tgl.TEXTURE_CUBE_MAP_POSITIVE_X,\n\t\t\t\t\tthis.textures[i].texture,\n\t\t\t\t\t0\n\t\t\t\t);\t\n\t\t\t\tattachments.push(gl.COLOR_ATTACHMENT0 + i);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// This is a normal 2D texture, set TexParameters to something fitting for a framebuffer target, and set up the target.\n\t\t\t\tthis.textures[i].setTexParameterI(gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n\t\t\t\tthis.textures[i].setTexParameterI(gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n\t\t\t\tthis.textures[i].setTexParameterI(gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\t\tthis.textures[i].setTexParameterI(gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t\tgl.framebufferTexture2D(\n\t\t\t\t\tgl.FRAMEBUFFER,\n\t\t\t\t\tgl.COLOR_ATTACHMENT0 + i,\n\t\t\t\t\tgl.TEXTURE_2D,\n\t\t\t\t\tthis.textures[i].texture,\n\t\t\t\t\t0\n\t\t\t\t);\n\t\t\t\tattachments.push(gl.COLOR_ATTACHMENT0 + i);\n\t\t\t}\n\t\t\t\n\t\t}\n\n\t\t// Attach drawing targets\n\t\tgl.drawBuffers(attachments);\n\n\t\tif (this.depthTexture != undefined) {\n\t\t\t// There is a defined depth texture, null it's content with the correct width and height\n\t\t\tthis.depthTexture.setTextureData(null, this.width, this.height);\n\n\t\t\tif (this.depthTexture.textureTarget == gl.TEXTURE_CUBE_MAP) {\n\t\t\t\t// The depth texture is a cube map, set the positive x as target and rendering loop will take care of switching target to the correct side \n\t\t\t\tgl.framebufferTexture2D(\n\t\t\t\t\tgl.FRAMEBUFFER,\n\t\t\t\t\tgl.DEPTH_ATTACHMENT,\n\t\t\t\t\tgl.TEXTURE_CUBE_MAP_POSITIVE_X,\n\t\t\t\t\tthis.depthTexture.texture,\n\t\t\t\t\t0\n\t\t\t\t);\t\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// The depth texture is a normal 2D texture, set up the appropriate target\n\t\t\t\tgl.framebufferTexture2D(\n\t\t\t\t\tgl.FRAMEBUFFER,\n\t\t\t\t\tgl.DEPTH_ATTACHMENT,\n\t\t\t\t\tgl.TEXTURE_2D,\n\t\t\t\t\tthis.depthTexture.texture,\n\t\t\t\t\t0\n\t\t\t\t);\t\n\t\t\t}\n\t\t} else {\n\t\t\t// We have no defined depth texture, use a render buffer instead\n\t\t\tthis.rbo = gl.createRenderbuffer();\n\t\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, this.rbo);\n\t\t\tgl.renderbufferStorage(\n\t\t\t\tgl.RENDERBUFFER,\n\t\t\t\tgl.DEPTH_STENCIL,\n\t\t\t\tthis.width,\n\t\t\t\tthis.height\n\t\t\t);\n\n\t\t\tgl.framebufferRenderbuffer(\n\t\t\t\tgl.FRAMEBUFFER,\n\t\t\t\tgl.DEPTH_STENCIL_ATTACHMENT,\n\t\t\t\tgl.RENDERBUFFER,\n\t\t\t\tthis.rbo\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Will setup the framebuffer to the given width and height, including resizing (and clearing) all textures (both normal render textures and depth texture)\n\t * For cubemaps all sides will be cleared and resized\n\t * @param width New width of the framebuffer\n\t * @param height New height of the framebuffer\n\t */\n\tsetProportions(width: number, height: number) {\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tfor (let texture of this.textures) {\n\t\t\ttexture.setTextureData(null, this.width, this.height);\n\t\t}\n\t\tif (this.depthTexture) {\n\t\t\tthis.depthTexture.setTextureData(null, this.width, this.height);\n\t\t}\n\n\t\tif (this.rbo) {\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, this.fbo);\n\t\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, this.rbo);\n\t\t\tgl.renderbufferStorage(\n\t\t\t\tgl.RENDERBUFFER,\n\t\t\t\tgl.DEPTH24_STENCIL8,\n\t\t\t\twidth,\n\t\t\t\theight\n\t\t\t);\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t\t}\n\t}\n\n\t/**\n\t * Bind this framebuffer to the sent in target\n\t * @param target framebuffer target (for example gl.FRAMEBUFFER, gl.DRAW_FRAMEBUFFER, gl.READ_FRAMEBUFFER)\n\t */\n\tbind(target: number) {\n\t\tgl.bindFramebuffer(target, this.fbo);\n\t}\n}\n","import { vec2 } from \"gl-matrix\";\nimport Div from \"./Div\";\nimport GuiObject from \"./GuiObject\";\n\nexport default class Button extends GuiObject {\n\tposition: vec2;\n\ttextSize: number;\n\n\tprivate inputNode: HTMLInputElement;\n\tprivate onClickFunction: any;\n\n\tconstructor(parentDiv?: Div) {\n\t\tsuper(parentDiv);\n\t\tthis.position = vec2.create();\n\t\tthis.textSize = 42;\n\n\t\t// make an input node and a label node\n\t\tthis.inputNode = document.createElement(\"input\");\n\t\tthis.inputNode.type = \"button\";\n\t\tthis.inputNode.className = \"button\";\n\n\t\tthis.div.appendChild(this.inputNode);\n\t}\n\n\tgetElement(): HTMLDivElement {\n\t\treturn this.div;\n\t}\n\n\tgetInputElement(): HTMLInputElement {\n\t\treturn this.inputNode;\n\t}\n\n\tonClick(fn: any) {\n\t\tthis.onClickFunction = fn;\n\t\tthis.inputNode.addEventListener(\"click\", this.onClickFunction);\n\t}\n\n\tremove(): void {\n\t\tif (this.onClickFunction != undefined) {\n\t\t\tthis.inputNode.removeEventListener(\"click\", this.onClickFunction);\n\t\t}\n\t\tsuper.remove();\n\t}\n\n\tdraw() {\n\t\tthis.position2D = this.position;\n\t\tthis.inputNode.value = this.textString;\n\t\tthis.fontSize = this.textSize;\n\n\t\tthis.drawObject();\n\t}\n}\n","import { vec2 } from \"gl-matrix\";\nimport Div from \"./Div\";\nimport GuiObject from \"./GuiObject\";\n\nexport default class Checkbox extends GuiObject {\n\tposition: vec2;\n\ttextSize: number;\n\n\tprivate inputNode: HTMLInputElement;\n\tprivate label: HTMLLabelElement;\n\n\tconstructor(parentDiv?: Div) {\n\t\tsuper(parentDiv);\n\t\tthis.position = vec2.create();\n\t\tthis.textSize = 42;\n\n\t\t// make an input node and a label node\n\t\tlet container = document.createElement(\"label\");\n\t\tcontainer.className = \"checkboxContainer\";\n\n\t\tthis.label = document.createElement(\"label\");\n\n\t\tthis.inputNode = document.createElement(\"input\");\n\t\tthis.inputNode.type = \"checkbox\";\n\n\t\tlet checkmarkNode = document.createElement(\"span\");\n\t\tcheckmarkNode.className = \"checkmark\";\n\n\t\tcontainer.appendChild(this.label);\n\t\tcontainer.appendChild(this.inputNode);\n\t\tcontainer.appendChild(checkmarkNode);\n\n\t\tthis.div.appendChild(container);\n\t}\n\n\tgetElement(): HTMLDivElement {\n\t\treturn this.div;\n\t}\n\n\tgetInputElement(): HTMLInputElement {\n\t\treturn this.inputNode;\n\t}\n\n\tgetChecked(): boolean {\n\t\treturn this.inputNode.checked;\n\t}\n\n\tdraw() {\n\t\tthis.position2D = this.position;\n\t\tthis.fontSize = this.textSize;\n\t\tthis.label.textContent = this.textString;\n\t\tthis.drawObject();\n\t}\n}\n","import { vec2 } from \"gl-matrix\";\nimport GuiObject from \"./GuiObject\";\n\nexport default class Div extends GuiObject {\n\tposition: vec2;\n\tsize: number;\n\tchildren: Array<GuiObject>;\n\n\tconstructor(parentDiv?: Div) {\n\t\tsuper(parentDiv);\n\n\t\tthis.position = vec2.create();\n\t\tthis.size = 42;\n\t\tthis.children = new Array<GuiObject>();\n\t}\n\n\tappendChild(childObj: GuiObject) {\n\t\tthis.children.push(childObj);\n\t\tthis.div.appendChild(childObj.getElement());\n\t}\n\n\tdraw(): void {\n\t\tthis.position2D = this.position;\n\t\tthis.fontSize = this.size;\n\t\tthis.drawObject();\n\t}\n}\n","import { vec2 } from \"gl-matrix\";\nimport { windowInfo } from \"../../../../main\";\nimport Div from \"./Div\";\n\nexport default class GuiObject {\n\tprotected position2D: vec2;\n\tprotected fontSize: number;\n\tscaleWithWindow: boolean;\n\ttextString: string;\n\tcenter: boolean;\n\n\tremoved: boolean;\n\n\tprivate divContainerElement: HTMLElement;\n\tprotected div: HTMLDivElement;\n\n\treadonly hasParent: boolean;\n\n\tconstructor(parentDiv?: Div) {\n\t\tthis.removed = false;\n\t\tthis.position2D = vec2.create();\n\t\tthis.fontSize = 42;\n\t\tthis.scaleWithWindow = true;\n\t\tthis.textString = \"\";\n\t\tthis.center = false;\n\n\t\t// look up the guicontainer\n\t\tthis.divContainerElement = <HTMLElement>(\n\t\t\tdocument.getElementById(\"guicontainer\")\n\t\t);\n\n\t\t// make the div\n\t\tthis.div = document.createElement(\"div\");\n\n\t\t// assign it a CSS class\n\t\tthis.div.className = \"floating-div\";\n\n\t\tif (parentDiv != undefined) {\n\t\t\tparentDiv.appendChild(this);\n\t\t\tthis.div.style.position = \"relative\";\n\t\t\tthis.hasParent = true;\n\t\t} else {\n\t\t\t// add it to the divcontainer\n\t\t\tthis.divContainerElement.appendChild(this.div);\n\t\t\tthis.hasParent = false;\n\t\t}\n\t}\n\n\tgetElement(): HTMLDivElement {\n\t\treturn this.div;\n\t}\n\n\tgetHidden(): boolean {\n\t\treturn this.div.hidden;\n\t}\n\n\tsetHidden(hidden: boolean) {\n\t\tthis.div.hidden = hidden;\n\t}\n\n\ttoggleHidden(): boolean {\n\t\tthis.div.hidden = !this.div.hidden;\n\t\treturn this.div.hidden;\n\t}\n\n\tremove() {\n\t\tthis.div.remove();\n\t\tthis.removed = true;\n\t}\n\n\tprotected drawObject() {\n\t\tthis.div.style.left = this.position2D[0] * 100 + \"%\";\n\t\tthis.div.style.top = this.position2D[1] * 100 + \"%\";\n\t\tif (this.scaleWithWindow) {\n\t\t\tthis.div.style.fontSize =\n\t\t\t\tthis.fontSize * (windowInfo.resolutionHeight / 1080.0) + \"px\";\n\t\t} else {\n\t\t\tthis.div.style.fontSize = this.fontSize + \"px\";\n\t\t}\n\n\t\tif (this.center) {\n\t\t\tthis.div.style.transform = \"translate(-50%,-50%)\";\n\t\t}\n\t}\n\n\tdraw() {}\n}\n","import GuiObject from \"./GuiObject\";\nimport Div from \"./Div\";\nimport { vec2 } from \"gl-matrix\";\n\nexport default class Progress extends GuiObject {\n\tposition: vec2;\n\tsize: number;\n\n\tprivate progressNode: HTMLProgressElement;\n\n\tconstructor(parentDiv?: Div) {\n\t\tsuper(parentDiv);\n\n\t\tthis.position = vec2.create();\n\t\tthis.size = 42;\n\n\t\t// make a text node for its content\n\t\tthis.progressNode = document.createElement(\"progress\");\n\t\tthis.div.appendChild(this.progressNode);\n\t}\n\n\tgetProgressElement(): HTMLProgressElement {\n\t\treturn this.progressNode;\n\t}\n\n\tdraw(): void {\n\t\tthis.position2D = this.position;\n\t\tthis.fontSize = this.size;\n\t\tthis.progressNode.textContent = this.textString;\n\t\tthis.drawObject();\n\t}\n}\n","import { vec2 } from \"gl-matrix\";\nimport Div from \"./Div\";\nimport GuiObject from \"./GuiObject\";\n\nexport default class Slider extends GuiObject {\n\tposition: vec2;\n\ttextSize: number;\n\n\tprivate inputNode: HTMLInputElement;\n\tprivate label: HTMLLabelElement;\n\n\tconstructor(parentDiv?: Div) {\n\t\tsuper(parentDiv);\n\t\tthis.position = vec2.create();\n\t\tthis.textSize = 42;\n\n\t\t// make an input node and a label node\n\t\tthis.inputNode = document.createElement(\"input\");\n\t\tthis.inputNode.type = \"range\";\n\t\tthis.inputNode.className = \"slider\";\n\n\t\tthis.label = document.createElement(\"label\");\n\t\tthis.label.textContent = this.textString;\n\t\tthis.label.className = \"sliderLabel\";\n\n\t\tthis.div.appendChild(this.label);\n\t\tthis.div.appendChild(this.inputNode);\n\t}\n\n\tgetElement(): HTMLDivElement {\n\t\treturn this.div;\n\t}\n\n\tgetInputElement(): HTMLInputElement {\n\t\treturn this.inputNode;\n\t}\n\n\tgetValue(): number {\n\t\treturn Number(this.inputNode.value);\n\t}\n\n\tdraw() {\n\t\tthis.position2D = this.position;\n\t\tthis.fontSize = this.textSize;\n\t\tthis.label.textContent = this.textString;\n\t\tsuper.drawObject();\n\t}\n}\n","import { vec2 } from \"gl-matrix\";\nimport Div from \"../Div\";\nimport GuiObject from \"../GuiObject\";\n\nexport default class EditText extends GuiObject {\n\tposition: vec2;\n\ttextSize: number;\n\n\tprivate inputNode: HTMLInputElement;\n\tprivate label: HTMLLabelElement;\n\tprivate onChangeFn: any;\n\n\tconstructor(parentDiv?: Div) {\n\t\tsuper(parentDiv);\n\t\tthis.position = vec2.create();\n\t\tthis.textSize = 42;\n\n\t\t// make an input node and a label node\n\t\tthis.inputNode = document.createElement(\"input\");\n\t\tthis.inputNode.type = \"text\";\n\n\t\tthis.label = document.createElement(\"label\");\n\t\tthis.label.textContent = this.textString;\n\n\t\tthis.div.appendChild(this.label);\n\t\tthis.div.appendChild(this.inputNode);\n\t}\n\n\tgetElement(): HTMLDivElement {\n\t\treturn this.div;\n\t}\n\n\tgetInputElement(): HTMLInputElement {\n\t\treturn this.inputNode;\n\t}\n\n\tonChange(fn: any) {\n\t\tthis.onChangeFn = fn;\n\t\tthis.inputNode.addEventListener(\"change\", this.onChangeFn);\n\t}\n\n\tremove() {\n\t\tif (this.onChangeFn != undefined) {\n\t\t\tthis.inputNode.removeEventListener(\"change\", this.onChangeFn);\n\t\t}\n\t\tsuper.remove();\n\t}\n\n\tdraw() {\n\t\tthis.position2D = this.position;\n\t\tthis.fontSize = this.textSize;\n\t\tthis.label.textContent = this.textString;\n\t\tthis.drawObject();\n\t}\n}\n","import { vec2 } from \"gl-matrix\";\nimport Div from \"../Div\";\nimport GuiObject from \"../GuiObject\";\n\nexport default class TextObject2D extends GuiObject {\n\tposition: vec2;\n\tsize: number;\n\n\tconstructor(parentDiv?: Div) {\n\t\tsuper(parentDiv);\n\n\t\tthis.position = vec2.create();\n\t\tthis.size = 42;\n\t}\n\n\tdraw(): void {\n\t\tthis.position2D = this.position;\n\t\tthis.fontSize = this.size;\n\t\tthis.div.textContent = this.textString;\n\t\tthis.drawObject();\n\t}\n}\n","import { mat4, vec3, vec4 } from \"gl-matrix\";\nimport GuiObject from \"../GuiObject\";\n\nexport default class TextObject3D extends GuiObject {\n\tposition: vec3;\n\tsize: number;\n\tscaleFontWithDistance: boolean;\n\n\tprivate hidden: boolean;\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.position = vec3.create();\n\t\tthis.size = 42;\n\t\tthis.scaleFontWithDistance = true;\n\t}\n\t\n\tsetHidden(hidden: boolean) {\n\t\tsuper.setHidden(hidden);\n\t\tthis.hidden = hidden;\n\t}\n\n\tdraw3D(viewProj: mat4): void { \n\t\tlet pos = vec4.fromValues(\n\t\t\tthis.position[0],\n\t\t\tthis.position[1],\n\t\t\tthis.position[2],\n\t\t\t1.0);\n\t\tlet screenCoords = vec4.transformMat4(vec4.create(), pos, viewProj);\n\t\tscreenCoords[0] =\n\t\t\t(screenCoords[0] / screenCoords[3] + 1.0) / 2.0;\n\t\tscreenCoords[1] =\n\t\t\t1.0 - (screenCoords[1] / screenCoords[3] + 1.0) / 2.0;\n\n\t\tif (screenCoords[2] > 0.0 && !this.hidden) {\n\t\t\tthis.position2D[0] = screenCoords[0];\n\t\t\tthis.position2D[1] = screenCoords[1];\n\n\t\t\tlet size = this.size;\n\t\t\tif (this.scaleFontWithDistance) {\n\t\t\t\tsize = this.size / screenCoords[2];\n\t\t\t}\n\t\t\tthis.fontSize = size;\n\n\t\t\tthis.div.hidden = false;\n\t\t\tthis.div.textContent = this.textString;\n\t\t\tthis.drawObject();\n\t\t} else {\n\t\t\tthis.div.hidden = true;\n\t\t}\n\t}\n}\n","import Camera from \"../../Objects/Camera\";\nimport Button from \"./Objects/Button\";\nimport Checkbox from \"./Objects/Checkbox\";\nimport Div from \"./Objects/Div\";\nimport GuiObject from \"./Objects/GuiObject\";\nimport Progress from \"./Objects/Progress\";\nimport Slider from \"./Objects/Slider\";\nimport EditText from \"./Objects/Text/EditText\";\nimport TextObject2D from \"./Objects/Text/TextObject2D\";\nimport TextObject3D from \"./Objects/Text/TextObject3D\";\n\nexport class OverlayRendering {\n\tprivate camera: Camera; // Optional camera for calculating 3D texts\n\n\t// ---- GUI rendering ----\n\tprivate guiObjects3D: Array<TextObject3D>;\n\tprivate guiObjects2D: Array<GuiObject>;\n\t// -----------------------\n\n\tconstructor(camera: Camera = null) {\n\t\tthis.camera = camera;\n\n\t\t// ---- GUI rendering ----\n\t\tthis.guiObjects3D = new Array<TextObject3D>();\n\t\tthis.guiObjects2D = new Array<GuiObject>();\n\t\t// -----------------------\n\t}\n\n\tsetCamera(camera: Camera) {\n\t\tthis.camera = camera;\n\t}\n\n\tclear() {\n\t\tfor (let guiObject2D of this.guiObjects2D) {\n\t\t\tguiObject2D.remove();\n\t\t}\n\n\t\tfor (let guiObject3D of this.guiObjects3D) {\n\t\t\tguiObject3D.remove();\n\t\t}\n\t}\n\n\thide() {\n\t\tfor (let guiObject2D of this.guiObjects2D) {\n\t\t\tif (!guiObject2D.hasParent) {\n\t\t\t\t// Only change top level objects\n\t\t\t\tguiObject2D.setHidden(true);\n\t\t\t}\n\t\t}\n\n\t\tfor (let guiObject3D of this.guiObjects3D) {\n\t\t\tguiObject3D.setHidden(true);\n\t\t}\n\t}\n\n\tshow() {\n\t\tfor (let guiObject2D of this.guiObjects2D) {\n\t\t\tif (!guiObject2D.hasParent) {\n\t\t\t\t// Only change top level objects\n\t\t\t\tguiObject2D.setHidden(false);\n\t\t\t}\n\t\t}\n\n\t\tfor (let guiObject3D of this.guiObjects3D) {\n\t\t\tguiObject3D.setHidden(false);\n\t\t}\n\t}\n\n\tgetNew3DText(): TextObject3D {\n\t\tconst length = this.guiObjects3D.push(new TextObject3D());\n\t\treturn this.guiObjects3D[length - 1];\n\t}\n\n\tgetNew2DText(parentDiv?: Div): TextObject2D {\n\t\tconst length = this.guiObjects2D.push(new TextObject2D(parentDiv));\n\t\treturn this.guiObjects2D[length - 1] as TextObject2D;\n\t}\n\n\tgetNewCheckbox(parentDiv?: Div): Checkbox {\n\t\tconst length = this.guiObjects2D.push(new Checkbox(parentDiv));\n\t\treturn this.guiObjects2D[length - 1] as Checkbox;\n\t}\n\n\tgetNewButton(parentDiv?: Div): Button {\n\t\tconst length = this.guiObjects2D.push(new Button(parentDiv));\n\t\treturn this.guiObjects2D[length - 1] as Button;\n\t}\n\n\tgetNewSlider(parentDiv?: Div): Slider {\n\t\tconst length = this.guiObjects2D.push(new Slider(parentDiv));\n\t\treturn this.guiObjects2D[length - 1] as Slider;\n\t}\n\n\tgetNewEditText(parentDiv?: Div): EditText {\n\t\tconst length = this.guiObjects2D.push(new EditText(parentDiv));\n\t\treturn this.guiObjects2D[length - 1] as EditText;\n\t}\n\n\tgetNewProgress(parentDiv?: Div): Progress {\n\t\tconst length = this.guiObjects2D.push(new Progress(parentDiv));\n\t\treturn this.guiObjects2D[length - 1] as Progress;\n\t}\n\n\tgetNewDiv(parentDiv?: Div): Div {\n\t\tconst length = this.guiObjects2D.push(new Div(parentDiv));\n\t\treturn this.guiObjects2D[length - 1] as Div;\n\t}\n\n\tdraw() {\n\t\t// ---- GUI rendering ----\n\t\tif (this.camera != undefined) {\n\t\t\tfor (let i = 0; i < this.guiObjects3D.length; i++) {\n\t\t\t\tif (!this.guiObjects3D[i].removed) {\n\t\t\t\t\tthis.guiObjects3D[i].draw3D(this.camera.getViewProjMatrix());\n\t\t\t\t} else {\n\t\t\t\t\tthis.guiObjects3D.splice(i, 1);\n\t\t\t\t\ti--;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (let i = 0; i < this.guiObjects2D.length; i++) {\n\t\t\tif (!this.guiObjects2D[i].removed) {\n\t\t\t\tthis.guiObjects2D[i].draw();\n\t\t\t} else {\n\t\t\t\tthis.guiObjects2D.splice(i, 1);\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\t\t// -----------------------\n\t}\n}\n","import { mat4, vec3 } from \"gl-matrix\";\nimport { gl } from \"../../../main\";\nimport ShaderProgram from \"../ShaderPrograms/ShaderProgram\";\n\nexport default class DirectionalLight {\n\tdirection: vec3;\n\tcolour: vec3;\n\tambientMultiplier: number;\n\n\tlightProjectionBoxSideLength: number;\n\n\tprivate gl: WebGL2RenderingContext;\n\tprivate shaderProgram: ShaderProgram;\n\n\tconstructor(gl: WebGL2RenderingContext, shaderProgram: ShaderProgram) {\n\t\tgl = gl;\n\t\tthis.shaderProgram = shaderProgram;\n\n\t\tthis.direction = vec3.fromValues(0.0, -1.0, -0.5);\n\t\tthis.colour = vec3.fromValues(0.2, 0.2, 0.2);\n\t\tthis.ambientMultiplier = 0.1;\n\t\tthis.lightProjectionBoxSideLength = 50.0;\n\t}\n\n\tbind() {\n\t\tgl.uniform3fv(\n\t\t\tthis.shaderProgram.getUniformLocation(\"directionalLight.direction\")[0],\n\t\t\tvec3.normalize(this.direction, this.direction)\n\t\t);\n\t\tgl.uniform3fv(\n\t\t\tthis.shaderProgram.getUniformLocation(\"directionalLight.colour\")[0],\n\t\t\tthis.colour\n\t\t);\n\t\tgl.uniform1f(\n\t\t\tthis.shaderProgram.getUniformLocation(\n\t\t\t\t\"directionalLight.ambientMultiplier\"\n\t\t\t)[0],\n\t\t\tthis.ambientMultiplier\n\t\t);\n\t}\n\n\tcalcAndSendLightSpaceMatrix(\n\t\tfocusPos: vec3,\n\t\toffset: number,\n\t\tuniformLocation: WebGLUniformLocation\n\t) {\n\t\tlet cameraPos = vec3.clone(focusPos);\n\t\tlet offsetVec = vec3.scale(vec3.create(), vec3.normalize(vec3.create(), this.direction), offset);\n\t\tlet lightSpaceMatrix = mat4.ortho(mat4.create(), \n\t\t\t-this.lightProjectionBoxSideLength,\n\t\t\tthis.lightProjectionBoxSideLength,\n\t\t\t-this.lightProjectionBoxSideLength,\n\t\t\tthis.lightProjectionBoxSideLength,\n\t\t\t0.1,\n\t\t\toffset * 2.0\n\t\t); // Start by setting it to projection\n\t\tvec3.subtract(cameraPos, cameraPos, offsetVec);\n\t\tlet lightView = mat4.lookAt(mat4.create(), \n\t\t\tcameraPos,\n\t\t\tfocusPos,\n\t\t\tvec3.fromValues(0.0,\n\t\t\t1.0,\n\t\t\t0.0)\n\t\t); // This will make it impossible to have exactly straight down shadows, but I'm fine with that\n\t\tmat4.mul(lightSpaceMatrix, lightSpaceMatrix, lightView);\n\t\tgl.uniformMatrix4fv(uniformLocation, false, lightSpaceMatrix);\n\t}\n}\n","import { vec3 } from \"gl-matrix\";\r\nimport { gl } from \"../../../main\";\r\nimport ShaderProgram from \"../ShaderPrograms/ShaderProgram\";\r\nimport CubeMap from \"../Textures/CubeMap\";\r\nimport Framebuffer from \"../Framebuffers/Framebuffer\";\r\n\r\nexport default class PointLight {\r\n\tposition: vec3;\r\n\tcolour: vec3;\r\n\r\n\tconstant: number;\r\n\tlinear: number;\r\n\tquadratic: number;\r\n\tcastShadow: boolean;\r\n\t// depthMapGenerated: boolean;\r\n\t// private radius: number; // TODO: implement light volumes\r\n\r\n\tpointShadowBuffer: Framebuffer;\r\n\tpointShadowDepthMap: CubeMap;\r\n\r\n\tconstructor() {\r\n\t\tthis.position = vec3.fromValues(0.0, 0.0, 0.0);\r\n\t\tthis.colour = vec3.fromValues(1.0, 1.0, 1.0);\r\n\r\n\t\tthis.constant = 1.0;\r\n\t\tthis.linear = 0.07;\r\n\t\tthis.quadratic = 0.017;\r\n\t\tthis.castShadow = false;\r\n\t\t// this.depthMapGenerated = false;\r\n\t\t// this.radius = (-this.linear + Math.sqrt(this.linear * this.linear - 4.0 * this.quadratic * (this.constant - (256.0 / 5.0)))) / (2.0 * this.quadratic);\r\n\r\n\t\tthis.pointShadowDepthMap = new CubeMap(false, gl.DEPTH_COMPONENT32F, gl.DEPTH_COMPONENT, gl.FLOAT);\r\n\t\tthis.pointShadowDepthMap.setTextureData(null, 1024, 1024);\r\n\r\n\t\tthis.pointShadowBuffer = new Framebuffer(\r\n            1024,\r\n            1024,\r\n            [],\r\n            this.pointShadowDepthMap\r\n        );\r\n\t}\r\n\r\n\tbind(lightIndex: number, depthMapIndex: number, shaderProgram: ShaderProgram) {\r\n\t\tlet ul = shaderProgram.getUniformLocation(\r\n\t\t\t\"pointLights[\" + lightIndex + \"].position\"\r\n\t\t);\r\n\t\tif (ul[1]) {\r\n\t\t\tgl.uniform3fv(ul[0], this.position);\r\n\t\t}\r\n\t\tul = shaderProgram.getUniformLocation(\r\n\t\t\t\"pointLights[\" + lightIndex + \"].colour\"\r\n\t\t);\r\n\t\tif (ul[1]) {\r\n\t\t\tgl.uniform3fv(ul[0], this.colour);\r\n\t\t}\r\n\r\n\t\tul = shaderProgram.getUniformLocation(\r\n\t\t\t\"pointLights[\" + lightIndex + \"].constant\"\r\n\t\t);\r\n\t\tif (ul[1]) {\r\n\t\t\tgl.uniform1f(ul[0], this.constant);\r\n\t\t}\r\n\t\tul = shaderProgram.getUniformLocation(\r\n\t\t\t\"pointLights[\" + lightIndex + \"].linear\"\r\n\t\t);\r\n\t\tif (ul[1]) {\r\n\t\t\tgl.uniform1f(ul[0], this.linear);\r\n\t\t}\r\n\t\tul = shaderProgram.getUniformLocation(\r\n\t\t\t\"pointLights[\" + lightIndex + \"].quadratic\"\r\n\t\t);\r\n\t\tif (ul[1]) {\r\n\t\t\tgl.uniform1f(ul[0], this.quadratic);\r\n\t\t}\r\n\r\n\t\tul = shaderProgram.getUniformLocation(\r\n\t\t\t\"pointLights[\" + lightIndex + \"].pointDepthMapIndex\"\r\n\t\t);\r\n\t\tif (ul[1]) {\r\n\t\t\tgl.uniform1i(ul[0], this.castShadow? depthMapIndex: -1);\r\n\t\t}\r\n\t}\r\n}\r\n","import { applicationStartTime, gl, windowInfo } from \"../../../../main\";\r\nimport Camera from \"../../../Objects/Camera\";\r\nimport Framebuffer from \"../../Framebuffers/Framebuffer\";\r\nimport { geometryPass } from \"../../ShaderPrograms/DeferredRendering/GeometryPass\";\r\nimport { grassShaderProgram } from \"../../ShaderPrograms/GrassShaderProgram\";\r\nimport Texture from \"../../Textures/Texture\";\r\nimport Scene from \"../../Scene\";\r\n\r\nexport default class GeometryRenderPass {\r\n\toutputFramebuffer: Framebuffer;\r\n\r\n\tconstructor() {\r\n\t\tthis.outputFramebuffer = new Framebuffer(\r\n\t\t\twindowInfo.resolutionWidth,\r\n\t\t\twindowInfo.resolutionHeight,\r\n\t\t\t[\r\n\t\t\t\tnew Texture(false, gl.RGBA32F, gl.RGBA, gl.FLOAT),\r\n\t\t\t\tnew Texture(false, gl.RGBA32F, gl.RGBA, gl.FLOAT),\r\n\t\t\t\tnew Texture(false),\r\n\t\t\t\tnew Texture(false),\r\n\t\t\t],\r\n\t\t\tnull\r\n\t\t);\r\n\t}\r\n\r\n\tsetResolution(x: number, y: number) {\r\n\t\tthis.outputFramebuffer.setProportions(x, y);\r\n\t}\r\n\r\n\tdraw(scene: Scene, camera: Camera) {\r\n\t\tgl.viewport(\r\n\t\t\t0.0,\r\n\t\t\t0.0,\r\n\t\t\twindowInfo.resolutionWidth,\r\n\t\t\twindowInfo.resolutionHeight\r\n\t\t);\r\n\r\n\t\t// Bind gbuffer and clear that with 0,0,0,0 (the alpha = 0 is important to be able to identify fragments in the lighting pass that have not been written with geometry)\r\n\t\tthis.outputFramebuffer.bind(gl.FRAMEBUFFER);\r\n\t\tgl.clearColor(0.0, 0.0, 0.0, 0.0);\r\n\t\tgl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT | gl.STENCIL_BUFFER_BIT);\r\n\r\n\t\tgeometryPass.use();\r\n\r\n\t\tcamera.bindViewProjMatrix(\r\n\t\t\tgeometryPass.getUniformLocation(\"viewProjMatrix\")[0]\r\n\t\t);\r\n\r\n\t\tscene.renderScene(geometryPass, true);\r\n\r\n\t\tgrassShaderProgram.use();\r\n\t\tcamera.bindViewProjMatrix(\r\n\t\t\tgrassShaderProgram.getUniformLocation(\"viewProjMatrix\")[0]\r\n\t\t);\r\n\r\n\t\tgl.uniform3fv(\r\n\t\t\tgrassShaderProgram.getUniformLocation(\"cameraPos\")[0],\r\n\t\t\tcamera.getPosition()\r\n\t\t);\r\n\t\tgl.uniform1f(\r\n\t\t\tgrassShaderProgram.getUniformLocation(\"currentTime\")[0],\r\n\t\t\t(Date.now() - applicationStartTime) * 0.001\r\n\t\t);\r\n\r\n\t\tscene.renderGrass(grassShaderProgram, true);\r\n\t}\r\n}\r\n","import { gl } from \"../../../../main\";\r\nimport Camera from \"../../../Objects/Camera\";\r\nimport Framebuffer from \"../../Framebuffers/Framebuffer\";\r\nimport ScreenQuad from \"../../../Objects/GraphicsObjects/ScreenQuad\";\r\nimport { lightingPass, pointShadowsToAllocate } from \"../../ShaderPrograms/DeferredRendering/LightingPass\";\r\nimport Texture from \"../../Textures/Texture\";\r\nimport Scene from \"../../Scene\";\r\nimport { vec3 } from \"gl-matrix\";\r\n\r\nexport default class LightingRenderPass {\r\n\tprivate screenQuad: ScreenQuad;\r\n\r\n\toutputFramebuffer: Framebuffer;\r\n\r\n\tconstructor(inputTextures: Texture[]) {\r\n\t\tthis.screenQuad = new ScreenQuad(lightingPass, inputTextures);\r\n\t}\r\n\r\n\tsetResolution(x: number, y: number) {\r\n\t\tthis.outputFramebuffer.setProportions(x, y);\r\n\t}\r\n\r\n\tdraw(scene: Scene, camera: Camera) {\r\n\t\t// Disable depth testing for screen quad(s) rendering\r\n\t\tgl.disable(gl.DEPTH_TEST);\r\n\r\n\t\t// ---- Lighting pass ----\r\n\t\tlightingPass.use();\r\n\r\n\t\tgl.uniform3fv(\r\n\t\t\tlightingPass.getUniformLocation(\"camPos\")[0],\r\n\t\t\tcamera.getPosition()\r\n\t\t);\r\n\t\tscene.directionalLight.bind();\r\n\t\tscene.directionalLight.calcAndSendLightSpaceMatrix(\r\n\t\t\tvec3.clone(camera.getPosition()),\r\n\t\t\t20.0,\r\n\t\t\tlightingPass.getUniformLocation(\"lightSpaceMatrix\")[0]\r\n\t\t);\r\n\t\t// Point lights\r\n\t\tgl.uniform1i(\r\n\t\t\tlightingPass.getUniformLocation(\"nrOfPointLights\")[0],\r\n\t\t\tscene.pointLights.length\r\n\t\t);\r\n\t\t\r\n\t\t// Bind pointLights, with counter as depthMapIndex\r\n\t\tlet counter = 0;\r\n\t\tfor (let i = 0; i < scene.pointLights.length; i++) {\r\n\t\t\tscene.pointLights[i].bind(i, counter, lightingPass);\r\n\t\t\tif (scene.pointLights[i].castShadow) {\r\n\t\t\t\tcounter++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Bind all textures except the point light depth maps\r\n\t\tfor (let i = 0; i < this.screenQuad.textures.length; i++) {\r\n\t\t\tthis.screenQuad.textures[i].bind(i);\r\n\t\t}\r\n\t\r\n\t\t// Then bind the point light depth maps \r\n\t\tcounter = this.screenQuad.textures.length;\r\n\t\tfor (const pointLight of scene.pointLights) {\r\n\t\t\tif (counter - this.screenQuad.textures.length >= pointShadowsToAllocate) {\r\n                break;\r\n            }\r\n\t\t\tif (pointLight.castShadow) {\r\n\t\t\t\tpointLight.pointShadowDepthMap.bind(counter++);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.screenQuad.draw(false);\r\n\t\t// -----------------------\r\n\r\n\t\t// Enable depth test again\r\n\t\tgl.enable(gl.DEPTH_TEST);\r\n\t}\r\n}\r\n","import { gl } from \"../../../main\";\nimport Framebuffer from \"../Framebuffers/Framebuffer\";\nimport Texture from \"../Textures/Texture\";\nimport ScreenQuad from \"../../Objects/GraphicsObjects/ScreenQuad\";\nimport { screenQuadShaderProgram } from \"../ShaderPrograms/ScreenQuadShaderProgram\";\n\nexport default class FinishedOutputRenderPass {\n\tprivate screenQuad: ScreenQuad;\n\toutputFramebuffer: Framebuffer;\n\n\tconstructor(inputTextures: Texture[]) {\n\t\tthis.screenQuad = new ScreenQuad(screenQuadShaderProgram, inputTextures);\n\t\tthis.outputFramebuffer = null;\n\t}\n\n\tdraw() {\n\t\tgl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, null); // Render directly to screen\n\t\tgl.disable(gl.DEPTH_TEST);\n\t\t// ---- Crt effect ----\n\t\tscreenQuadShaderProgram.use();\n\t\tthis.screenQuad.draw(true);\n\t\t// --------------------\n\t\tgl.enable(gl.DEPTH_TEST);\n\t}\n}\n","import { applicationStartTime, gl, windowInfo } from \"../../../main\";\r\nimport Camera from \"../../Objects/Camera\";\r\nimport Scene from \"../Scene\";\r\nimport { particleShaderProgram } from \"../ShaderPrograms/ParticleShaderProgram\";\r\nimport Framebuffer from \"../Framebuffers/Framebuffer\";\r\nimport Texture from \"../Textures/Texture\";\r\nimport ScreenQuad from \"../../Objects/GraphicsObjects/ScreenQuad\";\r\nimport { screenQuadShaderProgram } from \"../ShaderPrograms/ScreenQuadShaderProgram\";\r\nimport { blurTransparency } from \"../ShaderPrograms/PostProcessing/BlurTransparency\";\r\n\r\nexport default class ParticleRenderPass {\r\n\toutputBuffer: Framebuffer;\r\n\r\n\tprivate textures: Texture[];\r\n\r\n\tprivate screenQuad: ScreenQuad;\r\n\tconstructor(inputTextures: Texture[]) {\r\n\t\tthis.outputBuffer = null;\r\n\t\tthis.textures = inputTextures;\r\n\r\n\t\tthis.screenQuad = new ScreenQuad(screenQuadShaderProgram, inputTextures);\r\n\t}\r\n\r\n\tprivate bindFramebuffers() {\r\n\t\t// Render result to screen or to crt framebuffer if doing crt effect after this.\r\n\t\tif (this.outputBuffer == undefined) {\r\n\t\t\tgl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, null); // Render directly to screen\r\n\t\t} else {\r\n\t\t\tthis.outputBuffer.bind(gl.DRAW_FRAMEBUFFER);\r\n\t\t}\r\n\t}\r\n\r\n\tdraw(scene: Scene, camera: Camera) {\r\n\t\tgl.clearBufferfv(gl.COLOR, 1, [0.0, 0.0, 0.0, 1.0]);\r\n\t\tif (scene.particleSpawners.length > 0) {\r\n\t\t\t// only do this if there are any particle spawners\r\n\t\t\tparticleShaderProgram.use();\r\n\t\t\tcamera.bindViewProjMatrix(\r\n\t\t\t\tparticleShaderProgram.getUniformLocation(\"viewProjMatrix\")[0]\r\n\t\t\t);\r\n\t\t\tgl.uniform3fv(\r\n\t\t\t\tparticleShaderProgram.getUniformLocation(\"cameraPos\")[0],\r\n\t\t\t\tcamera.getPosition()\r\n\t\t\t);\r\n\t\t\tgl.uniform1f(\r\n\t\t\t\tparticleShaderProgram.getUniformLocation(\"currentTime\")[0],\r\n\t\t\t\t(Date.now() - applicationStartTime) * 0.001\r\n\t\t\t);\r\n\t\t\tfor (const particleSpawner of scene.particleSpawners.values()) {\r\n\t\t\t\tparticleSpawner.draw();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// this.bindFramebuffers();\r\n\t\t// gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT | gl.STENCIL_BUFFER_BIT);\r\n\r\n\t\t// // Blurred particles\r\n\t\t// blurTransparency.use();\r\n\t\t// this.screenQuad.draw(true);\r\n\r\n\t\t// Sharp particles\r\n\t\t// screenQuadShaderProgram.use();\r\n\t\t// this.textures[0].bind(0);\r\n\t\t// this.screenQuad.draw(false);\r\n\t}\r\n}\r\n","import { gl, windowInfo } from \"../../../../main\";\nimport Framebuffer from \"../../Framebuffers/Framebuffer\";\nimport Texture from \"../../Textures/Texture\";\nimport ScreenQuad from \"../../../Objects/GraphicsObjects/ScreenQuad\";\nimport { screenQuadShaderProgram } from \"../../ShaderPrograms/ScreenQuadShaderProgram\";\nimport { bloomExtraction } from \"../../ShaderPrograms/PostProcessing/BloomExtraction\";\nimport { bloomBlending } from \"../../ShaderPrograms/PostProcessing/BloomBlending\";\n\nexport default class BloomRenderPass {\n\tprivate bloomResolutionWidth: number;\n\tprivate bloomResolutionHeight: number;\n\tprivate bloomExtractionOutputFramebuffer: Framebuffer;\n\tprivate bloomLevelsFramebuffers: Array<Framebuffer>;\n\n\tprivate screenQuad: ScreenQuad;\n\toutputFramebuffer: Framebuffer;\n\n\tconstructor(inputTextures: Texture[]) {\n\t\tthis.bloomResolutionWidth = 1280;\n\t\tthis.bloomResolutionHeight = 720;\n\t\tthis.bloomExtractionOutputFramebuffer = new Framebuffer(\n\t\t\twindowInfo.resolutionWidth,\n\t\t\twindowInfo.resolutionHeight,\n\t\t\t[new Texture(false), new Texture(false)],\n\t\t\tnull\n\t\t);\n\t\tthis.bloomLevelsFramebuffers = new Array<Framebuffer>();\n\n\t\tfor (let i = 1; i <= 5; i++) {\n\t\t\tthis.bloomLevelsFramebuffers.push(\n\t\t\t\tnew Framebuffer(\n\t\t\t\t\tthis.bloomResolutionWidth * Math.pow(0.5, i),\n\t\t\t\t\tthis.bloomResolutionHeight * Math.pow(0.5, i),\n\t\t\t\t\t[new Texture(false)],\n\t\t\t\t\tnull\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\tthis.screenQuad = new ScreenQuad(screenQuadShaderProgram, inputTextures);\n\t\tthis.outputFramebuffer = null;\n\t}\n\n\tsetResolution(x: number, y: number) {\n\t\tthis.bloomExtractionOutputFramebuffer.setProportions(x, y);\n\t}\n\n\tprivate bindFramebuffers() {\n\t\t// Render result to screen or to crt framebuffer if doing crt effect after this.\n\t\tif (this.outputFramebuffer == undefined) {\n\t\t\tgl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, null); // Render directly to screen\n\t\t} else {\n\t\t\tthis.outputFramebuffer.bind(gl.DRAW_FRAMEBUFFER);\n\t\t}\n\t}\n\n\tdraw() {\n\t\tgl.disable(gl.DEPTH_TEST);\n\n\t\t// Extract the bloom areas\n\t\tthis.bloomExtractionOutputFramebuffer.bind(gl.DRAW_FRAMEBUFFER);\n\t\tbloomExtraction.use();\n\t\tthis.screenQuad.draw(true);\n\n\t\t// Downscale the image and save every iteration\n\t\tscreenQuadShaderProgram.use();\n\t\tthis.bloomExtractionOutputFramebuffer.textures[1].bind(0);\n\t\tfor (let i = 0; i < this.bloomLevelsFramebuffers.length; i++) {\n\t\t\tgl.viewport(\n\t\t\t\t0,\n\t\t\t\t0,\n\t\t\t\tthis.bloomResolutionWidth * Math.pow(0.5, i + 1),\n\t\t\t\tthis.bloomResolutionHeight * Math.pow(0.5, i + 1)\n\t\t\t);\n\t\t\tthis.bloomLevelsFramebuffers[i].bind(gl.DRAW_FRAMEBUFFER);\n\t\t\tthis.screenQuad.draw(false);\n\t\t\tthis.bloomLevelsFramebuffers[i].textures[0].bind(0);\n\t\t}\n\n\t\t// Combine the normal image with bloom iterations\n\t\tbloomBlending.use();\n\t\tgl.viewport(0, 0, windowInfo.resolutionWidth, windowInfo.resolutionHeight);\n\n\t\tthis.bloomExtractionOutputFramebuffer.textures[0].bind(0); // Normal scene\n\t\t// Bloom levels\n\t\tfor (let i = 0; i < this.bloomLevelsFramebuffers.length; i++) {\n\t\t\tthis.bloomLevelsFramebuffers[i].textures[0].bind(i + 1);\n\t\t}\n\n\t\tthis.bindFramebuffers();\n\t\tthis.screenQuad.draw(false);\n\n\t\tgl.enable(gl.DEPTH_TEST);\n\t}\n}\n","import { gl } from \"../../../../main\";\nimport Framebuffer from \"../../Framebuffers/Framebuffer\";\nimport Texture from \"../../Textures/Texture\";\nimport { crtShaderProgram } from \"../../ShaderPrograms/PostProcessing/CrtShaderProgram\";\nimport ScreenQuad from \"../../../Objects/GraphicsObjects/ScreenQuad\";\n\nexport default class CRTRenderPass {\n\tprivate screenQuad: ScreenQuad;\n\toutputFramebuffer: Framebuffer;\n\n\tconstructor(inputTextures: Texture[]) {\n\t\tthis.screenQuad = new ScreenQuad(crtShaderProgram, inputTextures);\n\t\tthis.outputFramebuffer = null;\n\t}\n\n\tprivate bindFramebuffers() {\n\t\tif (this.outputFramebuffer == undefined) {\n\t\t\tgl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, null); // Render directly to screen\n\t\t} else {\n\t\t\tthis.outputFramebuffer.bind(gl.DRAW_FRAMEBUFFER);\n\t\t}\n\t}\n\n\tdraw() {\n\t\tthis.bindFramebuffers();\n\t\tgl.disable(gl.DEPTH_TEST);\n\t\t// ---- Crt effect ----\n\t\tcrtShaderProgram.use();\n\t\tthis.screenQuad.draw(true);\n\t\t// --------------------\n\t\tgl.enable(gl.DEPTH_TEST);\n\t}\n}\n","import { applicationStartTime, gl } from \"../../../../main\";\nimport Framebuffer from \"../../Framebuffers/Framebuffer\";\nimport { grassShadowPass } from \"../../ShaderPrograms/ShadowMapping/GrassShadowPass\";\nimport { shadowPass } from \"../../ShaderPrograms/ShadowMapping/ShadowPass\";\nimport Texture from \"../../Textures/Texture\";\nimport Scene from \"../../Scene\";\nimport Camera from \"../../../Objects/Camera\";\nimport { vec3 } from \"gl-matrix\";\n\nexport default class DirectionalShadowRenderPass {\n\t// ---- Shadow mapping ----\n\tprivate shadowResolution: number;\n\tprivate shadowOffset: number;\n\tshadowBuffer: Framebuffer;\n\t// ------------------------\n\n\tconstructor() {\n\t\t// ---- Shadow mapping ----\n\t\tthis.shadowResolution = 4096;\n\t\tthis.shadowOffset = 20.0;\n\t\tthis.shadowBuffer = new Framebuffer(\n\t\t\tthis.shadowResolution,\n\t\t\tthis.shadowResolution,\n\t\t\t[],\n\t\t\tnew Texture(false, gl.DEPTH_COMPONENT32F, gl.DEPTH_COMPONENT, gl.FLOAT)\n\t\t);\n\t\t// ------------------------\n\t}\n\n\tsetShadowMappingResolution(res: number) {\n\t\tthis.shadowResolution = res;\n\t\tthis.shadowBuffer.setProportions(res, res);\n\t}\n\n\tdraw(scene: Scene, camera: Camera) {\n\t\tthis.shadowBuffer.bind(gl.FRAMEBUFFER);\n\n\t\tgl.enable(gl.DEPTH_TEST);\n\n\t\t// ---- Shadow pass ----\n\t\tshadowPass.use();\n\t\tgl.viewport(0, 0, this.shadowResolution, this.shadowResolution);\n\t\tgl.clearColor(1.0, 1.0, 1.0, 1.0);\n\t\tgl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n\t\t// gl.enable(gl.CULL_FACE);\n\t\t// gl.cullFace(gl.FRONT);\n\n\t\t//Set uniforms\n\t\tscene\n\t\t\t.getDirectionalLight()\n\t\t\t.calcAndSendLightSpaceMatrix(\n\t\t\t\tvec3.clone(camera.getPosition()),\n\t\t\t\tthis.shadowOffset,\n\t\t\t\tshadowPass.getUniformLocation(\"lightSpaceMatrix\")[0]\n\t\t\t);\n\n\t\t//Render shadow pass\n\t\tscene.renderScene(shadowPass, false);\n\n\t\t// Grass\n\t\tgrassShadowPass.use();\n\t\t//Set uniforms\n\t\tscene\n\t\t\t.getDirectionalLight()\n\t\t\t.calcAndSendLightSpaceMatrix(\n\t\t\t\tvec3.clone(camera.getPosition()),\n\t\t\t\tthis.shadowOffset,\n\t\t\t\tgrassShadowPass.getUniformLocation(\"lightSpaceMatrix\")[0]\n\t\t\t);\n\n\t\tgl.uniform3fv(\n\t\t\tgrassShadowPass.getUniformLocation(\"cameraPos\")[0],\n\t\t\tcamera.getPosition()\n\t\t);\n\t\tgl.uniform1f(\n\t\t\tgrassShadowPass.getUniformLocation(\"currentTime\")[0],\n\t\t\t(Date.now() - applicationStartTime) * 0.001\n\t\t);\n\n\t\tscene.renderGrass(grassShadowPass, false);\n\n\t\t// gl.disable(gl.CULL_FACE);\n\t\t// ---------------------\n\t}\n}\n","import { gl } from \"../../../../main\";\r\nimport Scene from \"../../Scene\";\r\nimport Camera from \"../../../Objects/Camera\";\r\nimport { vec3 } from \"gl-matrix\";\r\nimport { pointShadowPass } from \"../../ShaderPrograms/ShadowMapping/PointShadowPass\";\r\nimport { pointShadowsToAllocate } from \"../../ShaderPrograms/DeferredRendering/LightingPass\";\r\n\r\nexport default class PointShadowRenderPass {\r\n\tprivate shadowResolution: number;\r\n\r\n\tconstructor() {\r\n\t\tthis.shadowResolution = 1023;\r\n\t}\r\n\r\n\tsetShadowMappingResolution(res: number) {\r\n\t\tthis.shadowResolution = res;\r\n\t}\r\n\r\n\tdraw(scene: Scene) {\r\n        gl.enable(gl.DEPTH_TEST);\r\n        gl.enable(gl.CULL_FACE);\r\n        gl.cullFace(gl.FRONT);\r\n        \r\n        let pointLightCamera = new Camera();\r\n        pointLightCamera.setFOV(90);\r\n        pointLightCamera.setAspectRatio(1);\r\n        pointLightCamera.setFarPlaneDistance(100.0);\r\n\r\n        const directions = [vec3.fromValues(1.0, 0.0, 0.0), vec3.fromValues(-1.0, 0.0, 0.0), vec3.fromValues(0.0, -1.0, 0.0), vec3.fromValues(0.0, 1.0, 0.0), vec3.fromValues(0.0, 0.0, -1.0), vec3.fromValues(0.0, 0.0, 1.0)];\r\n        const ups = [vec3.fromValues(0.0, 1.0, 0.0), vec3.fromValues(0.0, 1.0, 0.0), vec3.fromValues(0.0, 0.0, -1.0), vec3.fromValues(0.0, 0.0, 1.0), vec3.fromValues(0.0, 1.0, 0.0), vec3.fromValues(0.0, 1.0, 0.0)];\r\n\r\n        let counter = 0;\r\n        for (let pointLight of scene.pointLights) {\r\n            if (counter >= pointShadowsToAllocate) {\r\n                break;\r\n            }\r\n\t\t\tif (pointLight.castShadow /*&& !pointLight.depthMapGenerated*/) {\r\n                counter++;\r\n                // pointLight.depthMapGenerated = true;\r\n                \r\n                pointLightCamera.setPosition(pointLight.position);\r\n        \r\n                pointLight.pointShadowBuffer.bind(gl.FRAMEBUFFER);\r\n                pointLight.pointShadowDepthMap.setTextureData(null, this.shadowResolution, this.shadowResolution); // Make sure the textures are correct size. TOOD: Is this super slow?\r\n                \r\n                for (let i = 0; i < directions.length; i++) {\r\n                    pointLightCamera.setDir(directions[i]);\r\n                    pointLightCamera.setUp(ups[i]);\r\n                    gl.framebufferTexture2D(\r\n                        gl.FRAMEBUFFER,\r\n                        gl.DEPTH_ATTACHMENT,\r\n                        gl.TEXTURE_CUBE_MAP_POSITIVE_X + i,\r\n                        pointLight.pointShadowDepthMap.texture,\r\n                        0\r\n                    );\t\r\n        \r\n                    // ---- Shadow pass ----\r\n                    pointShadowPass.use();\r\n                    gl.viewport(0, 0, this.shadowResolution, this.shadowResolution);\r\n                    gl.clear(gl.DEPTH_BUFFER_BIT);\r\n        \r\n                    //Set uniforms          \r\n                    pointLightCamera.bindViewProjMatrix(pointShadowPass.getUniformLocation(\"lightSpaceMatrix\")[0]);\r\n                    gl.uniform3fv(\r\n                        pointShadowPass.getUniformLocation(\"cameraPos\")[0],\r\n                        pointLightCamera.getPosition()\r\n                    );\r\n        \r\n                    //Render shadow pass\r\n                    scene.renderScene(pointShadowPass, false);\r\n                }\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n        gl.disable(gl.CULL_FACE);\r\n\t}\r\n}\r\n","import { gl } from \"../../../main\";\nimport Skybox from \"../../Objects/GraphicsObjects/Skybox\";\nimport { skyboxShaderProgram } from \"../ShaderPrograms/Skybox/SkyboxShaderProgram\";\nimport CubeMap from \"../Textures/CubeMap\";\nimport Camera from \"../../Objects/Camera\";\n\nexport default class SkyboxRenderPass {\n\tprivate skybox: Skybox;\n\n\tconstructor() {\n\t\tthis.skybox = null;\n\t}\n\n\tsetSkybox(cubemap: CubeMap) {\n\t\tthis.skybox = new Skybox(skyboxShaderProgram, cubemap);\n\t}\n\n\tdraw(camera: Camera) {\n\t\tif (this.skybox != undefined) {\n\t\t\tgl.enable(gl.DEPTH_TEST);\n\t\t\tskyboxShaderProgram.use();\n\t\t\tcamera.bindViewProjMatrix(\n\t\t\t\tskyboxShaderProgram.getUniformLocation(\"viewProjMatrix\")[0],\n\t\t\t\ttrue\n\t\t\t);\n\t\t\tgl.depthFunc(gl.LEQUAL);\n\t\t\tthis.skybox.draw();\n\t\t\tgl.depthFunc(gl.LESS);\n\t\t}\n\t}\n}\n","import { gl } from \"../../../../main\";\r\nimport Camera from \"../../../Objects/Camera\";\r\nimport GodRayPlanes from \"../../../Objects/GraphicsObjects/GodRayPlanes\";\r\nimport Framebuffer from \"../../Framebuffers/Framebuffer\";\r\nimport Scene from \"../../Scene\";\r\nimport { pointShadowsToAllocate } from \"../../ShaderPrograms/DeferredRendering/LightingPass\";\r\nimport { volumetricGodRayShaderProgram } from \"../../ShaderPrograms/Volumetric/VolumetricGodRayShaderProgram\";\r\n\r\nexport default class VolumetricGodRayPass {\r\n\toutputBuffer: Framebuffer;\r\n\r\n\tprivate godRayPlanes: GodRayPlanes;\r\n\tconstructor() {\r\n\t\tthis.outputBuffer = null;\r\n\t\tthis.godRayPlanes = new GodRayPlanes(volumetricGodRayShaderProgram);\r\n\t}\r\n\r\n\tprivate bindFramebuffers() {\r\n\t\t// Render result to screen or to crt framebuffer if doing crt effect after this.\r\n\t\tif (this.outputBuffer == undefined) {\r\n\t\t\tgl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, null); // Render directly to screen\r\n\t\t} else {\r\n\t\t\tthis.outputBuffer.bind(gl.DRAW_FRAMEBUFFER);\r\n\t\t}\r\n\t}\r\n\r\n\tdraw(scene: Scene, camera: Camera) {\r\n\t\t// this.bindFramebuffers();\r\n\t\tvolumetricGodRayShaderProgram.use();\r\n\t\tgl.enable(gl.BLEND);\r\n\t\tgl.blendFunc(gl.SRC_ALPHA, gl.ONE);\r\n\t\tcamera.bindViewProjMatrix(\r\n\t\t\tvolumetricGodRayShaderProgram.getUniformLocation(\"viewProjMatrix\")[0]\r\n\t\t);\r\n\t\tgl.uniform3fv(\r\n\t\t\tvolumetricGodRayShaderProgram.getUniformLocation(\"cameraPos\")[0],\r\n\t\t\tcamera.getPosition()\r\n\t\t);\r\n\t\tgl.uniform1f(\r\n\t\t\tvolumetricGodRayShaderProgram.getUniformLocation(\"fov\")[0],\r\n\t\t\tcamera.getFov()\r\n\t\t)\r\n\t\t// Point lights\r\n\t\tgl.uniform1i(\r\n\t\t\tvolumetricGodRayShaderProgram.getUniformLocation(\"nrOfPointLights\")[0],\r\n\t\t\tscene.pointLights.length\r\n\t\t);\r\n\r\n\t\t// Bind pointLights, with counter as depthMapIndex\r\n\t\tlet counter = 0;\r\n\t\tfor (let i = 0; i < scene.pointLights.length; i++) {\r\n\t\t\tscene.pointLights[i].bind(i, counter, volumetricGodRayShaderProgram);\r\n\t\t\tif (scene.pointLights[i].castShadow) {\r\n\t\t\t\tcounter++;\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\t// Then bind the point light depth maps \r\n\t\tcounter = 0;\r\n\t\tfor (const pointLight of scene.pointLights) {\r\n\t\t\tif (counter >= pointShadowsToAllocate) {\r\n                break;\r\n            }\r\n\t\t\tif (pointLight.castShadow) {\r\n\t\t\t\tpointLight.pointShadowDepthMap.bind(counter++);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.godRayPlanes.draw();\r\n\t\tgl.disable(gl.BLEND);\r\n\t}\r\n}\r\n","import { gl, windowInfo } from \"../../main\";\r\nimport { options } from \"../../Game/GameMachine\";\r\nimport Framebuffer from \"./Framebuffers/Framebuffer\";\r\nimport Texture from \"./Textures/Texture\";\r\nimport TextureStore from \"../AssetHandling/TextureStore\";\r\nimport Camera from \"../Objects/Camera\";\r\nimport Scene from \"./Scene\";\r\nimport DirectionalShadowRenderPass from \"./RenderPasses/ShadowPasses/DirectionalShadowRenderPass\";\r\nimport CRTRenderPass from \"./RenderPasses/PostProcessing/CRTRenderPass\";\r\nimport BloomRenderPass from \"./RenderPasses/PostProcessing/BloomRenderPass\";\r\nimport SkyboxRenderPass from \"./RenderPasses/SkyboxRenderPass\";\r\nimport GeometryRenderPass from \"./RenderPasses/DefferedRendering/GeometryRenderPass\";\r\nimport LightingRenderPass from \"./RenderPasses/DefferedRendering/LightingRenderPass\";\r\nimport ParticleRenderPass from \"./RenderPasses/ParticleRenderPass\";\r\nimport FinishedOutputRenderPass from \"./RenderPasses/FinishedOutputRenderPass\";\r\nimport PointShadowRenderPass from \"./RenderPasses/ShadowPasses/PointShadowRenderPass\";\r\nimport CubeMap from \"./Textures/CubeMap\";\r\nimport VolumetricGodRayPass from \"./RenderPasses/Volumetric/VolumetricGodRayPass\";\r\n\r\nexport default class Rendering {\r\n\t// public\r\n\tcamera: Camera;\r\n\tclearColour: { r: number; g: number; b: number; a: number };\r\n\r\n\tscreenCaptureNextFrame: boolean;\r\n\r\n\t// ---- Post processing toggles ----\r\n\tuseCrt: boolean;\r\n\tuseBloom: boolean;\r\n\t// ---------------------------------\r\n\r\n\t// private\r\n\tprivate textureStore: TextureStore;\r\n\tprivate resolutionWidth: number;\r\n\tprivate resolutionHeight: number;\r\n\r\n\t// ---- Shadows ----\r\n\tprivate directionalShadowRenderPass: DirectionalShadowRenderPass;\r\n\tprivate pointShadowRenderPass: PointShadowRenderPass;\r\n\t// -----------------\r\n\r\n\t// ---- Deferred rendering ----\r\n\tprivate geometryRenderPass: GeometryRenderPass;\r\n\tprivate lightingRenderPass: LightingRenderPass;\r\n\t// ----------------------------\r\n\r\n\t// ---- Particles ----\r\n\tprivate particleFramebuffer: Framebuffer;\r\n\tprivate particleRenderPass: ParticleRenderPass;\r\n\t// -------------------\r\n\r\n\t// ---- Skybox ----\r\n\tprivate useSkybox: boolean;\r\n\tprivate skyboxRenderPass: SkyboxRenderPass;\r\n\t// ----------------\r\n\r\n\t// ---- Volumetric God Rays ----\r\n\tprivate volumetricGodRayPass: VolumetricGodRayPass;\r\n\t// -----------------------------\r\n\r\n\t// ---- Post processing ----\r\n\t// Crt effect\r\n\tprivate crtFramebuffer: Framebuffer;\r\n\tprivate crtRenderPass: CRTRenderPass;\r\n\r\n\t// Bloom\r\n\tprivate bloomExtractionInputFramebuffer: Framebuffer;\r\n\tprivate bloomRenderPass: BloomRenderPass;\r\n\t// -------------------------\r\n\r\n\t// Finished output\r\n\tprivate finishedFramebuffer: Framebuffer;\r\n\tprivate finishedOutputRenderPass: FinishedOutputRenderPass;\r\n\r\n\tscene: Scene;\r\n\r\n\tconstructor(textureStore: TextureStore, scene: Scene) {\r\n\t\tthis.textureStore = textureStore;\r\n\t\tthis.scene = scene;\r\n\r\n\t\tthis.camera = new Camera();\r\n\t\tthis.resolutionWidth = windowInfo.resolutionWidth;\r\n\t\tthis.resolutionHeight = windowInfo.resolutionHeight;\r\n\r\n\t\t// ---- Shadows ----\r\n\t\tthis.directionalShadowRenderPass = new DirectionalShadowRenderPass();\r\n\t\tthis.pointShadowRenderPass = new PointShadowRenderPass();\r\n\t\t// -----------------\r\n\r\n\t\t// ---- Deferred rendering ----\r\n\t\tthis.geometryRenderPass = new GeometryRenderPass();\r\n\r\n\t\tlet textureArray = new Array<Texture>();\r\n\t\tfor (\r\n\t\t\tlet i = 0;\r\n\t\t\ti < this.geometryRenderPass.outputFramebuffer.textures.length;\r\n\t\t\ti++\r\n\t\t) {\r\n\t\t\ttextureArray.push(this.geometryRenderPass.outputFramebuffer.textures[i]);\r\n\t\t}\r\n\t\ttextureArray.push(this.directionalShadowRenderPass.shadowBuffer.depthTexture);\r\n\t\tthis.lightingRenderPass = new LightingRenderPass(textureArray);\r\n\t\t// ----------------------------\r\n\r\n\t\t// ---- Particles ----\r\n\t\tthis.particleFramebuffer = new Framebuffer(\r\n\t\t\tthis.resolutionWidth,\r\n\t\t\tthis.resolutionHeight,\r\n\t\t\t[new Texture(false), new Texture(false, gl.R32F, gl.RED, gl.FLOAT)],\r\n\t\t\tnull\r\n\t\t);\r\n\t\tthis.particleRenderPass = new ParticleRenderPass(\r\n\t\t\tthis.particleFramebuffer.textures\r\n\t\t);\r\n\t\t// -------------------\r\n\r\n\t\t// ---- Skybox ----\r\n\t\tthis.useSkybox = false;\r\n\t\tthis.skyboxRenderPass = new SkyboxRenderPass();\r\n\t\t// ----------------\r\n\r\n\t\t// ---- Volumetric God Rays ----\r\n\t\tthis.volumetricGodRayPass = new VolumetricGodRayPass();\r\n\t\t// -----------------------------\r\n\r\n\t\t// ---- Post processing ----\r\n\t\t// Crt effect\r\n\t\tthis.useCrt = options.useCrt;\r\n\t\tthis.crtFramebuffer = new Framebuffer(\r\n\t\t\tthis.resolutionWidth,\r\n\t\t\tthis.resolutionHeight,\r\n\t\t\t[new Texture(false)],\r\n\t\t\tnull\r\n\t\t);\r\n\r\n\t\tthis.crtRenderPass = new CRTRenderPass(this.crtFramebuffer.textures);\r\n\r\n\t\t// Bloom\r\n\t\tthis.bloomExtractionInputFramebuffer = new Framebuffer(\r\n\t\t\twindowInfo.resolutionWidth,\r\n\t\t\twindowInfo.resolutionHeight,\r\n\t\t\t[new Texture(false)],\r\n\t\t\tnull\r\n\t\t);\r\n\t\tthis.bloomRenderPass = new BloomRenderPass(\r\n\t\t\tthis.bloomExtractionInputFramebuffer.textures\r\n\t\t);\r\n\t\tthis.useBloom = options.useBloom;\r\n\t\t// -------------------------¨\r\n\r\n\t\tthis.finishedFramebuffer = new Framebuffer(\r\n\t\t\twindowInfo.resolutionWidth,\r\n\t\t\twindowInfo.resolutionHeight,\r\n\t\t\t[new Texture(false)],\r\n\t\t\tnull\r\n\t\t);\r\n\r\n\t\tthis.finishedOutputRenderPass = new FinishedOutputRenderPass(\r\n\t\t\tthis.finishedFramebuffer.textures\r\n\t\t);\r\n\r\n\t\tthis.screenCaptureNextFrame = false;\r\n\r\n\t\tthis.initGL();\r\n\t}\r\n\r\n\tinitGL() {\r\n\t\tthis.clearColour = { r: 0.15, g: 0.1, b: 0.1, a: 1.0 };\r\n\t\tgl.clearColor(\r\n\t\t\tthis.clearColour.r,\r\n\t\t\tthis.clearColour.g,\r\n\t\t\tthis.clearColour.b,\r\n\t\t\tthis.clearColour.a\r\n\t\t);\r\n\r\n\t\t// Enable depth test\r\n\t\tgl.enable(gl.DEPTH_TEST);\r\n\r\n\t\t//Enable alpha blending\r\n\t\t// gl.enable(gl.BLEND);\r\n\t\t// gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\r\n\t\tgl.disable(gl.BLEND);\r\n\r\n\t\t// Disable faceculling\r\n\t\tgl.cullFace(gl.BACK);\r\n\t\tgl.disable(gl.CULL_FACE);\r\n\t}\r\n\r\n\treportCanvasResize(x: number, y: number) {\r\n\t\tthis.resolutionWidth = x;\r\n\t\tthis.resolutionHeight = y;\r\n\t\tthis.geometryRenderPass.setResolution(x, y);\r\n\t\tthis.particleFramebuffer.setProportions(x, y);\r\n\t\tthis.crtFramebuffer.setProportions(x, y);\r\n\t\tthis.finishedFramebuffer.setProportions(x, y);\r\n\r\n\t\tthis.bloomExtractionInputFramebuffer.setProportions(x, y);\r\n\t\tthis.bloomRenderPass.setResolution(x, y);\r\n\t}\r\n\r\n\tsetSkybox(path: string) {\r\n\t\tthis.skyboxRenderPass.setSkybox(this.textureStore.getCubeMap(path));\r\n\t\t// this.skyboxRenderPass.setSkybox(this.scene.pointLights[0].pointShadowDepthMap);\r\n\t\tthis.useSkybox = true;\r\n\t}\r\n\r\n\tprivate takeScreenshot(screenshotName: string) {\r\n\t\tvar offscreenCanvas = document.createElement(\"canvas\");\r\n\t\toffscreenCanvas.width = gl.canvas.width;\r\n\t\toffscreenCanvas.height = gl.canvas.height;\r\n\t\tvar ctx = offscreenCanvas.getContext(\"2d\");\r\n\r\n\t\tctx.drawImage(gl.canvas,0,0);\r\n\r\n\t\tconst saveBlob = (function() {\r\n\t\t\tconst a = document.createElement('a');\r\n\t\t\tdocument.body.appendChild(a);\r\n\t\t\ta.style.display = 'none';\r\n\t\t\treturn function saveData(blob, fileName) {\r\n\t\t\t   const url = window.URL.createObjectURL(blob);\r\n\t\t\t   a.href = url;\r\n\t\t\t   a.download = fileName;\r\n\t\t\t   a.click();\r\n\t\t\t};\r\n\t\t  }());\r\n\r\n\t\toffscreenCanvas.toBlob((blob) => {\r\n\t\t\tsaveBlob(blob, screenshotName);\r\n\t\t})\r\n\t}\r\n\r\n\tdraw(saveScreenshot: boolean = false, screenshotName: string = \"screencapture\") {\r\n\t\tif (\r\n\t\t\tthis.resolutionWidth != windowInfo.resolutionWidth ||\r\n\t\t\tthis.resolutionHeight != windowInfo.resolutionHeight\r\n\t\t) {\r\n\t\t\tthis.reportCanvasResize(\r\n\t\t\t\twindowInfo.resolutionWidth,\r\n\t\t\t\twindowInfo.resolutionHeight\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tgl.enable(gl.DEPTH_TEST);\r\n\r\n\t\t// ---- Shadow pass ----\r\n\t\tthis.directionalShadowRenderPass.draw(this.scene, this.camera);\r\n\t\tthis.pointShadowRenderPass.draw(this.scene);\r\n\t\t// ---------------------\r\n\r\n\t\t// ---- Geometry pass ----\r\n\t\tthis.geometryRenderPass.draw(this.scene, this.camera);\r\n\t\t// -----------------------\r\n\r\n\t\t// Geometry pass over, start rendering to the particle framebuffer\r\n\t\t// this.particleFramebuffer.bind(gl.DRAW_FRAMEBUFFER);\r\n\t\tthis.finishedFramebuffer.bind(gl.DRAW_FRAMEBUFFER);\r\n\r\n\t\t// Clear the output with the actual clear colour we have set\r\n\t\tgl.clearColor(\r\n\t\t\tthis.clearColour.r,\r\n\t\t\tthis.clearColour.g,\r\n\t\t\tthis.clearColour.b,\r\n\t\t\tthis.clearColour.a\r\n\t\t);\r\n\t\tgl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT | gl.STENCIL_BUFFER_BIT);\r\n\r\n\t\t// ---- Lighting pass ----\r\n\t\tthis.lightingRenderPass.draw(this.scene, this.camera);\r\n\t\t// -----------------------\r\n\r\n\t\t// Copy the depth buffer information from the gBuffer to the current depth buffer\r\n\t\tthis.geometryRenderPass.outputFramebuffer.bind(gl.READ_FRAMEBUFFER);\r\n\t\tgl.blitFramebuffer(\r\n\t\t\t0,\r\n\t\t\t0,\r\n\t\t\tthis.resolutionWidth,\r\n\t\t\tthis.resolutionHeight,\r\n\t\t\t0,\r\n\t\t\t0,\r\n\t\t\tthis.resolutionWidth,\r\n\t\t\tthis.resolutionHeight,\r\n\t\t\tgl.DEPTH_BUFFER_BIT,\r\n\t\t\tgl.NEAREST\r\n\t\t);\r\n\r\n\t\t// ---- Skybox ----\r\n\t\tif (this.useSkybox) {\r\n\t\t\tthis.skyboxRenderPass.draw(this.camera);\r\n\t\t}\r\n\t\t// ----------------\r\n\r\n\t\t// ---- Particles ----\r\n\t\t// this.particleRenderPass.draw(this.scene, this.camera);\r\n\t\t// -------------------\r\n\r\n\t\t// Setup appropriate post processing framebuffer (or to finished directly)\r\n\t\t// if (this.useBloom) {\r\n\t\t// \tthis.volumetricGodRayPass.outputBuffer =\r\n\t\t// \t\tthis.bloomExtractionInputFramebuffer;\r\n\t\t// } else if (this.useCrt) {\r\n\t\t// \tthis.volumetricGodRayPass.outputBuffer = this.crtFramebuffer;\r\n\t\t// } else {\r\n\t\t// \tthis.volumetricGodRayPass.outputBuffer = this.finishedFramebuffer;\r\n\t\t// }\r\n\r\n\t\t// ---- Volumetric God Rays ----\r\n\t\tthis.volumetricGodRayPass.draw(this.scene, this.camera);\r\n\t\t// -----------------------------\r\n\r\n\t\t// ---- Post processing ----\r\n\t\tif (this.useBloom) {\r\n\t\t\tif (this.useCrt) {\r\n\t\t\t\tthis.bloomRenderPass.outputFramebuffer = this.crtFramebuffer;\r\n\t\t\t} else {\r\n\t\t\t\tthis.bloomRenderPass.outputFramebuffer = null;\r\n\t\t\t}\r\n\t\t\tthis.bloomRenderPass.draw();\r\n\t\t}\r\n\r\n\t\tif (this.useCrt) {\r\n\t\t\tthis.crtRenderPass.draw();\r\n\t\t}\r\n\t\t// -------------------------\r\n\r\n\t\tif (!this.useCrt && !this.useBloom) {\r\n\t\t\tthis.finishedOutputRenderPass.draw();\r\n\t\t}\r\n\r\n\t\tif (this.screenCaptureNextFrame || saveScreenshot) {\r\n\t\t\tthis.takeScreenshot(screenshotName);\r\n\t\t\tthis.screenCaptureNextFrame = false;\r\n\t\t}\r\n\t}\r\n}\r\n","import { gl } from \"../../main\";\r\nimport MeshStore from \"../AssetHandling/MeshStore\";\r\nimport TextureStore from \"../AssetHandling/TextureStore\";\r\nimport DirectionalLight from \"./Lighting/DirectionalLight\";\r\nimport PointLight from \"./Lighting/PointLight\";\r\nimport GraphicsBundle from \"../Objects/GraphicsBundle\";\r\nimport GrassSpawner from \"../Objects/GraphicsObjects/GrassSpawner\";\r\nimport ParticleSpawner from \"../Objects/GraphicsObjects/ParticleSpawner\";\r\nimport PhongQuad from \"../Objects/GraphicsObjects/PhongQuad\";\r\nimport Skybox from \"../Objects/GraphicsObjects/Skybox\";\r\nimport { geometryPass } from \"./ShaderPrograms/DeferredRendering/GeometryPass\";\r\nimport { lightingPass } from \"./ShaderPrograms/DeferredRendering/LightingPass\";\r\nimport { grassShaderProgram } from \"./ShaderPrograms/GrassShaderProgram\";\r\nimport { particleShaderProgram } from \"./ShaderPrograms/ParticleShaderProgram\";\r\nimport ShaderProgram from \"./ShaderPrograms/ShaderProgram\";\r\n\r\nexport default class Scene {\r\n\t// ---- Graphics objects ----\r\n\tprivate graphicBundles: Array<GraphicsBundle>;\r\n\tprivate grassSpawners: Array<GraphicsBundle>;\r\n\t// --------------------------\r\n\r\n\t// ---- Lights ----\r\n\tdirectionalLight: DirectionalLight;\r\n\tpointLights: Array<PointLight>;\r\n\t// ----------------\r\n\r\n\t// ---- Particles ----\r\n\tparticleSpawners: Array<ParticleSpawner>;\r\n\t// -------------------\r\n\r\n\t// ---- Skybox ----\r\n\tskybox: Skybox;\r\n\t// ----------------\r\n\r\n\tprivate textureStore: TextureStore;\r\n\tprivate meshStore: MeshStore;\r\n\r\n\tconstructor(textureStore: TextureStore, meshStore: MeshStore) {\r\n\t\tthis.textureStore = textureStore;\r\n\t\tthis.meshStore = meshStore;\r\n\r\n\t\t// ---- Graphics objects ----\r\n\t\tthis.graphicBundles = new Array<GraphicsBundle>();\r\n\t\tthis.grassSpawners = new Array<GraphicsBundle>();\r\n\t\t// --------------------------\r\n\r\n\t\t// ---- Lighting ----\r\n\t\tthis.directionalLight = new DirectionalLight(gl, lightingPass);\r\n\t\tthis.pointLights = new Array<PointLight>();\r\n\t\t// ------------------\r\n\r\n\t\t// ---- Particles ----\r\n\t\tthis.particleSpawners = new Array<ParticleSpawner>();\r\n\t\t// -------------------\r\n\t}\r\n\r\n\tgetNewPhongQuad(diffusePath: string, specularPath: string): GraphicsBundle {\r\n\t\tconst length = this.graphicBundles.push(\r\n\t\t\tnew GraphicsBundle(\r\n\t\t\t\tthis.textureStore.getTexture(diffusePath),\r\n\t\t\t\tthis.textureStore.getTexture(specularPath),\r\n\t\t\t\tnew PhongQuad(geometryPass)\r\n\t\t\t)\r\n\t\t);\r\n\t\treturn this.graphicBundles[length - 1];\r\n\t}\r\n\r\n\tgetNewMesh(\r\n\t\tmeshPath: string,\r\n\t\tdiffusePath: string,\r\n\t\tspecularPath: string\r\n\t): GraphicsBundle {\r\n\t\tconst length = this.graphicBundles.push(\r\n\t\t\tnew GraphicsBundle(\r\n\t\t\t\tthis.textureStore.getTexture(diffusePath),\r\n\t\t\t\tthis.textureStore.getTexture(specularPath),\r\n\t\t\t\tthis.meshStore.getMesh(meshPath)\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\treturn this.graphicBundles[length - 1];\r\n\t}\r\n\r\n\tgetNewHeightMap(\r\n\t\theightmapPath: string,\r\n\t\tdiffusePath: string,\r\n\t\tspecularPath: string\r\n\t): GraphicsBundle {\r\n\t\tconst length = this.graphicBundles.push(\r\n\t\t\tnew GraphicsBundle(\r\n\t\t\t\tthis.textureStore.getTexture(diffusePath),\r\n\t\t\t\tthis.textureStore.getTexture(specularPath),\r\n\t\t\t\tthis.meshStore.getHeightmap(heightmapPath)\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\treturn this.graphicBundles[length - 1];\r\n\t}\r\n\r\n\tgetNewParticleSpawner(\r\n\t\ttexturePath: string,\r\n\t\tnumberOfStartingParticles: number = 0\r\n\t): ParticleSpawner {\r\n\t\tlet length = this.particleSpawners.push(\r\n\t\t\tnew ParticleSpawner(\r\n\t\t\t\tparticleShaderProgram,\r\n\t\t\t\tthis.textureStore.getTexture(texturePath),\r\n\t\t\t\tnumberOfStartingParticles\r\n\t\t\t)\r\n\t\t);\r\n\t\treturn this.particleSpawners[length - 1];\r\n\t}\r\n\r\n\tgetNewGrassSpawner(\r\n\t\tdiffuseTexturePath: string,\r\n\t\tspecularTexturePath: string,\r\n\t\tnumberOfStartingParticles: number = 0\r\n\t): GraphicsBundle {\r\n\t\tlet length = this.grassSpawners.push(\r\n\t\t\tnew GraphicsBundle(\r\n\t\t\t\tthis.textureStore.getTexture(diffuseTexturePath),\r\n\t\t\t\tthis.textureStore.getTexture(specularTexturePath),\r\n\t\t\t\tnew GrassSpawner(grassShaderProgram, numberOfStartingParticles)\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\treturn this.grassSpawners[length - 1];\r\n\t}\r\n\r\n\tgetNewPointLight(): PointLight {\r\n\t\tconst length = this.pointLights.push(new PointLight());\r\n\t\treturn this.pointLights[length - 1];\r\n\t}\r\n\r\n\tgetDirectionalLight(): DirectionalLight {\r\n\t\treturn this.directionalLight;\r\n\t}\r\n\r\n\tdeleteGraphicsBundle(object: GraphicsBundle) {\r\n\t\tthis.graphicBundles = this.graphicBundles.filter((o) => object !== o);\r\n\t}\r\n\r\n\tdeletePointLight(light: PointLight) {\r\n\t\tthis.pointLights = this.pointLights.filter((l) => light !== l);\r\n\t}\r\n\r\n\tdeleteParticleSpawner(particleSpawner: ParticleSpawner) {\r\n\t\tthis.particleSpawners = this.particleSpawners.filter(\r\n\t\t\t(ps) => particleSpawner !== ps\r\n\t\t);\r\n\t}\r\n\r\n\trenderScene(\r\n\t\tshaderProgram: ShaderProgram,\r\n\t\tbindSpecialTextures: boolean = true\r\n\t) {\r\n\t\tfor (let bundle of this.graphicBundles) {\r\n\t\t\tbundle.graphicsObject.shaderProgram = shaderProgram;\r\n\t\t\tbundle.draw(bindSpecialTextures);\r\n\t\t}\r\n\t}\r\n\r\n\trenderGrass(\r\n\t\tshaderProgram: ShaderProgram,\r\n\t\tbindSpecialTextures: boolean = true\r\n\t) {\r\n\t\tfor (let bundle of this.grassSpawners) {\r\n\t\t\tbundle.graphicsObject.shaderProgram = shaderProgram;\r\n\t\t\tbundle.draw(bindSpecialTextures);\r\n\t\t}\r\n\t}\r\n}\r\n","import { gl } from \"../../../../main\";\r\nimport ShaderProgram from \"../ShaderProgram\";\r\n\r\nconst geometryVertexShaderSrc: string = `#version 300 es\r\n// If inputs change, also update GeometryPass::setupVertexAttributePointers to match\r\nlayout (location = 0) in vec3 inPosition;\r\nlayout (location = 1) in vec3 inNormal;\r\nlayout (location = 2) in vec2 inTexCoords;\r\n\r\n// If uniforms change, also update PhongShaderProgram to match\r\nuniform mat4 modelMatrix;\r\nuniform mat4 viewProjMatrix;\r\nuniform mat4 textureMatrix;\r\n\r\nout vec3 fragPos;\r\nout vec3 fragNormal;\r\nout vec2 texCoords;\r\n\r\nvoid main() {\r\n    vec4 worldPos = modelMatrix * vec4(inPosition, 1.0);\r\n\ttexCoords = vec2(textureMatrix * vec4(inTexCoords, 0.0, 1.0));\r\n\r\n\t// Calculate normal matrix, should be done on CPU but I can't be bothered with implementing inverse of a matrix and don't want to find a good lib atm. Have found a lib now TODO: Move this to CPU\r\n\tmat3 normalMatrix = mat3(modelMatrix);\r\n\tnormalMatrix = inverse(normalMatrix);\r\n\tnormalMatrix = transpose(normalMatrix);\r\n\r\n\tfragNormal = normalize(normalMatrix * inNormal);\r\n\tfragPos = worldPos.xyz;\r\n\r\n    gl_Position = viewProjMatrix * worldPos;\r\n}`;\r\n\r\nexport const geometryFragmentShaderSrc: string = `#version 300 es\r\nprecision highp float;\r\n\r\nin vec3 fragPos;\r\nin vec3 fragNormal;\r\nin vec2 texCoords;\r\n\r\nlayout (location = 0) out vec4 gPosition;\r\nlayout (location = 1) out vec4 gNormal;\r\nlayout (location = 2) out vec4 gColourSpec;\r\nlayout (location = 3) out vec4 gEmission;\r\n\r\nstruct Material {\r\n\tsampler2D diffuse;\r\n\tsampler2D specular;\r\n\tsampler2D emission;\r\n};\r\n\r\nuniform Material material;\r\nuniform vec3 emissionColor;\r\n\r\nmat4 thresholdMatrix = mat4(\r\n\t1.0, 9.0, 3.0, 11.0,\r\n\t13.0, 5.0, 15.0, 7.0,\r\n\t4.0, 12.0, 2.0, 10.0,\r\n\t16.0, 8.0, 14.0, 6.0\r\n\t);\r\n\r\nvoid main() {\r\n\tfloat opacity = texture(material.diffuse, texCoords).a;\r\n\r\n\tfloat threshold = thresholdMatrix[int(floor(mod(gl_FragCoord.x, 4.0)))][int(floor(mod(gl_FragCoord.y, 4.0)))] / 17.0;\r\n    if (threshold >= opacity) {\r\n        discard;\r\n    }\r\n\r\n\tvec3 emissionMapValues = texture(material.emission, texCoords).rgb;\r\n\tfloat emissionValue = (emissionMapValues.r + emissionMapValues.g + emissionMapValues.b) / 3.0;\r\n\t\r\n\tgColourSpec.rgb = texture(material.diffuse, texCoords).rgb;\r\n\tif ((emissionColor.r > 0.0 || emissionColor.g > 0.0 || emissionColor.b > 0.0) && emissionValue > 0.0) {\r\n\t\tgEmission.r = emissionColor.r * emissionMapValues.r;\r\n\t\tgEmission.g = emissionColor.g * emissionMapValues.g;\r\n\t\tgEmission.b = emissionColor.b * emissionMapValues.b;\r\n\t}\r\n\telse if (emissionValue > 0.0) {\r\n\t\tgEmission.rgb = emissionMapValues;\r\n\t}\r\n    gColourSpec.a = texture(material.specular, texCoords).r;\r\n\t\r\n\tgPosition.rgb = fragPos;\r\n\tgNormal = vec4(fragNormal, 1.0);\r\n}`;\r\n\r\nclass GeometryPass extends ShaderProgram {\r\n\tconstructor() {\r\n\t\tsuper(\"GeometryPass\", geometryVertexShaderSrc, geometryFragmentShaderSrc);\r\n\r\n\t\tthis.use();\r\n\r\n\t\tthis.setUniformLocation(\"modelMatrix\");\r\n\t\tthis.setUniformLocation(\"viewProjMatrix\");\r\n\t\tthis.setUniformLocation(\"textureMatrix\");\r\n\r\n\t\tthis.setUniformLocation(\"material.diffuse\");\r\n\t\tthis.setUniformLocation(\"material.specular\");\r\n\t\tthis.setUniformLocation(\"material.emission\");\r\n\r\n\t\tthis.setUniformLocation(\"emissionColor\");\r\n\r\n\t\tgl.uniform1i(this.getUniformLocation(\"material.diffuse\")[0], 0);\r\n\t\tgl.uniform1i(this.getUniformLocation(\"material.specular\")[0], 1);\r\n\t\tgl.uniform1i(this.getUniformLocation(\"material.emission\")[0], 2);\r\n\t}\r\n\r\n\tsetupVertexAttributePointers(): void {\r\n\t\t// Change if input layout changes in shaders\r\n\t\tconst stride = 8 * 4;\r\n\t\tgl.vertexAttribPointer(0, 3, gl.FLOAT, false, stride, 0);\r\n\t\tgl.enableVertexAttribArray(0);\r\n\r\n\t\tgl.vertexAttribPointer(1, 3, gl.FLOAT, false, stride, 3 * 4);\r\n\t\tgl.enableVertexAttribArray(1);\r\n\r\n\t\tgl.vertexAttribPointer(2, 2, gl.FLOAT, false, stride, 6 * 4);\r\n\t\tgl.enableVertexAttribArray(2);\r\n\t}\r\n}\r\n\r\nexport let geometryPass = null;\r\n\r\nexport let createGeometryPass = function () {\r\n\tgeometryPass = new GeometryPass();\r\n};\r\n","import ShaderProgram from \"../ShaderProgram\";\r\nimport { screenQuadVertexSrc } from \"../ScreenQuadShaderProgram\";\r\nimport { gl } from \"../../../../main\";\r\n\r\nexport const pointLightsToAllocate: number = 8;\r\nexport let pointShadowsToAllocate: number = 2;\r\n\r\nlet lightingFragmentShaderSrc: string;\r\n\r\nclass LightingPass extends ShaderProgram {\r\n\tconstructor() {\r\n\t\tsuper(\"LightingPass\", screenQuadVertexSrc, lightingFragmentShaderSrc);\r\n\r\n\t\tthis.use();\r\n\r\n\t\tthis.setUniformLocation(\"gPosition\");\r\n\t\tthis.setUniformLocation(\"gNormal\");\r\n\t\tthis.setUniformLocation(\"gColourSpec\");\r\n\t\tthis.setUniformLocation(\"gEmission\");\r\n\t\tthis.setUniformLocation(\"depthMap\");\r\n\r\n\t\tgl.uniform1i(this.getUniformLocation(\"gPosition\")[0], 0);\r\n\t\tgl.uniform1i(this.getUniformLocation(\"gNormal\")[0], 1);\r\n\t\tgl.uniform1i(this.getUniformLocation(\"gColourSpec\")[0], 2);\r\n\t\tgl.uniform1i(this.getUniformLocation(\"gEmission\")[0], 3);\r\n\t\tgl.uniform1i(this.getUniformLocation(\"depthMap\")[0], 4);\r\n\r\n\t\tfor (let i = 0; i < pointShadowsToAllocate; i++) {\r\n\t\t\tthis.setUniformLocation(\"pointDepthMaps[\" + i + \"]\");\r\n\t\t\tgl.uniform1i(this.getUniformLocation(\"pointDepthMaps[\"+ i +\"]\")[0], 5 + i);\r\n\t\t}\r\n\t\t\r\n\t\tfor (let i = 0; i < pointLightsToAllocate; i++) {\r\n\t\t\tthis.setUniformLocation(\"pointLights[\" + i + \"].position\");\r\n\t\t\tthis.setUniformLocation(\"pointLights[\" + i + \"].colour\");\r\n\r\n\t\t\tthis.setUniformLocation(\"pointLights[\" + i + \"].constant\");\r\n\t\t\tthis.setUniformLocation(\"pointLights[\" + i + \"].linear\");\r\n\t\t\tthis.setUniformLocation(\"pointLights[\" + i + \"].quadratic\");\r\n\r\n\t\t\tthis.setUniformLocation(\"pointLights[\" + i + \"].pointDepthMapIndex\");\r\n\t\t}\r\n\r\n\t\tthis.setUniformLocation(\"directionalLight.direction\");\r\n\t\tthis.setUniformLocation(\"directionalLight.colour\");\r\n\t\tthis.setUniformLocation(\"directionalLight.ambientMultiplier\");\r\n\t\tthis.setUniformLocation(\"nrOfPointLights\");\r\n\t\tthis.setUniformLocation(\"camPos\");\r\n\t\tthis.setUniformLocation(\"lightSpaceMatrix\");\r\n\t}\r\n\r\n\tsetupVertexAttributePointers(): void {\r\n\t\t// Change if input layout changes in shaders\r\n\t\tconst stride = 4 * 4;\r\n\t\tgl.vertexAttribPointer(0, 2, gl.FLOAT, false, stride, 0);\r\n\t\tgl.enableVertexAttribArray(0);\r\n\r\n\t\tgl.vertexAttribPointer(1, 2, gl.FLOAT, false, stride, 2 * 4);\r\n\t\tgl.enableVertexAttribArray(1);\r\n\t}\r\n}\r\n\r\nexport let lightingPass = null;\r\n\r\nexport let createLightingPass = function () {\r\n\tpointShadowsToAllocate = Math.min(pointShadowsToAllocate, gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS) - 5); \r\n\r\n\tlightingFragmentShaderSrc =\r\n`#version 300 es\r\nprecision highp float;\r\n\r\n#define NR_POINT_LIGHTS ` +\r\n\tpointLightsToAllocate +\r\n\t`\r\n#define NR_POINT_SHADOWS ` +\r\n\tpointShadowsToAllocate +\r\n\t`\r\n\r\nin vec2 texCoords;\r\n\r\nlayout (location = 0) out vec4 final_colour;\r\nlayout (location = 1) out float FragOpacity;\r\n\r\nuniform sampler2D gPosition;\r\nuniform sampler2D gNormal;\r\nuniform sampler2D gColourSpec;\r\nuniform sampler2D gEmission;\r\nuniform sampler2D depthMap;\r\nuniform samplerCube pointDepthMaps[NR_POINT_SHADOWS];\r\n\r\nstruct PointLight {\r\n\tvec3 position;\r\n\tvec3 colour;\r\n\r\n\tfloat constant;\r\n\tfloat linear;\r\n\tfloat quadratic;\r\n\r\n\tint pointDepthMapIndex;\r\n};\r\n\r\nstruct DirectionalLight {\r\n\tvec3 direction;\r\n\tvec3 colour;\r\n\tfloat ambientMultiplier;\r\n};\r\n\r\nuniform DirectionalLight directionalLight;\r\nuniform PointLight pointLights[NR_POINT_LIGHTS];\r\nuniform int nrOfPointLights;\r\nuniform vec3 camPos; //Used for specular lighting\r\nuniform mat4 lightSpaceMatrix; // Used for shadow fragment position\r\n\r\nvec3 CalcDirectionalLight(DirectionalLight light, vec3 normal, vec3 cameraDir, vec3 diffuse, float specular, float shininess, vec4 lightSpaceFragPos);\r\nvec3 CalcPointLight(PointLight light, vec3 normal, vec3 fragPos, vec3 cameraDir, vec3 diffuse, float specular, float shininess);\r\nfloat CalcShadow(vec4 lightSpaceFragPos, vec3 normal);\r\nfloat CalcPointShadow(vec3 fragPos, PointLight light);\r\n\r\nvoid main() {\r\n\t// Discard fragment if normal alpha is 0\r\n\tvec4 fragNormalWithAlpha = texture(gNormal, texCoords);\r\n\tif (fragNormalWithAlpha.a <= 0.0001) {\r\n\t\tdiscard;\r\n\t}\r\n\t\r\n\tvec3 fragPos = texture(gPosition, texCoords).rgb;\r\n\tvec3 fragNormal = fragNormalWithAlpha.rgb;\r\n\tfloat shininess = 32.0f;\r\n\tvec3 diffuse = texture(gColourSpec, texCoords).rgb;\r\n\tfloat specular = texture(gColourSpec, texCoords).a;\r\n\tvec3 emission = texture(gEmission, texCoords).rgb;\r\n\tvec4 lightSpaceFragPos = (lightSpaceMatrix * vec4(fragPos, 1.0f));\r\n\t\r\n\tvec3 cameraDir = normalize(camPos - fragPos); //Direction vector from fragment to camera\r\n\t\r\n\t// vec3 result = fragNormal;\r\n\t// vec3 result = diffuse;\r\n\t// vec3 result = vec3(specular, specular, specular);\r\n    vec3 result = vec3(0.0f);\r\n\tresult += CalcDirectionalLight(directionalLight, fragNormal, cameraDir, diffuse, specular, shininess, lightSpaceFragPos);\r\n\r\n\tfor (int i = 0; i < nrOfPointLights; i++) {\r\n\t\tresult += CalcPointLight(pointLights[i], fragNormal, fragPos, cameraDir, diffuse, specular, shininess);\r\n\t}\r\n\r\n\tfinal_colour = vec4(result + emission, 1.0f); // Set colour of fragment. Since we use screen door transparency, do not use alpha value\r\n\tFragOpacity = 0.0;\r\n}\r\n\r\n// Calculates the colour when using a directional light\r\nvec3 CalcDirectionalLight(DirectionalLight light, vec3 normal, vec3 cameraDir, vec3 diffuse, float specular, float shininess, vec4 lightSpaceFragPos) {\r\n\tvec3 lightDir = normalize(-light.direction); //light direction from the fragment position\r\n\r\n\t// Diffuse shading\r\n\tfloat diff = max(dot(normal, lightDir), 0.0);\r\n\tfloat oppositeDiff = min(dot(normal, lightDir), 0.0);\r\n\toppositeDiff += 1.0;\r\n\toppositeDiff *= 0.2;\r\n\r\n\t// Specular shading\r\n\tvec3 reflectDir = reflect(-lightDir, normal);\r\n\tfloat spec = pow(max(dot(cameraDir, reflectDir), 0.0), shininess);\r\n\r\n\t// Combine results\t\r\n\tvec3 ambient = diffuse * light.ambientMultiplier; //Ambient lighting\r\n\tvec3 finalDiffuse = light.colour * diff * diffuse;\r\n\tvec3 finalSpecular = light.colour * spec * specular;\r\n\t\r\n\tfloat shadow = CalcShadow(lightSpaceFragPos, normal);\r\n\tvec3 lighting = (ambient + (1.1f - shadow) * (finalDiffuse + finalSpecular));\r\n\tlighting += oppositeDiff * ambient;\r\n\treturn lighting;\r\n}\r\n\r\nfloat CalcShadow(vec4 lightSpaceFragPos, vec3 normal) {\r\n\t// perform perspective divide\r\n    vec3 projCoords = lightSpaceFragPos.xyz / lightSpaceFragPos.w;\r\n\r\n    // transform to [0,1] range\r\n    projCoords = projCoords * 0.5 + 0.5;\r\n\r\n\tif (projCoords.z > 1.0) {\r\n\t\treturn 0.0;\r\n\t}\r\n\r\n    // get closest depth value from light's perspective (using [0,1] range fragPosLight as coords)\r\n    float closestDepth = texture(depthMap, projCoords.xy).r; \r\n\r\n    // get depth of current fragment from light's perspective\r\n    float currentDepth = projCoords.z;\r\n\r\n    // check whether current frag pos is in shadow\r\n\t// float bias = 0.001;\r\n\tfloat bias = max(0.005 * (1.0 - dot(normal, directionalLight.direction)), 0.005);\r\n\t// float bias = 0.0;\r\n\t\r\n\tfloat shadow = 0.0;\r\n\tivec2 textureSize = textureSize(depthMap, 0);\r\n\tvec2 texelSize = vec2(1.0 / float(textureSize.x), 1.0 / float(textureSize.y));\r\n\tfor(int x = -1; x <= 1; ++x)\r\n\t{\r\n\t\tfor(int y = -1; y <= 1; ++y)\r\n\t\t{\r\n\t\t\tfloat pcfDepth = texture(depthMap, projCoords.xy + vec2(x, y) * texelSize).r; \r\n\t\t\tshadow += currentDepth - bias > pcfDepth ? 1.0 : 0.0;\r\n\t\t}    \r\n\t}\r\n\tshadow = shadow / 9.0;\r\n\r\n    return shadow;\r\n}\r\n\r\n// Calculates the colour when using a point light.\r\nvec3 CalcPointLight(PointLight light, vec3 normal, vec3 fragPos, vec3 cameraDir, vec3 diffuse, float specular, float shininess) {\r\n\tif (light.pointDepthMapIndex >= 0 && light.pointDepthMapIndex < NR_POINT_SHADOWS && CalcPointShadow(fragPos, light) == 1.0) {\r\n\t\treturn vec3(0.0, 0.0, 0.0);\r\n\t} \r\n\r\n\tvec3 lightDir = normalize(light.position - fragPos); //light direction from the fragment position\r\n\r\n\t// Diffuse shading\r\n\tfloat diff = max(dot(normal, lightDir), 0.0);\r\n\r\n\t// Specular shading\r\n\tvec3 reflectDir = reflect(-lightDir, normal);\r\n\tfloat spec = pow(max(dot(cameraDir, reflectDir), 0.0), shininess);\r\n\r\n\t// Attenuation\r\n\tfloat distance = length(light.position - fragPos);\r\n\tfloat attenuation = 1.0f / (light.constant + light.linear * distance + light.quadratic * (distance * distance));\r\n\t\r\n\t// Combine results\r\n\tvec3 finalDiffuse = light.colour * diff * diffuse;\r\n\tvec3 finalSpecular = light.colour * spec * specular;\r\n\tfinalDiffuse *= attenuation;\r\n\tfinalSpecular *= attenuation;\r\n\treturn finalDiffuse + finalSpecular;\r\n}\r\n\r\nconst float far_plane = 100.0;\r\n\r\nfloat CalcPointShadow(vec3 fragPos, PointLight light) {\r\n\t// get vector between fragment position and light position\r\n    vec3 fragToLight = fragPos - light.position;\r\n\tfragToLight.y *= -1.0;\r\n\tfragToLight.z *= -1.0;\r\n    // use the light to fragment vector to sample from the depth map\r\n    float closestDepth = 1.0;`\r\n\t// Below is ugly, but I have to unroll the loop to be able to acces the pointDepthMaps array with a compile time index, as run-time index is not allowed to access a sampler\r\n\tfor (let i = 0; i < pointShadowsToAllocate; i++) {\r\n\t\tif (i == 0) {\r\n\t\t\tlightingFragmentShaderSrc += `\r\n\tif (light.pointDepthMapIndex == ` + i + `) {\r\n\t\tclosestDepth = texture(pointDepthMaps[` + i + `], fragToLight).r;\r\n\t}\r\n\t`\r\n\t\t} else {\r\n\t\t\tlightingFragmentShaderSrc += `\r\n\telse if (light.pointDepthMapIndex == ` + i + `) {\r\n\t\tclosestDepth = texture(pointDepthMaps[` + i + `], fragToLight).r;\r\n\t}\r\n\t`\r\n\t\t}\r\n\t}\r\n\t\r\n\tlightingFragmentShaderSrc += `\r\n    // it is currently in linear range between [0,1]. Re-transform back to original value\r\n    closestDepth *= far_plane;\r\n    // now get current linear depth as the length between the fragment and light position\r\n    float currentDepth = length(fragToLight);\r\n    // now test for shadows\r\n    float bias = 0.0;\r\n    float shadow = currentDepth -  bias > closestDepth ? 1.0 : 0.0;\r\n\r\n    return shadow;\r\n}\r\n`;\r\n\r\n\tlightingPass = new LightingPass();\r\n};\r\n","import { gl } from \"../../../main\";\nimport { geometryFragmentShaderSrc } from \"./DeferredRendering/GeometryPass\";\nimport ShaderProgram from \"./ShaderProgram\";\n\nconst grassVertexShaderSrc: string = `#version 300 es\n\nlayout (location = 0) in vec2 inVertexPosition;\nlayout (location = 1) in vec2 inTexCoords;\n\n// Instanced attributes starts here\nlayout (location = 2) in vec3 inPos;\nlayout (location = 3) in float inSize;\nlayout (location = 4) in vec3 inTipOffset;\n\nuniform mat4 viewProjMatrix;\nuniform vec3 cameraPos;\nuniform float currentTime;\n\nout vec3 fragPos;\nout vec3 fragNormal;\nout vec2 texCoords;\n\nvoid main() {\n    // Billboarding\n    vec3 camDir = cameraPos - inPos;\n    vec3 rightVec = normalize(cross(vec3(0.0, 1.0, 0.0), camDir));\n\t// fragNormal = vec3(-rightVec.z, 0.0, rightVec.x);\n    vec3 upVec = vec3(0.0, 1.0, 0.0);\n\tfragNormal = upVec;\n\tfloat size = inSize + length(camDir) * 0.0;\n    rightVec = rightVec * inVertexPosition.x * size;\n    upVec = upVec * inVertexPosition.y * size;\n\tfragPos = vec3(rightVec + upVec + inPos + (inTipOffset + vec3(sin(currentTime + inPos.x) * 0.1, 0.0, 0.0)) * inVertexPosition.y);\n    gl_Position = viewProjMatrix * vec4(fragPos, 1.0);\n\n    // gl_Position = viewProjMatrix * vec4(vec3(inVertexPosition, 0.0) * size + currentPos, 1.0); // No billboarding\n    texCoords = inTexCoords;\n}`;\n\nclass GrassShaderProgram extends ShaderProgram {\n\tconstructor() {\n\t\tsuper(\n\t\t\t\"GrassShaderProgram\",\n\t\t\tgrassVertexShaderSrc,\n\t\t\tgeometryFragmentShaderSrc,\n\t\t\tfalse\n\t\t);\n\n\t\tthis.use();\n\n\t\tthis.setUniformLocation(\"texture0\");\n\t\tgl.uniform1i(this.getUniformLocation(\"texture0\")[0], 0);\n\n\t\tthis.setUniformLocation(\"viewProjMatrix\");\n\t\tthis.setUniformLocation(\"cameraPos\");\n\t\tthis.setUniformLocation(\"currentTime\");\n\n\t\tthis.setUniformLocation(\"material.diffuse\");\n\t\tthis.setUniformLocation(\"material.specular\");\n\t\tthis.setUniformLocation(\"material.emission\");\n\n\t\tgl.uniform1i(this.getUniformLocation(\"material.diffuse\")[0], 0);\n\t\tgl.uniform1i(this.getUniformLocation(\"material.specular\")[0], 1);\n\t\tgl.uniform1i(this.getUniformLocation(\"material.emission\")[0], 2);\n\t}\n\n\tsetupVertexAttributePointers(): void {\n\t\t// Change if input layout changes in shaders\n\t\tconst stride = 4 * 4;\n\t\tgl.vertexAttribPointer(0, 2, gl.FLOAT, false, stride, 0);\n\t\tgl.enableVertexAttribArray(0);\n\n\t\tgl.vertexAttribPointer(1, 2, gl.FLOAT, false, stride, 2 * 4);\n\t\tgl.enableVertexAttribArray(1);\n\t}\n\n\tsetupInstancedVertexAttributePointers(): void {\n\t\tconst stride = 7 * 4;\n\t\tgl.vertexAttribPointer(2, 3, gl.FLOAT, false, stride, 0);\n\t\tgl.enableVertexAttribArray(2);\n\t\tgl.vertexAttribDivisor(2, 1);\n\n\t\tgl.vertexAttribPointer(3, 1, gl.FLOAT, false, stride, 3 * 4);\n\t\tgl.enableVertexAttribArray(3);\n\t\tgl.vertexAttribDivisor(3, 1);\n\n\t\tgl.vertexAttribPointer(4, 3, gl.FLOAT, false, stride, 4 * 4);\n\t\tgl.enableVertexAttribArray(4);\n\t\tgl.vertexAttribDivisor(4, 1);\n\t}\n}\n\nexport let grassShaderProgram: GrassShaderProgram = null;\n\nexport let createGrassShaderProgram = function () {\n\tgrassShaderProgram = new GrassShaderProgram();\n};\n","import { gl } from \"../../../main\";\nimport ShaderProgram from \"./ShaderProgram\";\n\nconst particleVertexShaderSrc: string = `#version 300 es\n\nlayout (location = 0) in vec2 inVertexPosition;\nlayout (location = 1) in vec2 inTexCoords;\n\n// Instanced attributes starts here\nlayout (location = 2) in vec3 inStartPosition;\nlayout (location = 3) in float inSize;\nlayout (location = 4) in vec3 inStartVel;\nlayout (location = 5) in float inStartTime;\nlayout (location = 6) in vec3 inConstantAcceleration;\n// layout (location = 7) in float padding;\n\nuniform mat4 viewProjMatrix;\nuniform vec3 cameraPos;\nuniform float currentTime;\nuniform float fadePerSecond;\nuniform float sizeChangePerSecond;\n\nout vec2 texCoords;\nout float alpha;\n\nvoid main() {\n    // Calculate how long this has been alive\n    float lifeTime = currentTime - inStartTime;\n\n    // Calculate current position\n    vec3 currentPos = inStartPosition + (inStartVel * lifeTime + (inConstantAcceleration * lifeTime) * lifeTime) / 2.0;\n\n    // Billboarding\n    vec3 camDir = cameraPos - currentPos;\n    vec3 rightVec = normalize(cross(vec3(0.0, 1.0, 0.0), camDir));\n    vec3 upVec = normalize(cross(camDir, rightVec));\n    rightVec = rightVec * inVertexPosition.x * (inSize + sizeChangePerSecond * lifeTime);\n    upVec = upVec * inVertexPosition.y * (inSize + sizeChangePerSecond * lifeTime);\n    gl_Position = viewProjMatrix * vec4(rightVec + upVec + currentPos, 1.0);\n\n    // gl_Position = viewProjMatrix * vec4(vec3(inVertexPosition, 0.0) * inSize + currentPos, 1.0); // No billboarding\n    texCoords = inTexCoords;\n    alpha = max(1.0 - lifeTime * fadePerSecond, 0.0);\n}`;\n\nconst particleFragmentShaderSrc: string = `#version 300 es\nprecision highp float;\n\nin vec2 texCoords;\nin float alpha;\n\nuniform sampler2D texture0;\n\nlayout (location = 0) out vec4 FragColor;\nlayout (location = 1) out float FragOpacity;\n\nmat4 thresholdMatrix = mat4(\n    1.0, 9.0, 3.0, 11.0,\n    13.0, 5.0, 15.0, 7.0,\n    4.0, 12.0, 2.0, 10.0,\n    16.0, 8.0, 14.0, 6.0\n    );\n\nvoid main()\n{\n    FragColor = texture(texture0, texCoords);\n\n    FragColor.a = FragColor.a * alpha;\n    \n    float threshold = thresholdMatrix[int(floor(mod(gl_FragCoord.x, 4.0)))][int(floor(mod(gl_FragCoord.y, 4.0)))] / 17.0;\n    if (threshold >= FragColor.a) {\n        discard;\n    }\n\n\tFragOpacity = FragColor.a;\n\n    FragColor.a = 1.0f; // Since we use screen door transparency, do not use alpha value\n}`;\n\nclass ParticleShaderProgram extends ShaderProgram {\n\tconstructor() {\n\t\tsuper(\n\t\t\t\"ParticleShaderProgram\",\n\t\t\tparticleVertexShaderSrc,\n\t\t\tparticleFragmentShaderSrc,\n\t\t\tfalse\n\t\t);\n\n\t\tthis.use();\n\n\t\tthis.setUniformLocation(\"texture0\");\n\t\tgl.uniform1i(this.getUniformLocation(\"texture0\")[0], 0);\n\n\t\tthis.setUniformLocation(\"viewProjMatrix\");\n\t\tthis.setUniformLocation(\"cameraPos\");\n\t\tthis.setUniformLocation(\"currentTime\");\n\t\tthis.setUniformLocation(\"fadePerSecond\");\n\t\tthis.setUniformLocation(\"sizeChangePerSecond\");\n\t}\n\n\tsetupVertexAttributePointers(): void {\n\t\t// Change if input layout changes in shaders\n\t\tconst stride = 4 * 4;\n\t\tgl.vertexAttribPointer(0, 2, gl.FLOAT, false, stride, 0);\n\t\tgl.enableVertexAttribArray(0);\n\n\t\tgl.vertexAttribPointer(1, 2, gl.FLOAT, false, stride, 2 * 4);\n\t\tgl.enableVertexAttribArray(1);\n\t}\n\n\tsetupInstancedVertexAttributePointers(): void {\n\t\tconst stride = 11 * 4;\n\t\tgl.vertexAttribPointer(2, 3, gl.FLOAT, false, stride, 0);\n\t\tgl.enableVertexAttribArray(2);\n\t\tgl.vertexAttribDivisor(2, 1);\n\n\t\tgl.vertexAttribPointer(3, 1, gl.FLOAT, false, stride, 3 * 4);\n\t\tgl.enableVertexAttribArray(3);\n\t\tgl.vertexAttribDivisor(3, 1);\n\n\t\tgl.vertexAttribPointer(4, 3, gl.FLOAT, false, stride, 4 * 4);\n\t\tgl.enableVertexAttribArray(4);\n\t\tgl.vertexAttribDivisor(4, 1);\n\n\t\tgl.vertexAttribPointer(5, 1, gl.FLOAT, false, stride, 7 * 4);\n\t\tgl.enableVertexAttribArray(5);\n\t\tgl.vertexAttribDivisor(5, 1);\n\n\t\tgl.vertexAttribPointer(6, 3, gl.FLOAT, false, stride, 8 * 4);\n\t\tgl.enableVertexAttribArray(6);\n\t\tgl.vertexAttribDivisor(6, 1);\n\n\t\t// gl.vertexAttribPointer(7, 1, gl.FLOAT, false, stride, 11 * 4);\n\t\t// gl.enableVertexAttribArray(7);\n\t\t// gl.vertexAttribDivisor(7, 1);\n\t}\n}\n\nexport let particleShaderProgram: ParticleShaderProgram = null;\n\nexport let createParticleShaderProgram = function () {\n\tparticleShaderProgram = new ParticleShaderProgram();\n};\n","import ShaderProgram from \"./ShaderProgram\";\nimport { pointLightsToAllocate } from \"./DeferredRendering/LightingPass\";\nimport { gl } from \"../../../main\";\n\nconst phongVertexShaderSrc: string = `#version 300 es\n// If inputs change, also update PhongShaderProgram::setupVertexAttributePointers to match\nlayout (location = 0) in vec3 inPosition;\nlayout (location = 1) in vec3 inNormal;\nlayout (location = 2) in vec2 inTexCoords;\n\n// If uniforms change, also update PhongShaderProgram to match\nuniform mat4 modelMatrix;\nuniform mat4 viewProjMatrix;\nuniform mat4 textureMatrix;\n\nout vec3 fragPos;\nout vec3 fragNormal;\nout vec2 texCoords;\n\nvoid main() {\n    vec4 worldPos = modelMatrix * vec4(inPosition, 1.0);\n\ttexCoords = vec2(textureMatrix * vec4(inTexCoords, 0.0, 1.0));\n\tfragPos = worldPos.xyz;\n\n\t// Calculate normal matrix, should be done on CPU but I can't be bothered with implementing inverse of a matrix and don't want to find a good lib atm\n\tmat3 normalMatrix = mat3(modelMatrix);\n\tnormalMatrix = inverse(normalMatrix);\n\tnormalMatrix = transpose(normalMatrix);\n\n\tfragNormal = normalize(normalMatrix * inNormal);\n\t\n    gl_Position = viewProjMatrix * worldPos;\n}`;\n\n// let pointLightsToAllocate: number = 100;\n\nconst phongFragmentShaderSrc: string =\n\t`#version 300 es\nprecision highp float;\n\nin vec3 fragPos;\nin vec3 fragNormal;\nin vec2 texCoords;\n\nout vec4 final_colour;\n\nstruct Material {\n\tsampler2D diffuse;\n\tsampler2D specular;\n};\n\nuniform Material material;\n\nstruct PointLight {\n\tvec3 position;\n\tvec3 colour;\n\n\tfloat constant;\n\tfloat linear;\n\tfloat quadratic;\n};\n\nstruct DirectionalLight {\n\tvec3 direction;\n\tvec3 colour;\n\tfloat ambientMultiplier;\n};\n\n#define NR_POINT_LIGHTS ` +\n\tpointLightsToAllocate +\n\t`\n\nuniform DirectionalLight directionalLight;\nuniform PointLight pointLights[NR_POINT_LIGHTS];\nuniform int nrOfPointLights;\nuniform vec3 camPos; //Used for specular lighting\n\nvec3 CalcDirectionalLight(DirectionalLight light, vec3 normal, vec3 cameraDir, vec3 diffuse, float specular, float shininess);\nvec3 CalcPointLight(PointLight light, vec3 normal, vec3 fragPos, vec3 cameraDir, vec3 diffuse, float specular, float shininess);\n\nmat4 thresholdMatrix = mat4(\n\t1.0, 9.0, 3.0, 11.0,\n\t13.0, 5.0, 15.0, 7.0,\n\t4.0, 12.0, 2.0, 10.0,\n\t16.0, 8.0, 14.0, 6.0\n\t);\n\nvoid main() {\n\tfloat opacity = texture(material.diffuse, texCoords).a;\n\n\tfloat threshold = thresholdMatrix[int(floor(mod(gl_FragCoord.x, 4.0)))][int(floor(mod(gl_FragCoord.y, 4.0)))] / 17.0;\n    if (threshold >= opacity) {\n        discard;\n    }\n\n\tvec3 result = vec3(0.0f, 0.0f, 0.0f);\n\n\tfloat shininess = 32.0f;\n\tvec3 diffuse = texture(material.diffuse, texCoords).xyz;\n\tfloat specular = texture(material.specular, texCoords).r;\n\t\n\tvec3 cameraDir = normalize(camPos - fragPos); //Direction vector from fragment to camera\n\t\n\tresult += CalcDirectionalLight(directionalLight, fragNormal, cameraDir, diffuse, specular, shininess);\n\t\n\tfor (int i = 0; i < nrOfPointLights; i++) {\n\t\tresult += CalcPointLight(pointLights[i], fragNormal, fragPos, cameraDir, diffuse, specular, shininess);\t\n\t}\n\n\tfinal_colour = vec4(result, 1.0f); // Set colour of fragment. Since we use screen door transparency, do not use alpha value\n}\n\n// Calculates the colour when using a directional light\nvec3 CalcDirectionalLight(DirectionalLight light, vec3 normal, vec3 cameraDir, vec3 diffuse, float specular, float shininess) {\n\tvec3 ambient = diffuse * light.ambientMultiplier; //Ambient lighting\n\tvec3 lightDir = normalize(-light.direction); //light direction from the fragment position\n\n\t// Diffuse shading\n\tfloat diff = max(dot(normal, lightDir), 0.0);\n\n\t// Specular shading\n\tvec3 reflectDir = reflect(-lightDir, normal);\n\tfloat spec = pow(max(dot(cameraDir, reflectDir), 0.0), shininess);\n\n\t// Combine results\n\tvec3 finalDiffuse = light.colour * diff * diffuse;\n\tvec3 finalSpecular = light.colour * spec * specular;\n\t\n\tvec3 lighting = (ambient + finalDiffuse + finalSpecular);\n\treturn lighting;\n}\n\n// Calculates the colour when using a point light.\nvec3 CalcPointLight(PointLight light, vec3 normal, vec3 fragPos, vec3 cameraDir, vec3 diffuse, float specular, float shininess) {\n\tvec3 lighting;\n\tvec3 lightDir = normalize(light.position - fragPos); //light direction from the fragment position\n\n\t// Diffuse shading\n\tfloat diff = max(dot(normal, lightDir), 0.0);\n\n\t// Specular shading\n\tvec3 reflectDir = reflect(-lightDir, normal);\n\tfloat spec = pow(max(dot(cameraDir, reflectDir), 0.0), shininess);\n\n\t// Attenuation\n\tfloat distance = length(light.position - fragPos);\n\tfloat attenuation = 1.0f / (light.constant + light.linear * distance + light.quadratic * (distance * distance));\n\t\n\t// Combine results\n\tvec3 finalDiffuse = light.colour * diff * diffuse;\n\tvec3 finalSpecular = light.colour * spec * specular;\n\tfinalDiffuse *= attenuation;\n\tfinalSpecular *= attenuation;\n\tlighting = finalDiffuse + finalSpecular;\n\t//lighting = finalSpecular;\n\treturn lighting;\n}`;\n\nclass PhongShaderProgram extends ShaderProgram {\n\tconstructor() {\n\t\tsuper(\"PhongShaderProgram\", phongVertexShaderSrc, phongFragmentShaderSrc);\n\n\t\tthis.use();\n\n\t\tthis.setUniformLocation(\"modelMatrix\");\n\t\tthis.setUniformLocation(\"viewProjMatrix\");\n\t\tthis.setUniformLocation(\"textureMatrix\");\n\n\t\tthis.setUniformLocation(\"material.diffuse\");\n\t\tthis.setUniformLocation(\"material.specular\");\n\n\t\tgl.uniform1i(this.getUniformLocation(\"material.diffuse\")[0], 0);\n\t\tgl.uniform1i(this.getUniformLocation(\"material.specular\")[0], 1);\n\n\t\tfor (let i = 0; i < pointLightsToAllocate; i++) {\n\t\t\tthis.setUniformLocation(\"pointLights[\" + i + \"].position\");\n\t\t\tthis.setUniformLocation(\"pointLights[\" + i + \"].colour\");\n\n\t\t\tthis.setUniformLocation(\"pointLights[\" + i + \"].constant\");\n\t\t\tthis.setUniformLocation(\"pointLights[\" + i + \"].linear\");\n\t\t\tthis.setUniformLocation(\"pointLights[\" + i + \"].quadratic\");\n\t\t}\n\n\t\tthis.setUniformLocation(\"directionalLight.direction\");\n\t\tthis.setUniformLocation(\"directionalLight.colour\");\n\t\tthis.setUniformLocation(\"directionalLight.ambientMultiplier\");\n\t\tthis.setUniformLocation(\"nrOfPointLights\");\n\t\tthis.setUniformLocation(\"camPos\");\n\t}\n\n\tsetupVertexAttributePointers(): void {\n\t\t// Change if input layout changes in shaders\n\t\tconst stride = 8 * 4;\n\t\tgl.vertexAttribPointer(0, 3, gl.FLOAT, false, stride, 0);\n\t\tgl.enableVertexAttribArray(0);\n\n\t\tgl.vertexAttribPointer(1, 3, gl.FLOAT, false, stride, 3 * 4);\n\t\tgl.enableVertexAttribArray(1);\n\n\t\tgl.vertexAttribPointer(2, 2, gl.FLOAT, false, stride, 6 * 4);\n\t\tgl.enableVertexAttribArray(2);\n\t}\n}\n\nexport let phongShaderProgram = null;\n\nexport let createPhongShaderProgram = function () {\n\tphongShaderProgram = new PhongShaderProgram();\n};\n","import ShaderProgram from \"../ShaderProgram\";\nimport { screenQuadVertexSrc } from \"../ScreenQuadShaderProgram\";\nimport { gl } from \"../../../../main\";\n\nconst bloomBlendingFragmentSrc: string = `#version 300 es\nprecision highp float;\n\nout vec4 fragColor;\n  \nin vec2 texCoords;\n\nuniform sampler2D scene;\nuniform sampler2D bloomBlur0;\nuniform sampler2D bloomBlur1;\nuniform sampler2D bloomBlur2;\nuniform sampler2D bloomBlur3;\nuniform sampler2D bloomBlur4;\n\nvoid main()\n{\n    // const float gamma = 2.2;\n    // const float exposure = 1.0;\n    // vec3 hdrColor = texture(scene, texCoords).rgb;      \n    // vec3 bloomColor = texture(bloomBlur, texCoords).rgb;\n    // hdrColor += bloomColor; // additive blending\n    // // tone mapping\n    // vec3 result = vec3(1.0) - exp(-hdrColor * exposure);\n    // // also gamma correct while we're at it       \n    // result = pow(result, vec3(1.0 / gamma));\n    // fragColor = vec4(result, 1.0);\n\n    vec3 result = texture(scene, texCoords).rgb;\n\t\n\tvec3 bloomColor = vec3(0.0, 0.0, 0.0);\n\tbloomColor += (texture(bloomBlur0, texCoords).rgb * 0.3);\n\tbloomColor += (texture(bloomBlur1, texCoords).rgb * 0.25);\n\tbloomColor += (texture(bloomBlur2, texCoords).rgb * 0.2);\n\tbloomColor += (texture(bloomBlur3, texCoords).rgb * 0.15);\n\tbloomColor += (texture(bloomBlur4, texCoords).rgb * 0.1);\n\n    result += bloomColor; // additive blending\n    fragColor = vec4(result, 1.0);\n}`;\n\nclass BloomBlending extends ShaderProgram {\n\tconstructor() {\n\t\tsuper(\"BloomBlending\", screenQuadVertexSrc, bloomBlendingFragmentSrc);\n\n\t\tthis.use();\n\n\t\tthis.setUniformLocation(\"scene\");\n\t\tthis.setUniformLocation(\"bloomBlur0\");\n\t\tthis.setUniformLocation(\"bloomBlur1\");\n\t\tthis.setUniformLocation(\"bloomBlur2\");\n\t\tthis.setUniformLocation(\"bloomBlur3\");\n\t\tthis.setUniformLocation(\"bloomBlur4\");\n\n\t\tgl.uniform1i(this.getUniformLocation(\"scene\")[0], 0);\n\t\tgl.uniform1i(this.getUniformLocation(\"bloomBlur0\")[0], 1);\n\t\tgl.uniform1i(this.getUniformLocation(\"bloomBlur1\")[0], 2);\n\t\tgl.uniform1i(this.getUniformLocation(\"bloomBlur2\")[0], 3);\n\t\tgl.uniform1i(this.getUniformLocation(\"bloomBlur3\")[0], 4);\n\t\tgl.uniform1i(this.getUniformLocation(\"bloomBlur4\")[0], 5);\n\n\t\tthis.setUniformLocation(\"horizontal\");\n\t}\n\n\tsetupVertexAttributePointers(): void {\n\t\t// Change if input layout changes in shaders\n\t\tconst stride = 4 * 4;\n\t\tgl.vertexAttribPointer(0, 2, gl.FLOAT, false, stride, 0);\n\t\tgl.enableVertexAttribArray(0);\n\n\t\tgl.vertexAttribPointer(1, 2, gl.FLOAT, false, stride, 2 * 4);\n\t\tgl.enableVertexAttribArray(1);\n\t}\n}\n\nexport let bloomBlending = null;\n\nexport let createBloomBlending = function () {\n\tbloomBlending = new BloomBlending();\n};\n","import ShaderProgram from \"../ShaderProgram\";\nimport { screenQuadVertexSrc } from \"../ScreenQuadShaderProgram\";\nimport { gl } from \"../../../../main\";\n\nconst bloomExtractionFragmentSrc: string = `#version 300 es\nprecision highp float;\n\nin vec2 texCoords;\n\nlayout (location = 0) out vec4 normalShaded;\nlayout (location = 1) out vec4 brightOnly;\n\nuniform sampler2D inputTexture;\n\nvoid main() {\n\tnormalShaded = texture(inputTexture, texCoords);\n    \n    // check whether fragment output is higher than threshold, if so output as brightness color\n    float brightness = normalShaded.r + normalShaded.g + normalShaded.b;\n    if(brightness > 1.0) {\n        brightOnly = normalShaded;\n    }\n    else {\n        brightOnly = vec4(0.0, 0.0, 0.0, 1.0);\n    }\n}`;\n\nclass BloomExtraction extends ShaderProgram {\n\tconstructor() {\n\t\tsuper(\"BloomExtraction\", screenQuadVertexSrc, bloomExtractionFragmentSrc);\n\n\t\tthis.use();\n\n\t\tthis.setUniformLocation(\"inputTexture\");\n\n\t\tgl.uniform1i(this.getUniformLocation(\"inputTexture\")[0], 0);\n\t}\n\n\tsetupVertexAttributePointers(): void {\n\t\t// Change if input layout changes in shaders\n\t\tconst stride = 4 * 4;\n\t\tgl.vertexAttribPointer(0, 2, gl.FLOAT, false, stride, 0);\n\t\tgl.enableVertexAttribArray(0);\n\n\t\tgl.vertexAttribPointer(1, 2, gl.FLOAT, false, stride, 2 * 4);\n\t\tgl.enableVertexAttribArray(1);\n\t}\n}\n\nexport let bloomExtraction = null;\n\nexport let createBloomExtraction = function () {\n\tbloomExtraction = new BloomExtraction();\n};\n","import ShaderProgram from \"../ShaderProgram\";\nimport { screenQuadVertexSrc } from \"../ScreenQuadShaderProgram\";\nimport { gl } from \"../../../../main\";\n\nconst blurTransparencyFragmentSrc: string = `#version 300 es\nprecision highp float;\n\nout vec4 fragColor;\n  \nin vec2 texCoords;\n\nuniform sampler2D image;\nuniform sampler2D mask;\n\nvoid main()\n{             \n    vec2 texOffset = vec2(1.0 / float(textureSize(image, 0).x), 1.0 / float(textureSize(image, 0).y)); // gets size of single texel\n    vec3 noBlurResult = texture(image, texCoords).rgb;\n    int useBlur = 0;\n    const int kernel = 3;\n\n    vec3 weightsum = vec3(0);\n    vec3 accumulation = vec3(0);\n\n    for(int x = -kernel; x <= kernel; ++x)\n    {\n        for(int y = -kernel; y <= kernel; ++y)\n        {\n            vec2 coord = texCoords + vec2(texOffset.x * float(x), texOffset.y * float(y));\n\n            if (texture(mask, coord).r > 0.0) {\n                useBlur = 1;\n            }\n\n            accumulation += texture(image, coord).rgb;\n            weightsum += 1.0;\n        }\n    }\n\n    vec3 result;\n    if (useBlur == 1) {\n        result = accumulation / weightsum;\n    } else {\n        result = noBlurResult;\n    }\n    \n    fragColor = vec4(result, 1.0);\n}`;\n\nclass BlurTransparency extends ShaderProgram {\n\tconstructor() {\n\t\tsuper(\"BlurTransparency\", screenQuadVertexSrc, blurTransparencyFragmentSrc);\n\n\t\tthis.use();\n\n\t\tthis.setUniformLocation(\"image\");\n\t\tthis.setUniformLocation(\"mask\");\n\n\t\tgl.uniform1i(this.getUniformLocation(\"image\")[0], 0);\n\t\tgl.uniform1i(this.getUniformLocation(\"mask\")[0], 1);\n\t}\n\n\tsetupVertexAttributePointers(): void {\n\t\t// Change if input layout changes in shaders\n\t\tconst stride = 4 * 4;\n\t\tgl.vertexAttribPointer(0, 2, gl.FLOAT, false, stride, 0);\n\t\tgl.enableVertexAttribArray(0);\n\n\t\tgl.vertexAttribPointer(1, 2, gl.FLOAT, false, stride, 2 * 4);\n\t\tgl.enableVertexAttribArray(1);\n\t}\n}\n\nexport let blurTransparency = null;\n\nexport let createBlurTransparency = function () {\n\tblurTransparency = new BlurTransparency();\n};\n","import ShaderProgram from \"../ShaderProgram\";\nimport { screenQuadVertexSrc } from \"../ScreenQuadShaderProgram\";\nimport { gl } from \"../../../../main\";\n\nconst crtFragmentShaderSrc: string = `#version 300 es\nprecision highp float;\n//\n// PUBLIC DOMAIN CRT STYLED SCAN-LINE SHADER\n//\n//   by Timothy Lottes\n//\n// This is more along the style of a really good CGA arcade monitor.\n// With RGB inputs instead of NTSC.\n// The shadow mask example has the mask rotated 90 degrees for less chromatic aberration.\n//\n// Left it unoptimized to show the theory behind the algorithm.\n//\n// It is an example what I personally would want as a display option for pixel art games.\n// Please take and use, change, or whatever.\n//\n\nout vec4 fragColor;\nin vec2 texCoords;\n\nuniform bool horizontal;\nfloat weight[5] = float[] (0.227027, 0.1945946, 0.1216216, 0.054054, 0.016216);\n\n\nuniform sampler2D screenTexture;\n\n//#define res (textureSize(screenTexture, 0).xy /6.0)\n#define res (vec2(640, 360))\n\n// Hardness of scanline.\n//  -8.0 = soft\n// -16.0 = medium\nfloat hardScan=-8.0;\n\n// Hardness of pixels in scanline.\n// -2.0 = soft\n// -4.0 = hard\nfloat hardPix=-3.0;\n\n// Display warp.\n// 0.0 = none\n// 1.0/8.0 = extreme\nvec2 warp=vec2(1.0/32.0,1.0/24.0); \n\n// Amount of shadow mask.\nfloat maskDark=0.5;\nfloat maskLight=1.5;\n\n//------------------------------------------------------------------------\n\n// sRGB to Linear.\n// Assuing using sRGB typed textures this should not be needed.\nfloat ToLinear1(float c){return(c<=0.04045)?c/12.92:pow((c+0.055)/1.055,2.4);}\nvec3 ToLinear(vec3 c){return vec3(ToLinear1(c.r),ToLinear1(c.g),ToLinear1(c.b));}\n\n// Linear to sRGB.\n// Assuing using sRGB typed textures this should not be needed.\nfloat ToSrgb1(float c){return(c<0.0031308?c*12.92:1.055*pow(c,0.41666)-0.055);}\nvec3 ToSrgb(vec3 c){return vec3(ToSrgb1(c.r),ToSrgb1(c.g),ToSrgb1(c.b));}\n\n// Nearest emulated sample given floating point position and texel offset.\n// Also zero's off screen.\nvec3 Fetch(vec2 pos,vec2 off){\n  pos=floor(pos*res+off)/res;\n  if(max(abs(pos.x-0.5),abs(pos.y-0.5))>0.5)return vec3(0.0,0.0,0.0);\n  return ToLinear(texture(screenTexture,pos.xy,-16.0).rgb);}\n\n// Distance in emulated pixels to nearest texel.\nvec2 Dist(vec2 pos){pos=pos*res;return -((pos-floor(pos))-vec2(0.5));}\n    \n// 1D Gaussian.\nfloat Gaus(float pos,float scale){return exp2(scale*pos*pos);}\n\n// 3-tap Gaussian filter along horz line.\nvec3 Horz3(vec2 pos,float off){\n  vec3 b=Fetch(pos,vec2(-1.0,off));\n  vec3 c=Fetch(pos,vec2( 0.0,off));\n  vec3 d=Fetch(pos,vec2( 1.0,off));\n  float dst=Dist(pos).x;\n  // Convert distance to weight.\n  float scale=hardPix;\n  float wb=Gaus(dst-1.0,scale);\n  float wc=Gaus(dst+0.0,scale);\n  float wd=Gaus(dst+1.0,scale);\n  // Return filtered sample.\n  return (b*wb+c*wc+d*wd)/(wb+wc+wd);}\n\n// 5-tap Gaussian filter along horz line.\nvec3 Horz5(vec2 pos,float off){\n  vec3 a=Fetch(pos,vec2(-2.0,off));\n  vec3 b=Fetch(pos,vec2(-1.0,off));\n  vec3 c=Fetch(pos,vec2( 0.0,off));\n  vec3 d=Fetch(pos,vec2( 1.0,off));\n  vec3 e=Fetch(pos,vec2( 2.0,off));\n  float dst=Dist(pos).x;\n  // Convert distance to weight.\n  float scale=hardPix;\n  float wa=Gaus(dst-2.0,scale);\n  float wb=Gaus(dst-1.0,scale);\n  float wc=Gaus(dst+0.0,scale);\n  float wd=Gaus(dst+1.0,scale);\n  float we=Gaus(dst+2.0,scale);\n  // Return filtered sample.\n  return (a*wa+b*wb+c*wc+d*wd+e*we)/(wa+wb+wc+wd+we);}\n\n// Return scanline weight.\nfloat Scan(vec2 pos,float off){\n  float dst=Dist(pos).y;\n  return Gaus(dst+off,hardScan);}\n\n// Allow nearest three lines to effect pixel.\nvec3 Tri(vec2 pos){\n  vec3 a=Horz3(pos,-1.0);\n  vec3 b=Horz5(pos, 0.0);\n  vec3 c=Horz3(pos, 1.0);\n  float wa=Scan(pos,-1.0);\n  float wb=Scan(pos, 0.0);\n  float wc=Scan(pos, 1.0);\n  return a*wa+b*wb+c*wc;}\n\n// Distortion of scanlines, and end of screen alpha.\nvec2 Warp(vec2 pos){\n  pos=pos*2.0-1.0;    \n  pos*=vec2(1.0+(pos.y*pos.y)*warp.x,1.0+(pos.x*pos.x)*warp.y);\n  return pos*0.5+0.5;}\n\n// Shadow mask.\nvec3 Mask(vec2 pos){\n  pos.x+=pos.y*3.0;\n  vec3 mask=vec3(maskDark,maskDark,maskDark);\n  pos.x=fract(pos.x/6.0);\n  if(pos.x<0.333)mask.r=maskLight;\n  else if(pos.x<0.666)mask.g=maskLight;\n  else mask.b=maskLight;\n  return mask;}    \n\n// Draw dividing bars.\nfloat Bar(float pos,float bar){pos-=bar;return pos*pos<4.0?0.0:1.0;}\n\n\nvoid main() {\n    vec2 resolution = vec2(textureSize(screenTexture, 0));\n    vec2 pos=Warp(gl_FragCoord.xy/resolution.xy+vec2(-0.333,0.0));\n    hardScan=-4.0;\n    maskDark=maskLight=1.0;\n    pos=Warp(gl_FragCoord.xy/resolution.xy);\n    fragColor.rgb=Tri(pos)*Mask(gl_FragCoord.xy);\n        \n    fragColor.a=1.0;  \n    fragColor.rgb=ToSrgb(fragColor.rgb);\n}\n`;\n\nclass CrtShaderProgram extends ShaderProgram {\n\tconstructor() {\n\t\tsuper(\"CrtShaderProgram\", screenQuadVertexSrc, crtFragmentShaderSrc);\n\n\t\tthis.setUniformLocation(\"screenTexture\");\n\t}\n\n\tsetupVertexAttributePointers() {\n\t\t// Change if input layout changes in shaders\n\t\tconst stride = 4 * 4;\n\t\tgl.vertexAttribPointer(0, 2, gl.FLOAT, false, stride, 0);\n\t\tgl.enableVertexAttribArray(0);\n\n\t\tgl.vertexAttribPointer(1, 2, gl.FLOAT, false, stride, 2 * 4);\n\t\tgl.enableVertexAttribArray(1);\n\t}\n}\n\nexport let crtShaderProgram = null;\n\nexport let createCrtShaderProgram = function () {\n\tcrtShaderProgram = new CrtShaderProgram();\n};\n","import ShaderProgram from \"../ShaderProgram\";\nimport { screenQuadVertexSrc } from \"../ScreenQuadShaderProgram\";\nimport { gl } from \"../../../../main\";\n\nconst gaussianBlurFragmentSrc: string = `#version 300 es\nprecision highp float;\n\nout vec4 fragColor;\n  \nin vec2 texCoords;\n\nuniform sampler2D image;\n  \nuniform bool horizontal;\nfloat weight[5] = float[] (0.227027, 0.1945946, 0.1216216, 0.054054, 0.016216);\n\nvoid main()\n{             \n    vec2 texOffset = vec2(1.0 / float(textureSize(image, 0).x), 1.0 / float(textureSize(image, 0).y)); // gets size of single texel\n    vec3 result = texture(image, texCoords).rgb * weight[0]; // current fragment's contribution\n    if(horizontal)\n    {\n        for(int i = 1; i < 5; ++i)\n        {\n            result += texture(image, texCoords + vec2(texOffset.x * float(i), 0.0)).rgb * weight[i];\n            result += texture(image, texCoords - vec2(texOffset.x * float(i), 0.0)).rgb * weight[i];\n        }\n    }\n    else\n    {\n        for(int i = 1; i < 5; ++i)\n        {\n            result += texture(image, texCoords + vec2(0.0, texOffset.y * float(i))).rgb * weight[i];\n            result += texture(image, texCoords - vec2(0.0, texOffset.y * float(i))).rgb * weight[i];\n        }\n    }\n    fragColor = vec4(result, 1.0);\n}`;\n\nclass GaussianBlur extends ShaderProgram {\n\tconstructor() {\n\t\tsuper(\"GaussianBlur\", screenQuadVertexSrc, gaussianBlurFragmentSrc);\n\n\t\tthis.use();\n\n\t\tthis.setUniformLocation(\"image\");\n\n\t\tgl.uniform1i(this.getUniformLocation(\"image\")[0], 0);\n\n\t\tthis.setUniformLocation(\"horizontal\");\n\t}\n\n\tsetupVertexAttributePointers(): void {\n\t\t// Change if input layout changes in shaders\n\t\tconst stride = 4 * 4;\n\t\tgl.vertexAttribPointer(0, 2, gl.FLOAT, false, stride, 0);\n\t\tgl.enableVertexAttribArray(0);\n\n\t\tgl.vertexAttribPointer(1, 2, gl.FLOAT, false, stride, 2 * 4);\n\t\tgl.enableVertexAttribArray(1);\n\t}\n}\n\nexport let gaussianBlur = null;\n\nexport let createGaussianBlur = function () {\n\tgaussianBlur = new GaussianBlur();\n};\n","import { gl } from \"../../../main\";\nimport ShaderProgram from \"./ShaderProgram\";\n\nexport const screenQuadVertexSrc: string = `#version 300 es\n\nlayout (location = 0) in vec2 inPos;\nlayout (location = 1) in vec2 inTexCoords;\n\nout vec2 texCoords;\n\nvoid main()\n{\n    texCoords = inTexCoords;\n    gl_Position = vec4(inPos, 0.0, 1.0); \n}  \n`;\n\nconst screenQuadFragmentSrc: string = `#version 300 es\nprecision highp float;\n\nout vec4 FragColor;\nin vec2 texCoords;\n\nuniform sampler2D screenTexture;\n\nvoid main() {\n\t// Linearization of depth texture.\n\t// float depth = texture(screenTexture, texCoords).r;\n\t// depth = (2.0 * 0.01 ) / (100.0 + 0.01 - depth*(100.0 - 0.01));\n\t// FragColor = vec4(depth, depth, depth, 1.0);\n    FragColor = texture(screenTexture, texCoords).rgba;\n}\n`;\n\nclass ScreenQuadShaderProgram extends ShaderProgram {\n\tconstructor() {\n\t\tsuper(\n\t\t\t\"ScreenQuadShaderProgram\",\n\t\t\tscreenQuadVertexSrc,\n\t\t\tscreenQuadFragmentSrc\n\t\t);\n\n\t\tthis.setUniformLocation(\"screenTexture\");\n\n\t\tgl.uniform1i(this.uniformBindings[\"screenTexture\"], 0);\n\t}\n\n\tsetupVertexAttributePointers() {\n\t\t// Change if input layout changes in shaders\n\t\tconst stride = 4 * 4;\n\t\tgl.vertexAttribPointer(0, 2, gl.FLOAT, false, stride, 0);\n\t\tgl.enableVertexAttribArray(0);\n\n\t\tgl.vertexAttribPointer(1, 2, gl.FLOAT, false, stride, 2 * 4);\n\t\tgl.enableVertexAttribArray(1);\n\t}\n}\n\nexport let screenQuadShaderProgram = null;\n\nexport let createScreenQuadShaderProgram = function () {\n\tscreenQuadShaderProgram = new ScreenQuadShaderProgram();\n};\n","import { gl } from \"../../../main\";\n\nexport default class ShaderProgram {\n\t// Protected\n\tprotected shaderProgram: WebGLProgram;\n\tprotected uniformBindings: Map<string, WebGLUniformLocation>;\n\n\tconstructor(\n\t\tshaderProgramName: string,\n\t\tvertexShaderName: string,\n\t\tfragmentShaderName: string,\n\t\tdebugShaderCompilation: boolean = false\n\t) {\n\t\tthis.shaderProgram = null;\n\t\tthis.loadShaders(\n\t\t\tshaderProgramName,\n\t\t\tvertexShaderName,\n\t\t\tfragmentShaderName,\n\t\t\tdebugShaderCompilation\n\t\t);\n\t\tthis.uniformBindings = new Map<string, WebGLUniformLocation>();\n\t}\n\n\tloadShaders(\n\t\tshaderProgramName: string,\n\t\tvertexShaderString: string,\n\t\tfragmentShaderString: string,\n\t\tdebugShaderCompilation: boolean\n\t) {\n\t\t// link shaders\n\t\tif (this.shaderProgram != null) {\n\t\t\tgl.deleteProgram(this.shaderProgram); // Delete in case this is not the first time this shader is created.\n\t\t}\n\n\t\tconsole.log(\"Compiling shader program: \" + shaderProgramName);\n\n\t\t// vertex shader\n\t\tconst vertexShader = gl.createShader(gl.VERTEX_SHADER);\n\t\tgl.shaderSource(vertexShader, vertexShaderString);\n\t\tgl.compileShader(vertexShader);\n\n\t\t// Check for shader compile errors\n\t\tif (\n\t\t\t!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS) ||\n\t\t\tdebugShaderCompilation\n\t\t) {\n\t\t\tconsole.log(\n\t\t\t\t\"Vertex shader compiled successfully: \" +\n\t\t\t\t\tgl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)\n\t\t\t);\n\t\t\tconsole.log(\n\t\t\t\t\"Vertex shader compiler log: \\n\" + gl.getShaderInfoLog(vertexShader)\n\t\t\t);\n\t\t}\n\n\t\t// fragment shader\n\t\tconst fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n\t\tgl.shaderSource(fragmentShader, fragmentShaderString);\n\t\tgl.compileShader(fragmentShader);\n\n\t\t// Check for shader compile errors\n\t\tif (\n\t\t\t!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS) ||\n\t\t\tdebugShaderCompilation\n\t\t) {\n\t\t\tconsole.log(\n\t\t\t\t\"Fragment shader compiled successfully: \" +\n\t\t\t\t\tgl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)\n\t\t\t);\n\t\t\tconsole.log(\n\t\t\t\t\"Fragment shader compiler log: \\n\" + gl.getShaderInfoLog(fragmentShader)\n\t\t\t);\n\t\t}\n\n\t\tthis.shaderProgram = gl.createProgram();\n\n\t\tgl.attachShader(this.shaderProgram, vertexShader);\n\t\tgl.attachShader(this.shaderProgram, fragmentShader);\n\t\tgl.linkProgram(this.shaderProgram);\n\n\t\t// Check for linking errors?\n\t\tlet linkedShaders = gl.getProgramParameter(\n\t\t\tthis.shaderProgram,\n\t\t\tgl.LINK_STATUS\n\t\t);\n\t\tif (!linkedShaders || debugShaderCompilation) {\n\t\t\tconsole.log(\"Linked shaders successfully: \" + linkedShaders);\n\t\t\tconsole.log(\n\t\t\t\t\"Linking shaders log: \\n\" + gl.getProgramInfoLog(this.shaderProgram)\n\t\t\t);\n\t\t}\n\n\t\t// Delete shaders now that they have been made into a program\n\t\tgl.deleteShader(vertexShader);\n\t\tgl.deleteShader(fragmentShader);\n\t}\n\n\tuse() {\n\t\tgl.useProgram(this.shaderProgram);\n\t}\n\n\tsetupVertexAttributePointers() {\n\t\t// TODO: Pure virtual possible?\n\t}\n\n\tsetupInstancedVertexAttributePointers() {}\n\n\tsetUniformLocation(uniformName: string) {\n\t\tthis.uniformBindings.set(\n\t\t\tuniformName,\n\t\t\tgl.getUniformLocation(this.shaderProgram, uniformName)\n\t\t);\n\t}\n\n\tgetUniformLocation(uniformName: string): [WebGLUniformLocation, boolean] {\n\t\tif (this.uniformBindings.has(uniformName)) {\n\t\t\treturn [this.uniformBindings.get(uniformName), true];\n\t\t}\n\n\t\t// console.log(\"No uniform with name \" + uniformName + \"\\n\");\n\t\treturn [0, false];\n\t}\n}\n\n// ShaderProgram::~ShaderProgram() {\n//     glDeleteProgram(p_shaderProgram);\n// }\n","import { gl } from \"../../../../main\";\nimport ShaderProgram from \"../ShaderProgram\";\nimport { shadowFragmentShaderSrc } from \"./ShadowPass\";\n\nconst grassShadowVertexShaderSrc: string = `#version 300 es\n\nlayout (location = 0) in vec2 inVertexPosition;\nlayout (location = 1) in vec2 inTexCoords;\n\n// Instanced attributes starts here\nlayout (location = 2) in vec3 inPos;\nlayout (location = 3) in float inSize;\nlayout (location = 4) in vec3 inTipOffset;\n\nuniform mat4 lightSpaceMatrix;\nuniform vec3 cameraPos;\nuniform float currentTime;\n\nout vec2 texCoords;\n\nvoid main() {\n    // Billboarding\n    vec3 camDir = cameraPos - inPos;\n    vec3 rightVec = normalize(cross(vec3(0.0, 1.0, 0.0), camDir));\n    vec3 upVec = vec3(0.0, 1.0, 0.0);\n\tfloat size = inSize + length(camDir) * 0.0;\n    rightVec = rightVec * inVertexPosition.x * size;\n    upVec = upVec * inVertexPosition.y * size;\n\tvec3 fragPos = vec3(rightVec + upVec + inPos + (inTipOffset + vec3(sin(currentTime + inPos.x) * 0.1, 0.0, 0.0)) * inVertexPosition.y);\n    gl_Position = lightSpaceMatrix * vec4(fragPos, 1.0);\n\n    // gl_Position = viewProjMatrix * vec4(vec3(inVertexPosition, 0.0) * size + currentPos, 1.0); // No billboarding\n    texCoords = inTexCoords;\n}`;\n\nclass GrassShadowPass extends ShaderProgram {\n\tconstructor() {\n\t\tsuper(\n\t\t\t\"GrassShadowPass\",\n\t\t\tgrassShadowVertexShaderSrc,\n\t\t\tshadowFragmentShaderSrc,\n\t\t\tfalse\n\t\t);\n\n\t\tthis.use();\n\n\t\tthis.setUniformLocation(\"texture0\");\n\t\tgl.uniform1i(this.getUniformLocation(\"texture0\")[0], 0);\n\n\t\tthis.setUniformLocation(\"lightSpaceMatrix\");\n\t\tthis.setUniformLocation(\"cameraPos\");\n\t\tthis.setUniformLocation(\"currentTime\");\n\t}\n\n\tsetupVertexAttributePointers(): void {\n\t\t// Change if input layout changes in shaders\n\t\tconst stride = 4 * 4;\n\t\tgl.vertexAttribPointer(0, 2, gl.FLOAT, false, stride, 0);\n\t\tgl.enableVertexAttribArray(0);\n\n\t\tgl.vertexAttribPointer(1, 2, gl.FLOAT, false, stride, 2 * 4);\n\t\tgl.enableVertexAttribArray(1);\n\t}\n\n\tsetupInstancedVertexAttributePointers(): void {\n\t\tconst stride = 7 * 4;\n\t\tgl.vertexAttribPointer(2, 3, gl.FLOAT, false, stride, 0);\n\t\tgl.enableVertexAttribArray(2);\n\t\tgl.vertexAttribDivisor(2, 1);\n\n\t\tgl.vertexAttribPointer(3, 1, gl.FLOAT, false, stride, 3 * 4);\n\t\tgl.enableVertexAttribArray(3);\n\t\tgl.vertexAttribDivisor(3, 1);\n\n\t\tgl.vertexAttribPointer(4, 3, gl.FLOAT, false, stride, 4 * 4);\n\t\tgl.enableVertexAttribArray(4);\n\t\tgl.vertexAttribDivisor(4, 1);\n\t}\n}\n\nexport let grassShadowPass: GrassShadowPass = null;\n\nexport let createGrassShadowPass = function () {\n\tgrassShadowPass = new GrassShadowPass();\n};\n","import { gl } from \"../../../../main\";\nimport ShaderProgram from \"../ShaderProgram\";\n\nconst pointShadowVertexShaderSrc: string = `#version 300 es\n// If inputs change, also update PointShadowPass::setupVertexAttributePointers to match\nlayout (location = 0) in vec3 inPosition;\nlayout (location = 1) in vec3 inNormal;\nlayout (location = 2) in vec2 inTexCoords;\n\nuniform mat4 lightSpaceMatrix;\nuniform mat4 modelMatrix;\nuniform mat4 textureMatrix;\n\nout vec2 texCoords;\nout vec3 fragPos;\n\nvoid main()\n{\n    gl_Position = lightSpaceMatrix * modelMatrix * vec4(inPosition, 1.0);\n    fragPos = vec3(modelMatrix * vec4(inPosition, 1.0));\n\ttexCoords = vec2(textureMatrix * vec4(inTexCoords, 0.0, 1.0));\n}`;\n\nconst pointShadowFragmentShaderSrc: string = `#version 300 es\nprecision highp float;\n\nin vec2 texCoords;\nin vec3 fragPos;\n\nuniform sampler2D diffuse;\nuniform vec3 cameraPos;\n\nmat4 thresholdMatrix = mat4(\n\t1.0, 9.0, 3.0, 11.0,\n\t13.0, 5.0, 15.0, 7.0,\n\t4.0, 12.0, 2.0, 10.0,\n\t16.0, 8.0, 14.0, 6.0\n);\n\n\nconst float far_plane = 100.0;\n\nvoid main()\n{\n    float opacity = texture(diffuse, texCoords).a;\n\n\tfloat threshold = thresholdMatrix[int(floor(mod(gl_FragCoord.x, 4.0)))][int(floor(mod(gl_FragCoord.y, 4.0)))] / 17.0;\n    if (threshold >= opacity) {\n        discard;\n    }\n\n    // get distance between fragment and light source\n    float lightDistance = length(fragPos - cameraPos);\n    \n    // map to [0;1] range by dividing by far_plane\n    lightDistance = lightDistance / far_plane;\n    \n    // write this as modified depth\n    gl_FragDepth = lightDistance;\n}`;\n\nclass PointShadowPass extends ShaderProgram {\n\tconstructor() {\n\t\tsuper(\"PointShadowPass\", pointShadowVertexShaderSrc, pointShadowFragmentShaderSrc);\n\n\t\tthis.use();\n\n\t\tthis.setUniformLocation(\"lightSpaceMatrix\");\n\t\tthis.setUniformLocation(\"modelMatrix\");\n\t\tthis.setUniformLocation(\"textureMatrix\");\n        this.setUniformLocation(\"cameraPos\");\n\t}\n\n\tsetupVertexAttributePointers(): void {\n\t\t// Change if input layout changes in shaders\n\t\tconst stride = 8 * 4;\n\t\tgl.vertexAttribPointer(0, 3, gl.FLOAT, false, stride, 0);\n\t\tgl.enableVertexAttribArray(0);\n\n\t\tgl.vertexAttribPointer(1, 3, gl.FLOAT, false, stride, 3 * 4);\n\t\tgl.enableVertexAttribArray(1);\n\n\t\tgl.vertexAttribPointer(2, 2, gl.FLOAT, false, stride, 6 * 4);\n\t\tgl.enableVertexAttribArray(2);\n\t}\n}\n\nexport let pointShadowPass = null;\n\nexport let createPointShadowPass = function () {\n\tpointShadowPass = new PointShadowPass();\n};\n","import { gl } from \"../../../../main\";\nimport ShaderProgram from \"../ShaderProgram\";\n\nconst shadowVertexShaderSrc: string = `#version 300 es\n// If inputs change, also update ShadowPass::setupVertexAttributePointers to match\nlayout (location = 0) in vec3 inPosition;\nlayout (location = 1) in vec3 inNormal;\nlayout (location = 2) in vec2 inTexCoords;\n\nuniform mat4 lightSpaceMatrix;\nuniform mat4 modelMatrix;\nuniform mat4 textureMatrix;\n\nout vec2 texCoords;\n\nvoid main()\n{\n    gl_Position = lightSpaceMatrix * modelMatrix * vec4(inPosition, 1.0);\n\ttexCoords = vec2(textureMatrix * vec4(inTexCoords, 0.0, 1.0));\n}`;\n\nexport const shadowFragmentShaderSrc: string = `#version 300 es\nprecision highp float;\n\nin vec2 texCoords;\n\nuniform sampler2D diffuse;\n\nmat4 thresholdMatrix = mat4(\n\t1.0, 9.0, 3.0, 11.0,\n\t13.0, 5.0, 15.0, 7.0,\n\t4.0, 12.0, 2.0, 10.0,\n\t16.0, 8.0, 14.0, 6.0\n);\n\n//out vec4 final_colour;\n\nvoid main()\n{\n    float opacity = texture(diffuse, texCoords).a;\n\n\tfloat threshold = thresholdMatrix[int(floor(mod(gl_FragCoord.x, 4.0)))][int(floor(mod(gl_FragCoord.y, 4.0)))] / 17.0;\n    if (threshold >= opacity) {\n        discard;\n    }\n\n    //final_colour = vec4(1.0, 1.0, 1.0, 1.0);\n}`;\n\nclass ShadowPass extends ShaderProgram {\n\tconstructor() {\n\t\tsuper(\"ShadowPass\", shadowVertexShaderSrc, shadowFragmentShaderSrc);\n\n\t\tthis.use();\n\n\t\tthis.setUniformLocation(\"lightSpaceMatrix\");\n\t\tthis.setUniformLocation(\"modelMatrix\");\n\t\tthis.setUniformLocation(\"textureMatrix\");\n\t}\n\n\tsetupVertexAttributePointers(): void {\n\t\t// Change if input layout changes in shaders\n\t\tconst stride = 8 * 4;\n\t\tgl.vertexAttribPointer(0, 3, gl.FLOAT, false, stride, 0);\n\t\tgl.enableVertexAttribArray(0);\n\n\t\tgl.vertexAttribPointer(1, 3, gl.FLOAT, false, stride, 3 * 4);\n\t\tgl.enableVertexAttribArray(1);\n\n\t\tgl.vertexAttribPointer(2, 2, gl.FLOAT, false, stride, 6 * 4);\n\t\tgl.enableVertexAttribArray(2);\n\t}\n}\n\nexport let shadowPass = null;\n\nexport let createShadowPass = function () {\n\tshadowPass = new ShadowPass();\n};\n","import { gl } from \"../../../main\";\nimport ShaderProgram from \"./ShaderProgram\";\n\nconst simpleVertexShaderSrc: string = `#version 300 es\n// If inputs change, also update SimpleShaderProgram::setupVertexAttributePointers to match\nlayout (location = 0) in vec3 inPosition;\nlayout (location = 1) in vec4 inColor;\nlayout (location = 2) in vec2 inTexCoords;\n\n// If uniforms change, also update SimpleShaderProgram to match\nuniform mat4 modelMatrix;\nuniform mat4 viewProjMatrix;\nuniform mat4 textureMatrix;\n\nout vec4 color;\nout vec2 texCoords;\n\nvoid main() {\n    gl_Position = viewProjMatrix * modelMatrix * vec4(inPosition, 1.0);\n    color = inColor;\n    texCoords = vec2(textureMatrix * vec4(inTexCoords, 0.0, 1.0));\n}`;\n\nconst simpleFragmentShaderSrc: string = `#version 300 es\nprecision highp float;\n\nin vec4 color;\nin vec2 texCoords;\n\n// If uniforms change, also update SimpleShaderProgram to match\nuniform sampler2D texture0;\nuniform int useTexture;\n\nout vec4 FragColor;\n\nmat4 thresholdMatrix = mat4(\n    1.0, 9.0, 3.0, 11.0,\n    13.0, 5.0, 15.0, 7.0,\n    4.0, 12.0, 2.0, 10.0,\n    16.0, 8.0, 14.0, 6.0\n    );\n\nvoid main()\n{\n    if (useTexture == 1) {\n        FragColor = texture(texture0, texCoords);\n    }\n    else {\n        FragColor = color;\n    }\n\n    float threshold = thresholdMatrix[int(floor(mod(gl_FragCoord.x, 4.0)))][int(floor(mod(gl_FragCoord.y, 4.0)))] / 17.0;\n    if (threshold >= FragColor.a) {\n        discard;\n    }\n\n    FragColor.a = 1.0f; // Since we use screen door transparency, do not use alpha value\n}`;\n\nclass SimpleShaderProgram extends ShaderProgram {\n\tconstructor() {\n\t\tsuper(\n\t\t\t\"SimpleShaderProgram\",\n\t\t\tsimpleVertexShaderSrc,\n\t\t\tsimpleFragmentShaderSrc\n\t\t);\n\n\t\tthis.use();\n\n\t\tthis.setUniformLocation(\"modelMatrix\");\n\t\tthis.setUniformLocation(\"viewProjMatrix\");\n\t\tthis.setUniformLocation(\"textureMatrix\");\n\t\tthis.setUniformLocation(\"texture0\");\n\t\tthis.setUniformLocation(\"useTexture\");\n\n\t\tgl.uniform1i(this.uniformBindings[\"texture0\"], 0);\n\t}\n\n\tsetupVertexAttributePointers(): void {\n\t\t// Change if input layout changes in shaders\n\t\tconst stride = 9 * 4;\n\t\tgl.vertexAttribPointer(0, 3, gl.FLOAT, false, stride, 0);\n\t\tgl.enableVertexAttribArray(0);\n\n\t\tgl.vertexAttribPointer(1, 4, gl.FLOAT, false, stride, 3 * 4);\n\t\tgl.enableVertexAttribArray(1);\n\n\t\tgl.vertexAttribPointer(2, 2, gl.FLOAT, false, stride, 7 * 4);\n\t\tgl.enableVertexAttribArray(2);\n\t}\n}\n\nexport let simpleShaderProgram = null;\n\nexport let createSimpleShaderProgram = function () {\n\tsimpleShaderProgram = new SimpleShaderProgram();\n};\n","import { gl } from \"../../../../main\";\nimport ShaderProgram from \"../ShaderProgram\";\n\nexport const skyboxVertexSrc: string = `#version 300 es\n\nlayout (location = 0) in vec3 inPos;\n\nout vec3 texCoords;\n\nuniform mat4 viewProjMatrix;\n\nvoid main()\n{\n    texCoords = inPos;\n\ttexCoords.y *= -1.0;\n\ttexCoords.z *= -1.0;\n    vec4 pos = viewProjMatrix * vec4(inPos, 1.0);\n    gl_Position = pos.xyww; \n}  \n`;\n\nconst skyboxFragmentSrc: string = `#version 300 es\nprecision highp float;\n\nlayout (location = 0) out vec4 FragColor;\nlayout (location = 1) out float FragOpacity;\n\nin vec3 texCoords;\n\nuniform samplerCube skybox;\n\nvoid main() {\n\tFragColor = texture(skybox, texCoords).rgba;\n\tFragOpacity = 0.0;\n}\n`;\n\nclass SkyboxShaderProgram extends ShaderProgram {\n\tconstructor() {\n\t\tsuper(\"SkyboxShaderProgram\", skyboxVertexSrc, skyboxFragmentSrc);\n\n\t\tthis.setUniformLocation(\"skybox\");\n\t\tgl.uniform1i(this.uniformBindings[\"skybox\"], 0);\n\n\t\tthis.setUniformLocation(\"viewProjMatrix\");\n\t}\n\n\tsetupVertexAttributePointers() {\n\t\t// Change if input layout changes in shaders\n\t\tconst stride = 3 * 4;\n\t\tgl.vertexAttribPointer(0, 3, gl.FLOAT, false, stride, 0);\n\t\tgl.enableVertexAttribArray(0);\n\t}\n}\n\nexport let skyboxShaderProgram = null;\n\nexport let createSkyboxShaderProgram = function () {\n\tskyboxShaderProgram = new SkyboxShaderProgram();\n};\n","import { gl } from \"../../../../main\";\r\nimport { pointLightsToAllocate, pointShadowsToAllocate } from \"../DeferredRendering/LightingPass\";\r\nimport ShaderProgram from \"../ShaderProgram\";\r\n\r\nconst volumetricGodRayVertexShaderSrc: string = `#version 300 es\r\n\r\nlayout (location = 0) in vec2 inVertexPosition;\r\n\r\nuniform mat4 viewProjMatrix;\r\nuniform vec3 cameraPos;\r\nuniform float fogMaxDistance;\r\nuniform float numPlanes;\r\nuniform float fov;\r\n\r\nout vec3 fragPos;\r\nflat out float numberPlanes;\r\nflat out float fogMD;\r\nflat out int instanceID;\r\n\r\nvoid main() {\r\n\tfloat recalculatedMaxDepth = fogMaxDistance * cos(fov/2.0); // Get the length along hypothenuse when closest is fogMaxDistance and angle is fov/2\r\n\tfloat currDepth = (recalculatedMaxDepth - (recalculatedMaxDepth / numPlanes) * float(gl_InstanceID));\r\n\tcurrDepth = (1.0/recalculatedMaxDepth) * pow(currDepth, 2.0);\r\n\t\r\n\tvec4 clipSpacePos = inverse(viewProjMatrix) * vec4(inVertexPosition.xy, 1.0, 1.0);\r\n\tvec3 worldPos = vec3(clipSpacePos.xyz / clipSpacePos.w);\r\n\tworldPos = cameraPos + normalize(worldPos - cameraPos) * currDepth;\r\n\r\n\tnumberPlanes = numPlanes;\r\n\tfogMD = fogMaxDistance;\r\n\tinstanceID = gl_InstanceID;\r\n\t\r\n    fragPos = worldPos;\r\n    gl_Position = viewProjMatrix * vec4(worldPos, 1.0);\r\n}`;\r\n\r\nlet volumetricGodRayFragmentShaderSrc: string;\r\n\r\n\r\nclass VolumetricGodRaysShaderProgram extends ShaderProgram {\r\n\tconstructor() {\r\n\t\tsuper(\r\n\t\t\t\"VolumetricGodRaysShaderProgram\",\r\n\t\t\tvolumetricGodRayVertexShaderSrc,\r\n\t\t\tvolumetricGodRayFragmentShaderSrc,\r\n\t\t\tfalse\r\n\t\t);\r\n\r\n\t\tthis.use();\r\n\r\n\t\tthis.setUniformLocation(\"viewProjMatrix\");\r\n\t\tthis.setUniformLocation(\"cameraPos\");\r\n\t\tthis.setUniformLocation(\"fogMaxDistance\");\r\n\t\tthis.setUniformLocation(\"numPlanes\");\r\n\t\tthis.setUniformLocation(\"fov\");\r\n\r\n\t\tthis.setUniformLocation(\"nrOfPointLights\");\r\n\t\t\r\n        for (let i = 0; i < pointShadowsToAllocate; i++) {\r\n\t\t\tthis.setUniformLocation(\"pointDepthMaps[\" + i + \"]\");\r\n\t\t\tgl.uniform1i(this.getUniformLocation(\"pointDepthMaps[\"+ i +\"]\")[0], i);\r\n\t\t}\r\n\t\t\r\n\t\tfor (let i = 0; i < pointLightsToAllocate; i++) {\r\n\t\t\tthis.setUniformLocation(\"pointLights[\" + i + \"].position\");\r\n\t\t\tthis.setUniformLocation(\"pointLights[\" + i + \"].colour\");\r\n\r\n\t\t\tthis.setUniformLocation(\"pointLights[\" + i + \"].constant\");\r\n\t\t\tthis.setUniformLocation(\"pointLights[\" + i + \"].linear\");\r\n\t\t\tthis.setUniformLocation(\"pointLights[\" + i + \"].quadratic\");\r\n\r\n\t\t\tthis.setUniformLocation(\"pointLights[\" + i + \"].pointDepthMapIndex\");\r\n\t\t}\r\n\t}\r\n\r\n\tsetupVertexAttributePointers(): void {\r\n\t\t// Change if input layout changes in shaders\r\n\t\tconst stride = 2 * 4;\r\n\t\tgl.vertexAttribPointer(0, 2, gl.FLOAT, false, stride, 0);\r\n\t\tgl.enableVertexAttribArray(0);\r\n\t}\r\n}\r\n\r\nexport let volumetricGodRayShaderProgram: VolumetricGodRaysShaderProgram = null;\r\n\r\nexport let createVolumetricGodRayShaderProgram = function () {\r\n\r\nvolumetricGodRayFragmentShaderSrc = `#version 300 es\r\nprecision highp float;\r\n\r\n#define NR_POINT_LIGHTS ` +\r\n\tpointLightsToAllocate +\r\n`\r\n#define NR_POINT_SHADOWS ` +\r\n\tpointShadowsToAllocate +\r\n`\r\nin vec3 fragPos;\r\nflat in float numberPlanes;\r\nflat in float fogMD;\r\nflat in int instanceID;\r\n\r\nuniform samplerCube pointDepthMaps[NR_POINT_SHADOWS];\r\n\r\nstruct PointLight {\r\n\tvec3 position;\r\n\tvec3 colour;\r\n\r\n\tfloat constant;\r\n\tfloat linear;\r\n\tfloat quadratic;\r\n\r\n\tint pointDepthMapIndex;\r\n};\r\n\r\nstruct DirectionalLight {\r\n\tvec3 direction;\r\n\tvec3 colour;\r\n\tfloat ambientMultiplier;\r\n};\r\n\r\nuniform PointLight pointLights[NR_POINT_LIGHTS];\r\nuniform int nrOfPointLights;\r\n\r\nout vec4 FragColor;\r\nconst float far_plane = 100.0;\r\n\r\nfloat CalcPointShadow(PointLight light, vec3 fragmentPos) {\r\n\t// get vector between fragment position and light position\r\n    vec3 fragToLight = fragmentPos - light.position;\r\n\tfragToLight.y *= -1.0;\r\n\tfragToLight.z *= -1.0;\r\n    // use the light to fragment vector to sample from the depth map\r\n    float closestDepth = 1.0;`\r\n\t// Below is ugly, but I have to unroll the loop to be able to acces the pointDepthMaps array with a compile time index, as run-time index is not allowed to access a sampler\r\n\tfor (let i = 0; i < pointShadowsToAllocate; i++) {\r\n\t\tif (i == 0) {\r\n\t\t\tvolumetricGodRayFragmentShaderSrc += `\r\n\tif (light.pointDepthMapIndex == ` + i + `) {\r\n\t\tclosestDepth = texture(pointDepthMaps[` + i + `], fragToLight).r;\r\n\t}\r\n\t`\r\n\t\t} else {\r\n\t\t\tvolumetricGodRayFragmentShaderSrc += `\r\n\telse if (light.pointDepthMapIndex == ` + i + `) {\r\n\t\tclosestDepth = texture(pointDepthMaps[` + i + `], fragToLight).r;\r\n\t}\r\n\t`\r\n\t\t}\r\n\t}\r\n\t\r\n\tvolumetricGodRayFragmentShaderSrc += `\r\n    // it is currently in linear range between [0,1]. Re-transform back to original value\r\n    closestDepth *= far_plane;\r\n    // now get current linear depth as the length between the fragment and light position\r\n    float currentDepth = length(fragToLight);\r\n    // now test for shadows\r\n    float bias = 0.0;\r\n    float shadow = currentDepth -  bias > closestDepth ? 1.0 : 0.0;\r\n\r\n    return shadow;\r\n}\r\n\r\n// Calculates the colour when using a point light.\r\nvec4 CalcPointLight(PointLight light, vec3 fragmentPos) {\r\n\tif (light.pointDepthMapIndex >= 0 && light.pointDepthMapIndex < NR_POINT_SHADOWS && CalcPointShadow(light, fragmentPos) == 0.0) {\r\n\t\tfloat distance = max(length(light.position - fragmentPos), 20.0);\r\n\t\tfloat attenuation = 1.0f / (light.constant + light.linear * distance + light.quadratic * (distance * distance));\r\n\r\n\t\t// attenuation = attenuation * abs(((numberPlanes / 2.0) - float(instanceID))) * 0.05;\r\n\r\n\t\treturn vec4(light.colour * attenuation, 0.03);\r\n\t} \r\n\treturn vec4(0.0, 0.0, 0.0, 0.0);\r\n}\r\n\r\nvoid main()\r\n{\r\n    vec4 result = vec4(0.0, 0.0, 0.0, 0.0);\r\n\tint effectedCounter = 0;\r\n\tfor (int i = 0; i < nrOfPointLights; i++) {\r\n\t\tvec4 lightResult = CalcPointLight(pointLights[i], fragPos);\r\n\t\tif (lightResult.a > 0.0) {\r\n\t\t\teffectedCounter++;\r\n\t\t\tresult += lightResult;\r\n\t\t}\r\n\t}\r\n\tresult.a /= float(effectedCounter);\r\n\r\n    FragColor = result;\r\n}\r\n`;\r\n\r\n\tvolumetricGodRayShaderProgram = new VolumetricGodRaysShaderProgram();\r\n};\r\n","import { gl } from \"../../../main\";\r\nimport Texture from \"./Texture\";\r\n\r\nexport default class CubeMap extends Texture {\r\n\tprivate sidesLoaded: number;\r\n\r\n\tconstructor(\r\n\t\tuseMipMap: boolean = true,\r\n\t\tinternalFormat: number = gl.RGBA,\r\n\t\tformat: number = gl.RGBA,\r\n\t\tdataStorageType: number = gl.UNSIGNED_BYTE,\r\n\t\ttextureTarget: number = gl.TEXTURE_CUBE_MAP\r\n\t) {\r\n\t\tsuper(useMipMap, internalFormat, format, dataStorageType, textureTarget);\r\n\r\n\t\tthis.setTexParameterI(gl.TEXTURE_WRAP_R, gl.REPEAT);\r\n\t\tthis.sidesLoaded = 0;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param data - the data to set for the texture\r\n\t * @param width - width of the texture\r\n\t * @param height - height of the texture\r\n\t * @param face - cubemap face to set, leave empty to set data for all faces\r\n\t */\r\n\tsetTextureData(\r\n\t\tdata: Uint8Array,\r\n\t\twidth: number,\r\n\t\theight: number,\r\n\t\tface?: number\r\n\t) {\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t\tgl.bindTexture(this.textureTarget, this.texture);\r\n\r\n\t\tif (face == undefined) {\r\n\t\t\t// Face not specified, set the data for all sides\r\n\t\t\tfor (let i = 0; i < 6; i++) {\r\n\t\t\t\tgl.texImage2D(\r\n\t\t\t\t\tgl.TEXTURE_CUBE_MAP_POSITIVE_X + i,\r\n\t\t\t\t\t0,\r\n\t\t\t\t\tthis.internalFormat,\r\n\t\t\t\t\tthis.width,\r\n\t\t\t\t\tthis.height,\r\n\t\t\t\t\t0,\r\n\t\t\t\t\tthis.format,\r\n\t\t\t\t\tthis.dataStorageType,\r\n\t\t\t\t\tdata\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// Face specified, set data for the specified face\r\n\t\t\tgl.texImage2D(\r\n\t\t\t\tface,\r\n\t\t\t\t0,\r\n\t\t\t\tthis.internalFormat,\r\n\t\t\t\tthis.width,\r\n\t\t\t\tthis.height,\r\n\t\t\t\t0,\r\n\t\t\t\tthis.format,\r\n\t\t\t\tthis.dataStorageType,\r\n\t\t\t\tdata\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\t// Unbind texture\r\n\t\tgl.bindTexture(this.textureTarget, null);\r\n\t}\r\n\r\n\tloadCubemap(URLs: [string, string, string, string, string, string]) {\r\n\t\tfor (let i = 0; i < URLs.length; i++) {\r\n\t\t\tlet image = new Image();\r\n\t\t\timage.crossOrigin = \"\";\r\n\t\t\timage.src = URLs[i];\r\n\t\t\tlet self = this;\r\n\t\t\timage.addEventListener(\"load\", function () {\r\n\t\t\t\t// Now that the image has loaded copy it to the texture and save the width/height.\r\n\t\t\t\tself.width = image.width;\r\n\t\t\t\tself.height = image.height;\r\n\t\t\t\tgl.bindTexture(self.textureTarget, self.texture);\r\n\t\t\t\tgl.texImage2D(\r\n\t\t\t\t\tgl.TEXTURE_CUBE_MAP_POSITIVE_X + i,\r\n\t\t\t\t\t0,\r\n\t\t\t\t\tself.internalFormat,\r\n\t\t\t\t\tself.format,\r\n\t\t\t\t\tself.dataStorageType,\r\n\t\t\t\t\timage\r\n\t\t\t\t);\r\n\t\t\t\tself.sidesLoaded++;\r\n\t\t\t\tif (self.sidesLoaded >= 6) {\r\n\t\t\t\t\tself.loadedFromFile = true;\r\n\t\t\t\t\tif (self.useMipMap) {\r\n\t\t\t\t\t\tgl.generateMipmap(self.textureTarget);\r\n\t\t\t\t\t\tgl.texParameteri(\r\n\t\t\t\t\t\t\tself.textureTarget,\r\n\t\t\t\t\t\t\tgl.TEXTURE_MIN_FILTER,\r\n\t\t\t\t\t\t\tgl.LINEAR_MIPMAP_LINEAR\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n}\r\n","import { gl } from \"../../../main\";\n\nexport default class Texture {\n\t// Public\n\twidth: number;\n\theight: number;\n\ttexture: WebGLTexture;\n\n\tloadedFromFile: boolean;\n\n\tprotected useMipMap: boolean;\n\n\tprotected internalFormat: number;\n\tprotected format: number;\n\tprotected dataStorageType: number;\n\ttextureTarget: number;\n\n\tconstructor(\n\t\tuseMipMap: boolean = true,\n\t\tinternalFormat: number = gl.RGBA,\n\t\tformat: number = gl.RGBA,\n\t\tdataStorageType: number = gl.UNSIGNED_BYTE,\n\t\ttextureTarget: number = gl.TEXTURE_2D\n\t) {\n\t\t// this.missingTextureData = new Uint8Array([\n\t\t//     255, 255, 255, 255, 0, 0, 0, 255,\n\t\t//     0, 0, 0, 255, 255, 255, 255, 255\n\t\t// ]);\n\n\t\tthis.useMipMap = useMipMap;\n\n\t\tthis.internalFormat = internalFormat;\n\t\tthis.format = format;\n\t\tthis.dataStorageType = dataStorageType;\n\t\tthis.textureTarget = textureTarget;\n\n\t\t// Generate texture\n\t\tthis.texture = gl.createTexture();\n\t\tgl.bindTexture(this.textureTarget, this.texture);\n\n\t\t// Set texture parameters\n\t\tgl.texParameteri(this.textureTarget, gl.TEXTURE_WRAP_S, gl.REPEAT);\n\t\tgl.texParameteri(this.textureTarget, gl.TEXTURE_WRAP_T, gl.REPEAT);\n\t\tgl.texParameteri(this.textureTarget, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\tgl.texParameteri(this.textureTarget, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\t\tgl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n\n\t\t// Make a 1 by 1 empty texture\n\t\tthis.setTextureData(null, 1, 1);\n\n\t\tgl.bindTexture(this.textureTarget, null);\n\t}\n\n\tsetTextureData(data: Uint8Array, width: number, height: number) {\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tgl.bindTexture(this.textureTarget, this.texture);\n\t\tgl.texImage2D(\n\t\t\tthis.textureTarget,\n\t\t\t0,\n\t\t\tthis.internalFormat,\n\t\t\twidth,\n\t\t\theight,\n\t\t\t0,\n\t\t\tthis.format,\n\t\t\tthis.dataStorageType,\n\t\t\tdata\n\t\t);\n\t\tif (this.useMipMap) {\n\t\t\tgl.generateMipmap(this.textureTarget);\n\t\t\tgl.texParameteri(\n\t\t\t\tthis.textureTarget,\n\t\t\t\tgl.TEXTURE_MIN_FILTER,\n\t\t\t\tgl.LINEAR_MIPMAP_LINEAR\n\t\t\t);\n\t\t}\n\t\tgl.bindTexture(this.textureTarget, null);\n\n\t\tthis.loadedFromFile = false;\n\t}\n\n\tbind(textureIndex: number = 0) {\n\t\tgl.activeTexture(gl.TEXTURE0 + textureIndex);\n\t\tgl.bindTexture(this.textureTarget, this.texture);\n\t}\n\n\tloadFromFile(URL: string) {\n\t\tlet image = new Image();\n\t\timage.crossOrigin = \"\";\n\t\timage.src = URL;\n\t\tlet self = this;\n\t\timage.addEventListener(\"load\", function () {\n\t\t\t// Now that the image has loaded copy it to the texture and save the width/height.\n\t\t\tself.width = image.width;\n\t\t\tself.height = image.height;\n\t\t\tgl.bindTexture(self.textureTarget, self.texture);\n\t\t\tgl.texImage2D(\n\t\t\t\tself.textureTarget,\n\t\t\t\t0,\n\t\t\t\tself.internalFormat,\n\t\t\t\tself.format,\n\t\t\t\tself.dataStorageType,\n\t\t\t\timage\n\t\t\t);\n\t\t\tif (self.useMipMap) {\n\t\t\t\tgl.generateMipmap(self.textureTarget);\n\t\t\t\tgl.texParameteri(\n\t\t\t\t\tself.textureTarget,\n\t\t\t\t\tgl.TEXTURE_MIN_FILTER,\n\t\t\t\t\tgl.LINEAR_MIPMAP_LINEAR\n\t\t\t\t);\n\t\t\t}\n\t\t\tself.loadedFromFile = true;\n\t\t});\n\t}\n\n\tcreateFromCSSColorValue(colorValue: string) {\n\t\tlet r = 0;\n\t\tlet g = 0;\n\t\tlet b = 0;\n\t\tlet a = 255;\n\t\tif (colorValue.startsWith(\"#\")) {\n\t\t\t// Hex\n\t\t\tif (colorValue.length >= 7) {\n\t\t\t\tr = parseInt(colorValue.slice(1, 3), 16);\n\t\t\t\tg = parseInt(colorValue.slice(3, 5), 16);\n\t\t\t\tb = parseInt(colorValue.slice(5, 7), 16);\n\t\t\t\tif (colorValue.length == 9) {\n\t\t\t\t\ta = parseInt(colorValue.slice(7, 9), 16);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (colorValue.startsWith(\"rgba(\")) {\n\t\t\tlet rfindResult = colorValue.lastIndexOf(\")\");\n\t\t\tlet values = colorValue.substring(\"rgba(\".length, rfindResult).split(\",\").map((value) => {\n\t\t\t\treturn parseFloat(value);\n\t\t\t});\n\t\t\tr = values[0];\n\t\t\tg = values[1];\n\t\t\tb = values[2];\n\t\t\ta = values[3] * 255;\n\t\t}\n\t\telse if (colorValue.startsWith(\"rgb(\")) {\n\t\t\tlet rfindResult = colorValue.lastIndexOf(\")\");\n\t\t\tlet values = colorValue.substring(\"rgb(\".length, rfindResult).split(\",\").map((value) => {\n\t\t\t\treturn parseInt(value);\n\t\t\t});\n\t\t\tr = values[0];\n\t\t\tg = values[1];\n\t\t\tb = values[2];\n\t\t}\n\n\t\tthis.setTextureData(new Uint8Array([r,g,b,a]), 1, 1);\n\t}\n\n\tsetTexParameterI(a: number, b: number) {\n\t\tgl.bindTexture(this.textureTarget, this.texture);\n\t\tgl.texParameteri(this.textureTarget, a, b);\n\t\tgl.bindTexture(this.textureTarget, null);\n\t}\n}\n\n// Texture::~Texture() {\n// \tglDeleteTextures(1, &m_texture);\n// }\n","export enum StatesEnum {\n\tSTAY,\n\tLOADINGSCREEN,\n\tMAINMENU,\n\tOPTIONS,\n\tCONTROLS,\n\tGAME,\n\tDEBUGMODE,\n\tLEVELSELECT,\n}\n\nexport default class State {\n\t/*\n\t * Set this to the enum for the state you want the state machine to move to.\n\t * Leave it at STAY to keep running the current state.\n\t */\n\tgotoState: StatesEnum;\n\tinitialized: boolean;\n\n\tconstructor() {\n\t\tthis.gotoState = StatesEnum.STAY;\n\t\tthis.initialized = false;\n\t}\n\n\tasync init() {}\n\n\treset() {}\n\n\tonExit(e: BeforeUnloadEvent) {}\n\n\tupdate(dt: number) {}\n\n\tprepareDraw(dt: number) {}\n\n\tdraw() {}\n}\n","import State, { StatesEnum } from \"./State\";\n\nexport default class StateMachine {\n\tstates: Map<\n\t\tStatesEnum,\n\t\t{ stateType: any; minUpdateRate: number; state: State }\n\t>;\n\n\tprotected fps: number = 0;\n\tprotected currentState: StatesEnum;\n\n\tprivate firstLoop: boolean;\n\n\t// Frame timer variables\n\tprivate lastTick = null;\n\tprivate updateTimer = 0.0;\n\tprivate fpsUpdateTimer = 0.0;\n\tprivate frameCounter = 0;\n\tprivate dt = 0.0;\n\n\tconstructor(startState: StatesEnum) {\n\t\tthis.states = new Map<\n\t\t\tStatesEnum,\n\t\t\t{ stateType: any; minUpdateRate: number; state: State }\n\t\t>();\n\t\tthis.currentState = startState;\n\n\t\tthis.firstLoop = true;\n\t}\n\n\taddState(\n\t\tstateEnum: StatesEnum,\n\t\tstateType: any,\n\t\tminUpdateRate: number,\n\t\tstate: State\n\t) {\n\t\tthis.states.set(stateEnum, {\n\t\t\tstateType: stateType,\n\t\t\tminUpdateRate: minUpdateRate,\n\t\t\tstate: state,\n\t\t});\n\t\tthis.states.get(stateEnum).state.reset();\n\t}\n\n\tupdateFrameTimers() {\n\t\tlet now = Date.now();\n\t\tthis.dt = (now - (this.lastTick || now)) * 0.001;\n\t\tthis.lastTick = now;\n\n\t\tthis.frameCounter++;\n\t\tthis.fpsUpdateTimer += this.dt;\n\n\t\tif (this.fpsUpdateTimer > 0.5) {\n\t\t\tthis.fps = this.frameCounter / this.fpsUpdateTimer;\n\t\t\tthis.fpsUpdateTimer -= 0.5;\n\t\t\tthis.frameCounter = 0;\n\t\t}\n\t}\n\n\tupdateState(state: State, minUpdateRate?: number) {\n\t\tthis.updateFrameTimers();\n\n\t\t// Constant update rate\n\t\tthis.updateTimer += this.dt;\n\t\tlet updatesSinceRender = 0;\n\n\t\tif (minUpdateRate != undefined) {\n\t\t\t//Only update if update timer goes over update rate\n\t\t\twhile (this.updateTimer >= minUpdateRate) {\n\t\t\t\tif (updatesSinceRender >= 20) {\n\t\t\t\t\t// Too many updates, throw away the rest of dt (makes the game run in slow-motion)\n\t\t\t\t\tthis.updateTimer = 0;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tstate.update(minUpdateRate);\n\t\t\t\tthis.updateTimer -= minUpdateRate;\n\t\t\t\tupdatesSinceRender++;\n\t\t\t}\n\t\t}\n\n\t\tif (updatesSinceRender == 0) {\n\t\t\t// dt is faster than min update rate, or no min update rate is set\n\t\t\tstate.update(this.updateTimer);\n\t\t\tthis.updateTimer = 0.0;\n\t\t}\n\n\t\tstate.prepareDraw(this.dt);\n\n\t\tif (!this.firstLoop) {\n\t\t\tstate.draw();\n\t\t}\n\n\t\tthis.firstLoop = false;\n\t}\n\n\tasync runCurrentState() {\n\t\tlet currentState = this.states.get(this.currentState)\n\t\tif (!currentState.state.initialized) {\n\t\t\tawait currentState.state.init();\n\t\t\tcurrentState.state.initialized = true;\n\t\t}\n\n\t\t// Update the state\n\t\tthis.updateState(\n\t\t\tcurrentState.state,\n\t\t\tcurrentState.minUpdateRate\n\t\t);\n\n\t\t// Check if we should change state\n\t\tif (currentState.state.gotoState != StatesEnum.STAY) {\n\t\t\tlet oldState = currentState;\n\t\t\tthis.currentState = currentState.state.gotoState;\n\t\t\toldState.state.reset();\n\t\t\toldState.state.initialized = false;\n\t\t\toldState.state.gotoState = StatesEnum.STAY;\n\t\t}\n\n\t\trequestAnimationFrame(this.runCurrentState.bind(this));\n\t}\n\n\tstart() {\n\t\trequestAnimationFrame(this.runCurrentState.bind(this));\n\t}\n}\n","import { ReadonlyVec3, mat4, vec3 } from \"gl-matrix\";\nimport BoundingBoxComponent from \"../ECS/Components/BoundingBoxComponent\";\nimport { ComponentTypeEnum } from \"../ECS/Components/Component\";\nimport MeshCollisionComponent from \"../ECS/Components/MeshCollisionComponent\";\nimport PositionComponent from \"../ECS/Components/PositionComponent\";\nimport PositionParentComponent from \"../ECS/Components/PositionParentComponent\";\nimport Entity from \"../ECS/Entity\";\nimport { IntersectionTester } from \"../Physics/IntersectionTester\";\nimport Ray from \"../Physics/Shapes/Ray\";\nimport Triangle from \"../Physics/Shapes/Triangle\";\nimport MovementComponent from \"../ECS/Components/MovementComponent\";\nimport Shape from \"../Physics/Shapes/Shape\";\n\nexport module ECSUtils {\n\n\t/**\n\t * Calculates the position given all position effecting components (like PositionComponent, PositionParentComponent)\n\t * @param entity The entity for which to calculate the position\n\t * @returns The final position\n\t */\n\texport function CalculatePosition(entity: Entity): vec3 {\n\t\tlet posComp = <PositionComponent>(\n\t\t\tentity.getComponent(ComponentTypeEnum.POSITION)\n\t\t);\n\t\tlet posParentComp = <PositionParentComponent>(\n\t\t\tentity.getComponent(ComponentTypeEnum.POSITIONPARENT)\n\t\t);\n\n\t\tlet tempMatrix = mat4.create();\n\t\tif (posComp == undefined) {\n\t\t\tif (posParentComp == undefined) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tposParentComp.calculateMatrix(tempMatrix);\n\t\t} else {\n\t\t\tif (posParentComp != undefined) {\n\t\t\t\tposParentComp.calculateMatrix(tempMatrix);\n\t\t\t}\n\t\t\tposComp.calculateMatrix(tempMatrix);\n\t\t}\n\n\t\tlet posVector = vec3.transformMat4(vec3.create(), vec3.create(), tempMatrix);\n\t\treturn vec3.fromValues(posVector[0], posVector[1], posVector[2]);\n\t}\n\n\t/**\n\t * Raycasts against a list of entities\n\t * @param ray Ray shape\n\t * @param entities Array of entities to test against\n\t * @returns Object with distance and entity ID of the closest hit\n\t */\n\texport function RayCastAgainstEntityList(ray: Ray, entities: Array<Entity>): {distance: number, eId: number} {\n\t\tlet closest = Infinity;\n\t\tlet eId = -1;\n\n\t\tfor (let e of entities) {\n\t\t\tlet bbComp = e.getComponent(\n\t\t\t\tComponentTypeEnum.BOUNDINGBOX\n\t\t\t) as BoundingBoxComponent;\n\t\t\tif (bbComp == undefined) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tbbComp.boundingBox.setUpdateNeeded();\n\n\t\t\tlet dist = IntersectionTester.doRayCast(\n\t\t\t\tray,\n\t\t\t\t[bbComp.boundingBox],\n\t\t\t\tclosest\n\t\t\t); // Ray cast against bounding box, only caring about hits closer than the previous closest\n\t\t\tif (dist >= 0 && dist < closest) {\n\t\t\t\t// Boundingbox is closer than current closest hit\n\t\t\t\t// Ray cast against mesh if there is one, only caring about hits closer than the previous closest\n\t\t\t\t\n\t\t\t\tlet meshColComp = e.getComponent(\n\t\t\t\t\tComponentTypeEnum.MESHCOLLISION\n\t\t\t\t) as MeshCollisionComponent;\n\t\t\t\tif (meshColComp != undefined) {\n\t\t\t\t\tray.setInverseMatrix(mat4.invert(mat4.create(), bbComp.boundingBox.getTransformMatrix()));\n\t\t\t\t\tlet shapeArray = new Array<Triangle>();\n\t\t\t\t\tmeshColComp.octree.getShapesForRayCast(ray, shapeArray, closest);\n\t\t\t\t\tdist = IntersectionTester.doRayCast(ray, shapeArray, closest);\n\t\t\t\t\tray.setInverseMatrix(mat4.create());\n\t\t\t\t}\n\n\t\t\t\tif (dist >= 0.0 && dist < closest) {\n\t\t\t\t\t// Hit is still closer than current closest\n\t\t\t\t\t// Update the closest information and save the object for editing\n\t\t\t\t\tclosest = dist;\n\t\t\t\t\teId = e.id;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn {distance: closest, eId: eId};\n\t}\n\n\t/**\n\t * Calculates when an entity (A) will collide with any of the entities in array \"entities\", if they remain on the same course and velocity (this will not take acceleration into account, so this needs to be recalculated if any forces/accelerations are applied to any involved entity)\n\t * @param entityA Entity A\n\t * @param entityAVel The velocity of Entity A\n\t * @param entities The other entities to test collision time against\n\t * @param max A cap of how far into the future this function will detect a collision\n\t * @param allow0Collision If collisions happening right now should be included in the test\n\t * @returns Object with time for collision, entity ID for which entity the collision will be with, and an intersecton vector with the normal of the surface entity will collide with.\n\t */\n\texport function CalculateCollisionTime(entityA: Entity, entityAVel: ReadonlyVec3, entities: Array<Entity>, max: number, allow0Collision: boolean = true): {time: number, eId: number, intersectionVec: vec3} {\n\t\tlet earliest = Infinity;\n\t\tlet eId = -1;\n\t\tlet intersectionVec = null;\n\n\t\tlet entityABBComp = entityA.getComponent(ComponentTypeEnum.BOUNDINGBOX) as BoundingBoxComponent;\n\t\tif (entityABBComp == undefined) {\n\t\t\treturn {time: earliest, eId: eId, intersectionVec: intersectionVec};\n\t\t}\n\n\t\tentityABBComp.boundingBox.setUpdateNeeded();\n\n\t\tconst entityAMeshColComp = entityA.getComponent(\n\t\t\tComponentTypeEnum.MESHCOLLISION\n\t\t) as MeshCollisionComponent;\n\n\t\tfor (let entityB of entities) {\n\t\t\tlet entityBBBComp = entityB.getComponent(\n\t\t\t\tComponentTypeEnum.BOUNDINGBOX\n\t\t\t) as BoundingBoxComponent;\n\t\t\tif (entityBBBComp == undefined) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet entityBMovComp = entityB.getComponent(ComponentTypeEnum.MOVEMENT) as MovementComponent;\n\t\t\tlet entityBVel = vec3.create();\n\t\t\tif (entityBMovComp != undefined) {\n\t\t\t\tvec3.copy(entityBVel, entityBMovComp.velocity);\n\t\t\t}\n\n\t\t\tentityBBBComp.boundingBox.setUpdateNeeded();\n\n\t\t\tlet [dist, iVec] = IntersectionTester.doContinousIntersection(\n\t\t\t\t[entityABBComp.boundingBox],\n\t\t\t\tentityAVel,\n\t\t\t\t[entityBBBComp.boundingBox],\n\t\t\t\tentityBVel,\n\t\t\t\tMath.min(earliest, max)\n\t\t\t);\n\t\t\tif (dist >= 0.0 && dist < earliest) {\n\t\t\t\t// Boundingbox collisions are closer than current closest hit\n\t\t\t\t// Continous collision check against mesh if there is one, only caring about hits closer than the previous closest\n\t\t\t\t\n\t\t\t\tlet shapeBArray = new Array<Shape>();\n\n\t\t\t\tconst entityBMeshColComp = entityB.getComponent(\n\t\t\t\t\tComponentTypeEnum.MESHCOLLISION\n\t\t\t\t) as MeshCollisionComponent;\n\n\n\t\t\t\tif (entityBMeshColComp != undefined) {\n\t\t\t\t\tconst inverseMatrix = mat4.invert(mat4.create(), entityBBBComp.boundingBox.getTransformMatrix());\n\t\t\t\t\t\n\t\t\t\t\tentityABBComp.boundingBox.setInverseMatrix(inverseMatrix);\n\n\t\t\t\t\tlet localShapeArray = new Array<Shape>();\n\t\t\t\t\t\n\t\t\t\t\tentityBMeshColComp.octree.getShapesForContinousCollision(\n\t\t\t\t\t\tentityABBComp.boundingBox, \n\t\t\t\t\t\t// Use velocities in local space for entity B\n\t\t\t\t\t\tvec3.transformMat4(vec3.create(), entityAVel, inverseMatrix),\n\t\t\t\t\t\tvec3.transformMat4(vec3.create(), entityBVel, inverseMatrix),\n\t\t\t\t\t\tlocalShapeArray,\n\t\t\t\t\t\tMath.min(earliest, max)\n\t\t\t\t\t);\n\t\t\t\t\tentityABBComp.boundingBox.setInverseMatrix(mat4.create());\n\n\t\t\t\t\t// Convert shapes to world space\n\t\t\t\t\tfor (let shape of localShapeArray) {\n\t\t\t\t\t\tlet index = shapeBArray.push(new Triangle()) - 1;\n\t\t\t\t\t\tlet shapeOriginalVertices = shape.getOriginalVertices();\n\t\t\t\t\t\t(<Triangle>shapeBArray[index]).setVertices(shapeOriginalVertices[0], shapeOriginalVertices[1], shapeOriginalVertices[2]);\n\t\t\t\t\t\t(<Triangle>shapeBArray[index]).setTransformMatrix(entityBBBComp.boundingBox.getTransformMatrix());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tshapeBArray.push(entityBBBComp.boundingBox);\n\t\t\t\t}\n\n\n\t\t\t\tlet shapeAArray = new Array<Shape>();\n\n\t\t\t\tif (entityAMeshColComp != undefined) {\n\t\t\t\t\tconst inverseMatrix = mat4.invert(mat4.create(), entityABBComp.boundingBox.getTransformMatrix());\n\t\t\t\t\t\n\t\t\t\t\tentityBBBComp.boundingBox.setInverseMatrix(inverseMatrix);\n\n\t\t\t\t\tlet localShapeArray = new Array<Shape>();\n\t\t\t\t\t\n\t\t\t\t\tentityAMeshColComp.octree.getShapesForContinousCollision(\n\t\t\t\t\t\tentityBBBComp.boundingBox, \n\t\t\t\t\t\t// Use velocities in local space for entity B\n\t\t\t\t\t\tvec3.transformMat4(vec3.create(), entityBVel, inverseMatrix),\n\t\t\t\t\t\tvec3.transformMat4(vec3.create(), entityAVel, inverseMatrix),\n\t\t\t\t\t\tlocalShapeArray,\n\t\t\t\t\t\tMath.min(earliest, max)\n\t\t\t\t\t);\n\t\t\t\t\tentityBBBComp.boundingBox.setInverseMatrix(mat4.create());\n\n\t\t\t\t\t// Convert shapes to world space\n\t\t\t\t\tfor (let shape of localShapeArray) {\n\t\t\t\t\t\tlet index = shapeAArray.push(new Triangle()) - 1;\n\t\t\t\t\t\tlet shapeOriginalVertices = shape.getOriginalVertices();\n\t\t\t\t\t\t(<Triangle>shapeAArray[index]).setVertices(shapeOriginalVertices[0], shapeOriginalVertices[1], shapeOriginalVertices[2]);\n\t\t\t\t\t\t(<Triangle>shapeAArray[index]).setTransformMatrix(entityABBComp.boundingBox.getTransformMatrix());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tshapeAArray.push(entityABBComp.boundingBox);\n\t\t\t\t}\n\n\t\t\t\t[dist, iVec] = IntersectionTester.doContinousIntersection(\n\t\t\t\t\tshapeAArray,\n\t\t\t\t\tentityAVel,\n\t\t\t\t\tshapeBArray,\n\t\t\t\t\tentityBVel,\n\t\t\t\t\tMath.min(earliest, max),\n\t\t\t\t\tallow0Collision\n\t\t\t\t);\n\n\t\t\t\tif (((allow0Collision && dist >= 0.0) || dist > 0.0) && (dist < earliest|| dist > 0.0)) {\n\t\t\t\t\t// Hit is still closer than current closest\n\t\t\t\t\t// Update the closest information and save the object for editing\n\t\t\t\t\tearliest = dist;\n\t\t\t\t\teId = entityB.id;\n\t\t\t\t\tintersectionVec = iVec;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn {time: earliest, eId: eId, intersectionVec: intersectionVec};\n\t}\n\n\t/**\n\t * Assumes intersection, finds the smallest overlap\n\t * @param entityA entityA\n\t * @param entityB entityB\n\t * @returns Intersection information array, all intersections will point from EntityB to EntityA\n\t */\n\texport function GetIntersectionInformation(entityA: Entity, entityB: Entity): Array<IntersectionTester.IntersectionInformation> {\n\t\tlet entityABBComp = entityA.getComponent(ComponentTypeEnum.BOUNDINGBOX) as BoundingBoxComponent;\n\t\tif (entityABBComp == undefined) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet entityBBBComp = entityB.getComponent(ComponentTypeEnum.BOUNDINGBOX) as BoundingBoxComponent;\n\t\tif (entityBBBComp == undefined) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet info = new Array<IntersectionTester.IntersectionInformation>();\n\t\tIntersectionTester.identifyIntersectionInformation([entityABBComp.boundingBox], [entityBBBComp.boundingBox], info);\n\t\treturn info;\n\t}\n}\n","export module WebUtils {\n\t/**\n\t * Will get the content of cookie with name cookieName\n\t * @param cookieName Name of cookie\n\t * @returns Content\n\t */\n\texport function GetCookie(cookieName: string): string {\n\t\tlet name = cookieName + \"=\";\n\t\tlet decodedCookie = decodeURIComponent(document.cookie);\n\t\tlet ca = decodedCookie.split(\";\");\n\n\t\tfor (let i = 0; i < ca.length; i++) {\n\t\t\tlet c = ca[i];\n\t\t\twhile (c.charAt(0) == \" \") {\n\t\t\t\tc = c.substring(1);\n\t\t\t}\n\t\t\tif (c.indexOf(name) == 0) {\n\t\t\t\treturn c.substring(name.length, c.length);\n\t\t\t}\n\t\t}\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Will set the content of a cookie\n\t * @param cookieName Cookie name\n\t * @param cookieValue Cookie value\n\t * @param daysToLast How long the cookie should be valid\n\t */\n\texport function SetCookie(\n\t\tcookieName: string,\n\t\tcookieValue: string,\n\t\tdaysToLast: number = 365\n\t) {\n\t\tconst d = new Date();\n\t\td.setTime(d.getTime() + daysToLast * 24 * 60 * 60 * 1000);\n\t\tlet expires = \"expires=\" + d.toUTCString();\n\t\tdocument.cookie = cookieName + \"=\" + cookieValue + \";\" + expires;\n\t}\n\n\t/**\n\t * Delete cookie\n\t * @param cookieName Cookie name\n\t */\n\texport function DeleteCookie(cookieName: string) {\n\t\tdocument.cookie = cookieName + \"=;expires=Thu, 01 Jan 1970 00:00:00 UTC\";\n\t}\n\n\t/**\n\t * Will start a download of a file with filename and content text\n\t * @param filename File name\n\t * @param text Content\n\t */\n\texport function DownloadFile(filename, text) {\n\t\tlet element = document.createElement(\"a\");\n\t\telement.setAttribute(\n\t\t\t\"href\",\n\t\t\t\"data:text/plain;charset=utf-8,\" + encodeURIComponent(text)\n\t\t);\n\t\telement.setAttribute(\"download\", filename);\n\n\t\telement.style.display = \"none\";\n\t\tdocument.body.appendChild(element);\n\n\t\telement.click();\n\n\t\tdocument.body.removeChild(element);\n\t}\n\n\t/**\n\t * Will download a file that exists on URL filepath, for example a resource file\n\t * @param filepath File path\n\t * @param filename File name\n\t */\n\texport function DownloadExistingFile(filepath: string, filename: string) {\n\t\tlet element = document.createElement(\"a\");\n\t\telement.setAttribute(\n\t\t\t\"href\",\n\t\t\tfilepath\n\t\t);\n\t\telement.setAttribute(\"download\", filename);\n\n\t\telement.style.display = \"none\";\n\t\tdocument.body.appendChild(element);\n\n\t\telement.click();\n\n\t\tdocument.body.removeChild(element);\n\t}\n}\n","import AudioPlayer from \"../Engine/Audio/AudioPlayer\";\nimport TextObject2D from \"../Engine/Rendering/GUI/Objects/Text/TextObject2D\";\nimport Input from \"../Engine/Input/Input\";\nimport MeshStore from \"../Engine/AssetHandling/MeshStore\";\nimport State, { StatesEnum } from \"../Engine/States/State\";\nimport StateMachine from \"../Engine/States/StateMachine\";\nimport TextureStore from \"../Engine/AssetHandling/TextureStore\";\nimport ControlsMenu from \"./States/ControlsMenu\";\nimport DebugMode from \"./States/DebugMode\";\nimport Game from \"./States/Game\";\nimport LoadingScreen from \"./States/LoadingScreen\";\nimport Menu from \"./States/Menu\";\nimport OptionsMenu from \"./States/OptionsMenu\";\nimport { WebUtils } from \"../Engine/Utils/WebUtils\";\nimport { OverlayRendering } from \"../Engine/Rendering/GUI/OverlayRendering\";\nimport LevelSelect from \"./States/LevelSelect\";\n// Globals\nexport let input = new Input();\nexport let options = {\n\tuseCrt: false,\n\tuseBloom: false,\n\tfoldableGrass: false,\n\tshowFps: true,\n\tgrassDensity: 10000,\n\tmusicVolume: 0.05,\n\teffectVolume: 0.05,\n};\n\n/**\n * These are the variables available to all the states\n */\nexport class StateAccessible {\n\ttextureStore: TextureStore;\n\tmeshStore: MeshStore;\n\taudioPlayer: AudioPlayer;\n\trestartGame: boolean;\n\tlocalGame: boolean;\n\tlevel: string;\n}\n\nexport default class GameMachine extends StateMachine {\n\tstateAccessible: StateAccessible;\n\n\tprivate overlayRendering: OverlayRendering;\n\tprivate fpsDisplay: TextObject2D;\n\n\tconstructor() {\n\t\tsuper(StatesEnum.LOADINGSCREEN);\n\t\tthis.initializeOptions();\n\t\tthis.stateAccessible = new StateAccessible();\n\t\tthis.stateAccessible.textureStore = new TextureStore();\n\t\tthis.stateAccessible.meshStore = new MeshStore(this.stateAccessible.textureStore);\n\t\tthis.stateAccessible.audioPlayer= new AudioPlayer(),\n\t\tthis.stateAccessible.restartGame= false,\n\t\tthis.stateAccessible.localGame= true,\n\t\tthis.stateAccessible.audioPlayer.setMusicVolume(options.musicVolume);\n\t\tthis.stateAccessible.audioPlayer.setSoundEffectVolume(options.effectVolume);\n\n\t\tlet game = Game.getInstance(this.stateAccessible);\n\n\t\t// Add states\n\t\tthis.addState(\n\t\t\tStatesEnum.LOADINGSCREEN,\n\t\t\tLoadingScreen,\n\t\t\t1 / 60.0,\n\t\t\tnew LoadingScreen(this.stateAccessible)\n\t\t);\n\t\tthis.addState(\n\t\t\tStatesEnum.MAINMENU,\n\t\t\tMenu,\n\t\t\t1.0 / 60.0,\n\t\t\tnew Menu(this.stateAccessible)\n\t\t);\n\t\tthis.addState(\n\t\t\tStatesEnum.LEVELSELECT,\n\t\t\tLevelSelect,\n\t\t\t1.0 / 60.0,\n\t\t\tnew LevelSelect(this.stateAccessible)\n\t\t);\n\t\tthis.addState(\n\t\t\tStatesEnum.OPTIONS,\n\t\t\tOptionsMenu,\n\t\t\t1.0 / 60.0,\n\t\t\tnew OptionsMenu(this.stateAccessible)\n\t\t);\n\t\tthis.addState(\n\t\t\tStatesEnum.CONTROLS,\n\t\t\tControlsMenu,\n\t\t\t1.0 / 60.0,\n\t\t\tnew ControlsMenu(this.stateAccessible)\n\t\t);\n\t\tthis.addState(StatesEnum.GAME, Game, 1.0 / 144.0, game);\n\t\tthis.stateAccessible.restartGame = true;\n\t\t\n\t\tthis.addState(\n\t\t\tStatesEnum.DEBUGMODE,\n\t\t\tDebugMode,\n\t\t\t1.0 / 144.0,\n\t\t\tnew DebugMode(this.stateAccessible, game)\n\t\t);\n\n\t\tthis.overlayRendering = new OverlayRendering();\n\t\tthis.fpsDisplay = this.overlayRendering.getNew2DText();\n\t\tthis.fpsDisplay.position[0] = 0.01;\n\t\tthis.fpsDisplay.position[1] = 0.01;\n\t\tthis.fpsDisplay.size = 18;\n\t\tthis.fpsDisplay.scaleWithWindow = false;\n\t\tthis.fpsDisplay.getElement().style.color = \"lime\";\n\t}\n\n\tonExit(e: BeforeUnloadEvent) {\n\t\tWebUtils.SetCookie(\"showFps\", options.showFps.valueOf().toString());\n\t\tWebUtils.SetCookie(\"useCrt\", options.useCrt.valueOf().toString());\n\t\tWebUtils.SetCookie(\"useBloom\", options.useBloom.valueOf().toString());\n\t\tWebUtils.SetCookie(\"volume\", options.musicVolume.toString());\n\t\tWebUtils.SetCookie(\"effectVolume\", options.effectVolume.toString());\n\t\tWebUtils.SetCookie(\"foldableGrass\",\toptions.foldableGrass.valueOf().toString());\n\t\tWebUtils.SetCookie(\"grassDensity\", options.grassDensity.toString());\n\n\t\tfor (let s of this.states) {\n\t\t\ts[1].state.onExit(e);\n\t\t}\n\t}\n\n\tinitializeOptions() {\n\t\toptions.showFps = !(WebUtils.GetCookie(\"showFps\") == \"false\");\n\t\toptions.useCrt = WebUtils.GetCookie(\"useCrt\") == \"true\";\n\t\toptions.useBloom = WebUtils.GetCookie(\"useBloom\") == \"true\";\n\t\tlet volumeCookie = WebUtils.GetCookie(\"volume\");\n\t\tif (volumeCookie != \"\") {\n\t\t\toptions.musicVolume = parseFloat(volumeCookie);\n\t\t}\n\t\tlet effectVolumeCookie = WebUtils.GetCookie(\"effectVolume\");\n\t\tif (effectVolumeCookie != \"\") {\n\t\t\toptions.effectVolume = parseFloat(effectVolumeCookie);\n\t\t}\n\n\t\toptions.foldableGrass = WebUtils.GetCookie(\"foldableGrass\") == \"true\";\n\t\tlet grassDensityCookie = WebUtils.GetCookie(\"grassDensity\");\n\t\tif (grassDensityCookie != \"\") {\n\t\t\toptions.grassDensity = parseFloat(grassDensityCookie);\n\t\t}\n\t}\n\n\tasync runCurrentState() {\n\t\tthis.fpsDisplay.setHidden(!options.showFps);\n\t\tthis.fpsDisplay.textString = Math.round(this.fps) + \"\";\n\t\tthis.overlayRendering.draw();\n\t\tsuper.runCurrentState();\n\t}\n}\n","import { vec2, vec3 } from \"gl-matrix\";\nimport Scene from \"../Engine/Rendering/Scene\";\nimport PositionComponent from \"../Engine/ECS/Components/PositionComponent\";\nimport MovementComponent from \"../Engine/ECS/Components/MovementComponent\";\nimport Entity from \"../Engine/ECS/Entity\";\nimport BoundingBoxComponent from \"../Engine/ECS/Components/BoundingBoxComponent\";\nimport { input } from \"./GameMachine\";\nimport Game from \"./States/Game\";\nimport { ECSUtils } from \"../Engine/Utils/ESCUtils\";\nimport { OverlayRendering } from \"../Engine/Rendering/GUI/OverlayRendering\";\nimport TextObject2D from \"../Engine/Rendering/GUI/Objects/Text/TextObject2D\";\nimport MeshCollisionComponent from \"../Engine/ECS/Components/MeshCollisionComponent\";\nimport MeshStore from \"../Engine/AssetHandling/MeshStore\";\nimport GraphicsComponent from \"../Engine/ECS/Components/GraphicsComponent\";\nimport Ray from \"../Engine/Physics/Shapes/Ray\";\nimport { ComponentTypeEnum } from \"../Engine/ECS/Components/Component\";\nimport { StatesEnum } from \"../Engine/States/State\";\n\nconst AllCollisionEntities = \"Box || Box Pink || Box Gray || Box Green || Diamond || Sphere || Museum || Police car\";\nconst OnlyMovingCollisionEntities = \"Moving Box\"; // Doesn't actually exist yet\n\nconst BallScaleFactor = 0.5;\n\nexport default class GolfBall {\n    private scene: Scene;\n\tprivate game: Game;\n\tprivate meshStore: MeshStore;\n\n    private entity: Entity;\n\tprivate positionComp: PositionComponent;\n    private movComp: MovementComponent;\n\n\tprivate previewEntity: Entity;\n\tprivate previewPositionComp: PositionComponent;\n\n    private mouseWasPressed: boolean;\n\tprivate mouseRightWasPressed: boolean;\n\n\tprivate mouseMovement: vec2;\n\tprivate jawPitch: vec2;\n\n\tprivate direction: vec3;\n\tprivate nextDirection: vec3;\n\tprivate nextBounceVec: vec3;\n\tprivate nextBounceTime: number;\n\tprivate nextBounceEntityId: number;\n\tprivate lastBounceTime: number;\n\tprivate bounceLimit: number;\n\tprivate currentBounces: number;\n\tprivate bounceLimitDisplay: TextObject2D;\n\n    constructor(scene: Scene, game: Game, overlayRendering: OverlayRendering, meshStore: MeshStore) {\n        this.scene = scene;\n\t\tthis.game = game;\n\t\tthis.meshStore = meshStore;\n\n\t\tthis.bounceLimitDisplay = overlayRendering.getNew2DText();\n\t\tvec2.set(this.bounceLimitDisplay.position, 0.5, 0.05);\n\t\tthis.bounceLimitDisplay.center = true;\n\t\tthis.bounceLimitDisplay.textString = \"1\";\n\n\t\tthis.jawPitch = vec2.create();\n\t\tthis.mouseMovement = vec2.create();\n\t\tinput.mouseMoveCallBack = (event: MouseEvent) => {\n\t\t\tif (input.mouseRightClicked) {\n\t\t\t\tlet movX = event.movementX;\n\t\t\t\tlet movY = event.movementY;\n\n\t\t\t\tif (Math.abs(movX) > window.innerWidth * 0.3) {\n\t\t\t\t\tmovX = 0.0;\n\t\t\t\t}\n\n\t\t\t\tif (Math.abs(movY) > window.innerHeight * 0.3) {\n\t\t\t\t\tmovY = 0.0;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvec2.sub(this.mouseMovement, this.mouseMovement, vec2.fromValues(movX, movY));\n\t\t\t}\n\t\t}\n\n\t\tthis.direction = vec3.create();\n\t\tthis.nextDirection = vec3.create();\n\t\tthis.nextBounceVec = vec3.create();\n\t\tthis.nextBounceTime = Infinity;\n\t\tthis.nextBounceEntityId = -1;\n\t\tthis.lastBounceTime = 0.0;\n\t\tthis.bounceLimit = 1;\n\t\t\n\t\tthis.mouseWasPressed = true;\n\t\tthis.mouseRightWasPressed = true;\n\n\t\tthis.positionComp = new PositionComponent();\n\t\tvec3.set(this.positionComp.scale, BallScaleFactor, BallScaleFactor, BallScaleFactor);\n        this.entity = this.game.ecsManager.createEntity();\n\t\tthis.game.ecsManager.addComponent(this.entity, this.positionComp);\n        let boundingBoxComp = new BoundingBoxComponent();\n\t\tboundingBoxComp.boundingBox.setMinAndMaxVectors(\n\t\t\tvec3.fromValues(-1.0, -1.0, -1.0),\n\t\t\tvec3.fromValues(1.0, 1.0, 1.0)\n\t\t);\n\t\tboundingBoxComp.updateTransformMatrix(this.positionComp.matrix);\n\t\tthis.game.ecsManager.addComponent(this.entity, boundingBoxComp);\n\n        // let collisionComp = new CollisionComponent();\n\t\t// collisionComp.mass = 20.0;\n\t\t// collisionComp.frictionCoefficient = 1.0;\n\t\t// collisionComp.collisionCoefficient = 0.0;\n\t\t// this.game.ecsManager.addComponent(this.entity, collisionComp);\n\n\t\tthis.movComp = new MovementComponent();\n\t\tthis.movComp.drag = 0.0;\n        vec3.zero(this.movComp.constantAcceleration);\n\t\tthis.game.ecsManager.addComponent(this.entity, this.movComp);\n\n\t\tthis.previewEntity = this.game.ecsManager.createEntity();\n\t\tthis.previewPositionComp = new PositionComponent();\n\t\tvec3.set(this.previewPositionComp.scale, 0.0, 0.0, 0.0);\n\t\tthis.game.ecsManager.addComponent(this.previewEntity, this.previewPositionComp);\n    }\n\n\tinit () {\n\t\tif (!this.previewEntity.hasComponent(ComponentTypeEnum.GRAPHICS)) {\n\t\t\tthis.game.ecsManager.addComponent(this.previewEntity, new GraphicsComponent(\n\t\t\t\tthis.scene.getNewMesh(\"Assets/objs/sphere.obj\", \"CSS:rgba(255, 255, 255, 0.5)\", \"Assets/objs/sphere_spec.mtl\")\n\t\t\t));\n\t\t}\n\n\t\tif (!this.entity.hasComponent(ComponentTypeEnum.MESHCOLLISION)) {\n\t\t\tlet octree = this.meshStore.getOctree(\"Assets/objs/sphere.obj\", false);\n\t\t\tif (octree != undefined) {\n\t\t\t\tlet meshColComp = new MeshCollisionComponent(octree);\n\t\t\t\tthis.game.ecsManager.addComponent(this.entity, meshColComp);\n\t\t\t}\n\t\t}\n\t\tthis.respawn();\n\t}\n\n    respawn() {\n\t\tvec3.set(this.positionComp.position, 0.0, -1.5, 0.0);\n\t\tvec3.set(this.movComp.velocity, 0.0, 0.0, 0.0);\n\t\tthis.setCameraDirection(vec3.fromValues(-1.0, 0.0, 0.0));\n\t\tvec2.zero(this.mouseMovement);\n\t\t\n\t\tvec3.zero(this.direction);\n\t\tvec3.zero(this.nextDirection);\n\t\tvec3.zero(this.nextBounceVec);\n\t\tvec3.zero(this.previewPositionComp.scale);\n\t\tthis.nextBounceTime = Infinity;\n\t\tthis.lastBounceTime = 0.0;\n\t\tthis.nextBounceEntityId = -1;\n\t\tthis.currentBounces = 0;\n\t}\n\n\tprivate saveNextCollisionInfo(continousCollisionInfo: {time: number; eId: number; intersectionVec: vec3;}) {\n\t\tthis.nextBounceTime = continousCollisionInfo.time;\n\t\tif (continousCollisionInfo.intersectionVec == undefined || vec3.squaredLength(continousCollisionInfo.intersectionVec) == 0.0) {\n\t\t\tif (this.nextBounceTime != Infinity) {\n\t\t\t\tvec3.normalize(this.nextBounceVec, vec3.scale(this.nextBounceVec, this.direction, -1.0));\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tvec3.copy(this.nextBounceVec, continousCollisionInfo.intersectionVec);\n\t\t}\n\t\tthis.nextBounceEntityId = continousCollisionInfo.eId;\n\n\t\t// Calculate next direction\n\t\tif (vec3.equals(this.nextBounceVec, vec3.fromValues(0, 0, 0)) || this.game.objectPlacer.getTypeOfEntity(this.nextBounceEntityId) == \"Box Green\") {\n\t\t\t// Can't calculate next, or the next one is the finish. Let's use the current direction \n\t\t\tvec3.copy(this.nextDirection, this.direction);\n\t\t}\n\t\telse {\n\t\t\tlet dot = vec3.dot(this.direction, this.nextBounceVec);\n\t\t\tvec3.scaleAndAdd(this.nextDirection, this.direction, this.nextBounceVec, 2.0 * -dot);\n\t\t}\n\n\t\t// console.log(this.nextDirection);\n\t\t// console.log(this.nextBounceTime);\n\t}\n\n\tprivate setCameraDirection(direction: vec3) {\n\t\tlet newDir = vec3.clone(direction);\n\t\tvec3.normalize(newDir, newDir);\n\n\t\tthis.game.rendering.camera.setDir(newDir);\n\t\tthis.jawPitch[1] = Math.asin(newDir[1]) * 180 / Math.PI;\n\t\tthis.jawPitch[0] = Math.atan2(newDir[0], newDir[2]) * 180 / Math.PI;\n\t}\n\n\t/**\n\t * This function does custom movement updates, not relying on the movement system (until not on collision path with anything, then the movement will be set to keep going).\n\t * TODO: Consider breaking this logic out to some system.\n\t * @param dt Time elapsed since last frame\n\t * @returns how much is left to process of the dt\n\t */\n\tdoMovementAndBounces(dt: number): number {\n\t\tlet dtLeft = 0.0;\n\n\t\tif (input.mouseClicked) {\n            if (!this.mouseWasPressed && vec3.squaredLength(this.direction) == 0.0) {\n\t\t\t\tthis.currentBounces = 0;\n\t\t\t\tvec3.scale(this.direction, this.game.rendering.camera.getDir(), 40.0);\n\t\t\t\tvec3.zero(this.movComp.velocity);\n            }\n\t\t\tthis.mouseWasPressed = true;\n        }\n        else {\n            this.mouseWasPressed = false;\n        }\n\n\t\tif (vec3.squaredLength(this.direction) > 0.0) {\n\t\t\tif (this.nextBounceTime == Infinity) {\n\t\t\t\tlet entities = this.game.objectPlacer.getEntitiesOfType(AllCollisionEntities); // All entities that should be collidable\n\t\t\t\tlet continousCollisionInfo = ECSUtils.CalculateCollisionTime(this.entity, this.direction, entities, Infinity, false);\n\t\t\t\t\n\t\t\t\tthis.saveNextCollisionInfo(continousCollisionInfo);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet entitiesToGet = OnlyMovingCollisionEntities; // Only entities that will move and change velocity over time\n\t\t\t\tif (this.lastBounceTime < 0.05) {\n\t\t\t\t\tentitiesToGet = AllCollisionEntities; // Sometimes next bounce gets messed up just in the beginning after bouncing, don't know why. This will update it correctly I hope.\n\t\t\t\t}\n\t\t\t\tlet entities = this.game.objectPlacer.getEntitiesOfType(entitiesToGet); \n\t\t\t\tlet continousCollisionInfo = ECSUtils.CalculateCollisionTime(this.entity, this.direction, entities, this.nextBounceTime, false);\n\t\t\t\t\n\t\t\t\tif (continousCollisionInfo.time < this.nextBounceTime) {\n\t\t\t\t\tthis.saveNextCollisionInfo(continousCollisionInfo);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.nextBounceTime != Infinity) {\n\t\t\t\tlet moveTime = Math.min(dt, this.nextBounceTime);\n\t\t\t\tvec3.scaleAndAdd(this.positionComp.position, this.positionComp.position, this.direction, moveTime);\n\t\t\t\tthis.lastBounceTime += moveTime;\n\t\t\t\tthis.nextBounceTime -= moveTime;\n\t\t\t\tdtLeft = dt - moveTime;\n\n\t\t\t\tif (this.nextBounceTime <= 0.000001) {\n\t\t\t\t\tif (this.game.objectPlacer.getTypeOfEntity(this.nextBounceEntityId) == \"Box Green\") {\n\t\t\t\t\t\t// Finish reached!\n\t\t\t\t\t\t// Stop the ball completely\n\t\t\t\t\t\tvec3.zero(this.direction);\n\t\t\t\t\t\tthis.currentBounces = 0;\n\t\t\t\t\t\t// this.game.gotoState = StatesEnum.LEVELSELECT;\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.currentBounces >= this.bounceLimit) {\n\t\t\t\t\t\tthis.setCameraDirection(this.nextDirection); // Set the camera to look in the direction of the next bounce\n\t\t\t\t\t\t// Stop the ball completely\n\t\t\t\t\t\tvec3.zero(this.direction);\n\t\t\t\t\t\tthis.currentBounces = 0;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// Reflect the movement vector along the intersectionVector\n\t\t\t\t\t\tvec3.copy(this.direction, this.nextDirection);\n\t\t\t\t\t\tthis.currentBounces++;\n\t\t\t\t\t}\n\t\t\t\t\tthis.lastBounceTime = 0.0;\n\t\t\t\t\tthis.nextBounceTime = Infinity;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvec3.copy(this.movComp.velocity, this.direction);\n\t\t\t\tvec3.zero(this.direction);\n\t\t\t\tthis.lastBounceTime = 0.0;\n\t\t\t\tthis.nextBounceTime = Infinity;\n\t\t\t}\n\t\t}\n\n\t\treturn dtLeft;\n\t}\n\n    update(dt: number) {\n\t\tlet rightMouseClickedThisFrame = false;\n\t\tif (input.mouseRightClicked) {\n\t\t\tif (!this.mouseRightWasPressed) {\n\t\t\t\tdocument.getElementById(\"gameDiv\").requestPointerLock();\n\t\t\t\trightMouseClickedThisFrame = true;\n\t\t\t}\n\t\t\tthis.mouseRightWasPressed = true;\n\t\t}\n\t\telse {\n\t\t\tif (this.mouseRightWasPressed) {\n\t\t\t\tdocument.exitPointerLock();\n\t\t\t}\n\t\t\tthis.mouseRightWasPressed = false;\n\t\t}\n\n\t\tlet movedMouse = false;\n\n\t\tif (vec2.squaredLength(this.mouseMovement) > 0.0) {\n\t\t\tlet sensitivity: number = 45.0; // TODO: move to options, and add a slider in options menu.\n\t\t\tvec2.scaleAndAdd(this.jawPitch, this.jawPitch, this.mouseMovement, sensitivity * dt);\n\t\t\tthis.jawPitch[0] = this.jawPitch[0] % 360;\n\t\t\tthis.jawPitch[1] = Math.max(Math.min(this.jawPitch[1], 89), -89);\n\t\t\tthis.game.rendering.camera.setPitchJawDegrees(this.jawPitch[1], this.jawPitch[0]);\n\t\t\t\n\t\t\tvec2.zero(this.mouseMovement);\n\t\t\tmovedMouse = true;\n\t\t}\n\t\telse if (!input.mouseRightClicked && vec3.squaredLength(this.direction) > 0.0) {\n\t\t\t// Linear interpolation between direction and next direction when there is less than turnTime left to impact.\n\t\t\tconst turnTime = 0.2;\n\t\t\tlet newDir = vec3.lerp(vec3.create(), this.direction, this.nextDirection, Math.max(0.0, 1.0 - (this.nextBounceTime / Math.min(turnTime, this.lastBounceTime + this.nextBounceTime))));\n\t\t\tthis.setCameraDirection(newDir);\n\t\t}\n\n\t\tif (input.mouseRightClicked) {\n\t\t\tif (movedMouse || rightMouseClickedThisFrame) {\n\t\t\t\tlet entities = this.game.objectPlacer.getEntitiesOfType(AllCollisionEntities); // All entities that should be collidable\n\t\t\t\t// First do a ray cast to get a maximum distance\n\t\t\t\tlet ray = new Ray();\n\t\t\t\tconst dir = this.game.rendering.camera.getDir();\n\t\t\t\tray.setStartAndDir(this.positionComp.position, dir);\n\t\t\t\tconst distAndEid = ECSUtils.RayCastAgainstEntityList(ray, entities);\n\t\t\t\tlet continousCollisionInfo = ECSUtils.CalculateCollisionTime(this.entity, dir, entities, distAndEid.distance, false);\n\t\t\t\tif (continousCollisionInfo.time < Infinity) {\n\t\t\t\t\tvec3.scaleAndAdd(this.previewPositionComp.position, this.positionComp.position, dir, continousCollisionInfo.time);\n\t\t\t\t\tvec3.set(this.previewPositionComp.scale, BallScaleFactor, BallScaleFactor, BallScaleFactor);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvec3.zero(this.previewPositionComp.scale);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tvec3.zero(this.previewPositionComp.scale);\n\t\t}\n\t\t\n\t\tlet dtLeft = dt;\n\t\twhile (dtLeft > 0.0) {\n\t\t\tdtLeft = this.doMovementAndBounces(dtLeft);\n\t\t}\n\n        if (input.keys[\" \"]) {\n            vec3.zero(this.movComp.velocity);\n\t\t\tvec3.zero(this.direction);\n\t\t\tthis.lastBounceTime = 0.0;\n\t\t\tthis.nextBounceTime = Infinity;\n        }\n\n\t\tif (input.keys[\"P\"]) {\n            this.respawn();\n        }\n\n\t\tfor (let i = 0; i < 10; i++) {\n\t\t\tif (input.keys[i.toString()]) {\n\t\t\t\tthis.bounceLimit = i;\n\t\t\t}\n\t\t}\n\t\tthis.bounceLimitDisplay.textString = this.bounceLimit.toString();\n\n        this.game.rendering.camera.setPosition(this.positionComp.position);\n    }\n\n}","import MeshStore from \"../Engine/AssetHandling/MeshStore\";\nimport TextureStore from \"../Engine/AssetHandling/TextureStore\";\nimport BoundingBoxComponent from \"../Engine/ECS/Components/BoundingBoxComponent\";\nimport CollisionComponent from \"../Engine/ECS/Components/CollisionComponent\";\nimport { ComponentTypeEnum } from \"../Engine/ECS/Components/Component\";\nimport GraphicsComponent from \"../Engine/ECS/Components/GraphicsComponent\";\nimport MeshCollisionComponent from \"../Engine/ECS/Components/MeshCollisionComponent\";\nimport PositionComponent from \"../Engine/ECS/Components/PositionComponent\";\nimport ECSManager from \"../Engine/ECS/ECSManager\";\nimport Entity from \"../Engine/ECS/Entity\";\nimport Ray from \"../Engine/Physics/Shapes/Ray\";\nimport Scene from \"../Engine/Rendering/Scene\";\nimport { WebUtils } from \"../Engine/Utils/WebUtils\";\nimport Game from \"./States/Game\";\nimport { ECSUtils } from \"../Engine/Utils/ESCUtils\";\nimport { quat, vec3 } from \"gl-matrix\";\n\nclass Placement {\n\tmodelPath: string;\n\tdiffuseTexturePath: string;\n\tspecularTexturePath: string;\n\temissionTexturePath: string;\n\tsizeMultiplier: number;\n\taddCollision: boolean;\n\tsaveToTransforms: boolean;\n\n\tconstructor(\n\t\tmodelPath: string,\n\t\tdiffuseTexturePath: string,\n\t\tspecularTexturePath: string,\n\t\temissionTexturePath: string,\n\t\taddCollision: boolean = true,\n\t\tsaveToTransform: boolean = true\n\t) {\n\t\tthis.modelPath = modelPath;\n\t\tthis.diffuseTexturePath = diffuseTexturePath;\n\t\tthis.specularTexturePath = specularTexturePath;\n\t\tthis.emissionTexturePath = emissionTexturePath;\n\t\tthis.addCollision = addCollision;\n\t\tthis.saveToTransforms = saveToTransform;\n\t}\n}\n\nexport default class ObjectPlacer {\n\tplacements: Map<string, Placement>;\n\tprivate entityPlacements: Map<number, string>;\n\tprivate scene: Scene;\n\tprivate ecsManager: ECSManager;\n\tprivate meshStore: MeshStore;\n\tprivate textureStore: TextureStore;\n\tprivate lastSavedPlacements: string;\n\tprivate lastFileName: string;\n\n\tcurrentlyEditingEntityId: number;\n\n\tgame: Game;\n\n\tconstructor(\n\t\tmeshStore: MeshStore,\n\t\ttextureStore: TextureStore\n\t) {\n\t\tthis.meshStore = meshStore;\n\t\tthis.textureStore = textureStore;\n\t\tthis.placements = new Map<string, Placement>();\n\t\tthis.entityPlacements = new Map<number, string>();\n\t\tthis.lastSavedPlacements = \"\";\n\t\tthis.lastFileName = \"\";\n\t}\n\n\tasync load(scene: Scene, ecsManager: ECSManager, placementsFile: string = \"Assets/placements/Placements.txt\") {\n\t\tthis.scene = scene;\n\t\tthis.ecsManager = ecsManager;\n\t\tthis.game = Game.getInstanceNoSa();\n\n\t\tawait this.reload(placementsFile);\n\t}\n\n\tasync reload(placementsFile: string = \"Assets/placements/Placements.txt\"): Promise<void> {\n\t\tthis.downloadTransforms();\n\n\t\tif (this.ecsManager && this.game) {\n\t\t\tfor (let ep of this.entityPlacements) {\n\t\t\t\tthis.selectNewObjectFromEntityId(ep[0]);\n\t\t\t\tthis.deleteCurrentObject(false);\n\t\t\t}\n\t\t}\n\n\t\tthis.placements.clear();\n\t\tthis.entityPlacements.clear();\n\n\t\tawait this.loadFromFile(placementsFile);\n\t}\n\n\tprivate async loadFromFile(placementsFile: string) {\n\t\t// Execute the PlacementList code\n\t\tconst placementsResponse = await fetch(\n\t\t\t\"Assets/placements/PlacementList.js\"\n\t\t);\n\t\tif (placementsResponse.ok) {\n\t\t\tconst content = await placementsResponse.text();\n\t\t\teval(content);\n\t\t}\n\n\t\t// Now read all transforms for the placements from Placements.txt\n\t\tconst response = await fetch(placementsFile);\n\t\tif (response.ok) {\n\t\t\tconst content = await response.text();\n\t\t\tthis.lastSavedPlacements = content;\n\n\t\t\tif (content != \"\") {\n\t\t\t\tlet currentPlacementType = \"\";\n\t\t\t\tfor (let t of content.split(\"\\n\")) {\n\t\t\t\t\tt = t.trim();\n\t\t\t\t\tif (t == \"\") {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif (t.startsWith(\"Placement:\")) {\n\t\t\t\t\t\tcurrentPlacementType = t.substring(\"Placement:\".length);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlet [p, s, r, o] = t.split(\"|\");\n\n\t\t\t\t\t\tthis.placeObject(\n\t\t\t\t\t\t\tcurrentPlacementType,\n\t\t\t\t\t\t\tvec3.fromValues.apply(null, p.split(\",\").map((n) => parseFloat(n))),\n\t\t\t\t\t\t\tvec3.fromValues.apply(null, s.split(\",\").map((n) => parseFloat(n))),\n\t\t\t\t\t\t\tquat.fromValues.apply(null, r.split(\",\").map((n) => parseFloat(n))),\n\t\t\t\t\t\t\tvec3.fromValues.apply(null, o.split(\",\").map((n) => parseFloat(n)))\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst pathParts = placementsFile.split(\"/\");\n\t\t\tthis.lastFileName = pathParts[pathParts.length - 1];\n\t\t}\n\t}\n\n\tmakeCheckpoint() {}\n\n\tundo() {}\n\n\tgetEntitiesOfType(type: string): Array<Entity> {\n\t\tlet types = type.split(\"||\").map((value) => {return value.trim()})\n\n\t\tlet entities = new Array<Entity>();\n\t\tfor (let e of this.entityPlacements) {\n\t\t\tif (this.placements.has(e[1])) {\n\t\t\t\tif (types.includes(e[1])) {\n\t\t\t\t\tentities.push(this.ecsManager.getEntity(e[0]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn entities;\n\t}\n\n\tgetTypeOfEntity(entityId: number) {\n\t\tlet ep = this.entityPlacements.get(entityId);\n\t\tif (ep != undefined) {\n\t\t\treturn ep;\n\t\t}\n\t\telse {\n\t\t\treturn \"\";\n\t\t}\n\t}\n\n\tgetCurrentObjectType(): string {\n\t\tif (this.currentlyEditingEntityId == undefined) {\n\t\t\treturn \"nothing\";\n\t\t}\n\n\t\tlet objectName = this.entityPlacements.get(this.currentlyEditingEntityId);\n\n\t\tif (objectName == undefined) {\n\t\t\treturn \"unknown\";\n\t\t}\n\n\t\treturn objectName;\n\t}\n\n\tplaceObject(\n\t\ttype: string,\n\t\tposition: vec3,\n\t\tsize: vec3,\n\t\trotation: quat,\n\t\torigin: vec3\n\t): Entity {\n\t\tlet placement = this.placements.get(type);\n\t\tif (placement == undefined) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet entity = this.ecsManager.createEntity();\n\t\tthis.currentlyEditingEntityId = entity.id;\n\t\tthis.entityPlacements.set(entity.id, type);\n\n\t\tlet mesh = this.scene.getNewMesh(\n\t\t\tplacement.modelPath,\n\t\t\tplacement.diffuseTexturePath,\n\t\t\tplacement.specularTexturePath\n\t\t);\n\n\t\tlet graComp = new GraphicsComponent(mesh);\n\t\tthis.ecsManager.addComponent(entity, graComp);\n\t\tlet posComp = new PositionComponent();\n\t\tvec3.copy(posComp.position, position);\n\t\tvec3.copy(posComp.scale, size);\n\t\tquat.copy(posComp.rotation, rotation);\n\t\tvec3.copy(posComp.origin, origin);\n\t\tthis.ecsManager.addComponent(entity, posComp);\n\n\t\tlet boundingBoxComp = new BoundingBoxComponent();\n\t\tboundingBoxComp.setup(mesh.graphicsObject);\n\t\tboundingBoxComp.updateTransformMatrix(mesh.modelMatrix);\n\t\tthis.ecsManager.addComponent(entity, boundingBoxComp);\n\n\t\tif (!placement.addCollision) {\n\t\t\treturn entity;\n\t\t}\n\n\t\t// Collision stuff\n\t\tlet collisionComp = new CollisionComponent();\n\t\tcollisionComp.isStatic = true;\n\t\tthis.ecsManager.addComponent(entity, collisionComp);\n\n\t\tlet octree = this.meshStore.getOctree(placement.modelPath, false);\n\t\tif (octree == undefined) {\n\t\t\treturn entity;\n\t\t}\n\t\tlet meshColComp = new MeshCollisionComponent(octree);\n\t\tthis.ecsManager.addComponent(entity, meshColComp);\n\t\treturn entity;\n\t}\n\n\trayCastToNonSelectedObjects(ray: Ray): number {\n\t\tlet testEntities = new Array<Entity>();\n\n\t\tfor (let e of this.ecsManager.entities) {\n\t\t\tif (e.id == this.currentlyEditingEntityId) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\ttestEntities.push(e);\n\t\t}\n\t\t\n\t\treturn ECSUtils.RayCastAgainstEntityList(ray, testEntities).distance;\n\t}\n\n\trayCastToSelectNewObject(ray: Ray, ignoreEntityId?: number) {\n\t\tlet testEntities = new Array<Entity>();\n\t\tfor (let e of this.ecsManager.entities) {\n\t\t\tif (e.id == ignoreEntityId) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\ttestEntities.push(e);\n\t\t}\n\n\t\tlet rayCastResult = ECSUtils.RayCastAgainstEntityList(ray, testEntities);\n\t\tif (rayCastResult.eId >= 0) {\n\t\t\tthis.currentlyEditingEntityId = rayCastResult.eId;\n\t\t}\n\t\telse {\n\t\t\tthis.currentlyEditingEntityId = null;\n\t\t}\n\t}\n\n\tselectNewObjectFromEntityId(id: number) {\n\t\tthis.currentlyEditingEntityId = id;\n\t}\n\n\tupdateCurrentlyEditingObject(\n\t\trotationChange: vec3,\n\t\tscaleChange: number,\n\t\tnewPosition?: vec3\n\t) {\n\t\tif (this.currentlyEditingEntityId != null) {\n\t\t\tlet entity = this.ecsManager.getEntity(this.currentlyEditingEntityId);\n\t\t\tif (entity != undefined) {\n\t\t\t\tlet posComp = entity.getComponent(\n\t\t\t\t\tComponentTypeEnum.POSITIONPARENT\n\t\t\t\t) as PositionComponent;\n\t\t\t\tif (posComp == undefined) {\n\t\t\t\t\tposComp = entity.getComponent(\n\t\t\t\t\t\tComponentTypeEnum.POSITION\n\t\t\t\t\t) as PositionComponent;\n\t\t\t\t}\n\n\t\t\t\tif (posComp == undefined) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tquat.mul(posComp.rotation, posComp.rotation, quat.fromEuler(quat.create(), rotationChange[0], rotationChange[1], rotationChange[2]));\n\t\t\t\tvec3.add(posComp.scale, posComp.scale, vec3.fromValues(scaleChange, scaleChange, scaleChange));\n\t\t\t\tif (scaleChange != 0) {\n\t\t\t\t\tposComp.scale[0] = Math.round(posComp.scale[0] * 10000) / 10000;\n\t\t\t\t\tposComp.scale[1] = Math.round(posComp.scale[1] * 10000) / 10000;\n\t\t\t\t\tposComp.scale[2] = Math.round(posComp.scale[2] * 10000) / 10000;\n\t\t\t\t}\n\t\t\t\tif (newPosition != undefined) {\n\t\t\t\t\tnewPosition[0] = Math.round(newPosition[0] * 100) / 100;\n\t\t\t\t\tnewPosition[1] = Math.round(newPosition[1] * 100) / 100;\n\t\t\t\t\tnewPosition[2] = Math.round(newPosition[2] * 100) / 100;\n\t\t\t\t\tvec3.copy(posComp.position, newPosition);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdeleteCurrentObject(setDownloadNeeded: boolean = true) {\n\t\tif (this.currentlyEditingEntityId != undefined) {\n\t\t\tlet entity = this.ecsManager.getEntity(this.currentlyEditingEntityId);\n\n\t\t\tif (entity != undefined) {\n\t\t\t\t// Remove graphics bundle from scene\n\t\t\t\t// TODO: Make this automatic when entity is removed\n\t\t\t\tlet graphicsComponent = entity.getComponent(\n\t\t\t\t\tComponentTypeEnum.GRAPHICS\n\t\t\t\t) as GraphicsComponent;\n\t\t\t\tif (graphicsComponent != undefined) {\n\t\t\t\t\tthis.scene.deleteGraphicsBundle(graphicsComponent.object);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.ecsManager.removeEntity(this.currentlyEditingEntityId);\n\t\t\tthis.entityPlacements.delete(this.currentlyEditingEntityId);\n\t\t}\n\n\t\tthis.currentlyEditingEntityId = null;\n\t}\n\n\tduplicateCurrentObject() {\n\t\tif (this.currentlyEditingEntityId != undefined) {\n\t\t\tlet entityPlacement = this.entityPlacements.get(\n\t\t\t\tthis.currentlyEditingEntityId\n\t\t\t);\n\t\t\tif (entityPlacement == undefined) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet entity = this.ecsManager.getEntity(this.currentlyEditingEntityId);\n\n\t\t\tif (entity == undefined) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet posComp: PositionComponent = <PositionComponent>(\n\t\t\t\tentity.getComponent(ComponentTypeEnum.POSITIONPARENT)\n\t\t\t);\n\n\t\t\tif (posComp == undefined) {\n\t\t\t\tposComp = <PositionComponent>(\n\t\t\t\t\tentity.getComponent(ComponentTypeEnum.POSITION)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (posComp == undefined) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.placeObject(\n\t\t\t\tentityPlacement,\n\t\t\t\tvec3.clone(posComp.position),\n\t\t\t\tvec3.clone(posComp.scale),\n\t\t\t\tquat.clone(posComp.rotation),\n\t\t\t\tvec3.clone(posComp.origin)\n\t\t\t);\n\t\t}\n\t}\n\n\tdownloadTransforms(): boolean {\n\t\tlet transformsData = \"\";\n\n\t\tfor (let [placementString, placement] of this.placements) {\n\t\t\tlet printedHeader = false;\n\t\t\tif (!placement.saveToTransforms) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\tfor (let ep of this.entityPlacements) {\n\t\t\t\tif (ep[1] == placementString) {\n\t\t\t\t\tlet entity = this.ecsManager.getEntity(ep[0]);\n\t\t\t\t\tif (entity != undefined) {\n\t\t\t\t\t\tlet posComp: PositionComponent = <PositionComponent>(\n\t\t\t\t\t\t\tentity.getComponent(ComponentTypeEnum.POSITIONPARENT)\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (posComp == undefined) {\n\t\t\t\t\t\t\tposComp = <PositionComponent>(\n\t\t\t\t\t\t\t\tentity.getComponent(ComponentTypeEnum.POSITION)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (posComp != undefined) {\n\t\t\t\t\t\t\tif (!printedHeader) {\n\t\t\t\t\t\t\t\ttransformsData += \"Placement:\" + placementString + \"\\n\";\n\t\t\t\t\t\t\t\tprintedHeader = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttransformsData +=\n\t\t\t\t\t\t\t\tposComp.position +\n\t\t\t\t\t\t\t\t\"|\" +\n\t\t\t\t\t\t\t\tposComp.scale +\n\t\t\t\t\t\t\t\t\"|\" +\n\t\t\t\t\t\t\t\tposComp.rotation +\n\t\t\t\t\t\t\t\t\"|\" +\n\t\t\t\t\t\t\t\tposComp.origin +\n\t\t\t\t\t\t\t\t\"\\n\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.lastSavedPlacements === transformsData) {\n\t\t\treturn false;\n\t\t}\n\n\t\tWebUtils.DownloadFile(this.lastFileName, transformsData);\n\t\tthis.lastSavedPlacements = transformsData;\n\n\t\treturn true;\n\t}\n\n\tonExit(e: BeforeUnloadEvent) {\n\t\tif (this.downloadTransforms()) {\n\t\t\te.preventDefault();\n\t\t\te.returnValue = \"\";\n\t\t\treturn;\n\t\t}\n\n\t\tdelete e[\"returnValue\"];\n\t}\n}\n","import Button from \"../../Engine/Rendering/GUI/Objects/Button\";\nimport State, { StatesEnum } from \"../../Engine/States/State\";\nimport { input, StateAccessible } from \"../GameMachine\";\nimport { OverlayRendering } from \"../../Engine/Rendering/GUI/OverlayRendering\";\n\nexport default class ControlsMenu extends State {\n\tprivate overlayRendering: OverlayRendering;\n\n\tprivate backButton: Button;\n\n\tconstructor(sa: StateAccessible) {\n\t\tsuper();\n\t\tthis.overlayRendering = new OverlayRendering();\n\n\t\tthis.backButton = this.overlayRendering.getNewButton();\n\t\tthis.backButton.position[0] = 0.5;\n\t\tthis.backButton.position[1] = 0.1;\n\t\tthis.backButton.center = true;\n\t\tthis.backButton.textSize = 30;\n\t\tthis.backButton.textString = \"Back\";\n\n\t\tlet self = this;\n\t\tthis.backButton.onClick(function () {\n\t\t\tself.gotoState = StatesEnum.OPTIONS;\n\t\t});\n\t}\n\n\tasync init() {\n\t\tthis.overlayRendering.show();\n\t\tinput.touchUsed = true;\n\t\tinput.simulateTouchBasedOnMouse = true;\n\t\tinput.repositionTouchControls = true;\n\t}\n\n\treset() {\n\t\tthis.overlayRendering.hide();\n\t\tinput.touchUsed = false;\n\t\tinput.simulateTouchBasedOnMouse = false;\n\t\tinput.repositionTouchControls = false;\n\t\tinput.drawTouchControls();\n\t}\n\n\tupdate(dt: number) {}\n\n\tdraw() {\n\t\tthis.overlayRendering.draw();\n\t\tinput.drawTouchControls();\n\t}\n}\n","import { ComponentTypeEnum } from \"../../Engine/ECS/Components/Component\";\nimport Div from \"../../Engine/Rendering/GUI/Objects/Div\";\nimport TextObject2D from \"../../Engine/Rendering/GUI/Objects/Text/TextObject2D\";\nimport { OverlayRendering } from \"../../Engine/Rendering/GUI/OverlayRendering\";\nimport { StatesEnum } from \"../../Engine/States/State\";\nimport { windowInfo } from \"../../main\";\nimport { StateAccessible, input } from \"../GameMachine\";\nimport DebugMode from \"./DebugMode\";\nimport Game from \"./Game\";\nimport { quat, vec2, vec3 } from \"gl-matrix\";\n\nexport default class DebugMenu {\n\tprivate overlay: OverlayRendering;\n\tprivate stateAccessible: StateAccessible;\n\tprivate game: Game;\n\n\tprivate placementMenu: Div;\n\tprivate movingPlacementBox: Boolean;\n\n\tprivate entitiesBox: Div;\n\tprivate movingEntitiesBox: boolean;\n\n\tprivate propsBox: Div;\n\tprivate movingPropsBox;\n\tprivate propsVisibleMemory: Map<ComponentTypeEnum, boolean>;\n\n\tprivate hidden: boolean;\n\n\tmouseOverGuiElement: boolean;\n\tactionText: TextObject2D;\n\n\tconstructor(stateAccessible: StateAccessible, game: Game, debugMode: DebugMode) {\n\t\tthis.overlay = new OverlayRendering();\n\t\tthis.stateAccessible = stateAccessible;\n\t\tthis.game = game;\n\n\t\tthis.mouseOverGuiElement = false;\n\n\t\tlet downloadOctreesButton = this.overlay.getNewButton();\n\t\tdownloadOctreesButton.position[0] = 0.8;\n\t\tdownloadOctreesButton.position[1] = 0.1;\n\t\tdownloadOctreesButton.center = true;\n\t\tdownloadOctreesButton.textSize = 40;\n\t\tdownloadOctreesButton.textString = \"Download \\nOctrees\";\n\n\t\tlet self = this;\n\t\tdownloadOctreesButton.onClick(function () {\n\t\t\tself.stateAccessible.meshStore.downloadOctrees();\n\t\t});\n\n\t\tlet downloadTransformsButton = this.overlay.getNewButton();\n\t\tdownloadTransformsButton.position[0] = 0.6;\n\t\tdownloadTransformsButton.position[1] = 0.1;\n\t\tdownloadTransformsButton.center = true;\n\t\tdownloadTransformsButton.textSize = 40;\n\t\tdownloadTransformsButton.textString = \"Download \\nTransforms\";\n\n\t\tdownloadTransformsButton.onClick(function () {\n\t\t\tself.game.objectPlacer.downloadTransforms();\n\t\t});\n\n\t\tlet menuButton = this.overlay.getNewButton();\n\t\tmenuButton.position[0] = 0.4;\n\t\tmenuButton.position[1] = 0.1;\n\t\tmenuButton.center = true;\n\t\tmenuButton.textSize = 40;\n\t\tmenuButton.textString = \"Menu\";\n\n\t\tmenuButton.onClick(function () {\n\t\t\tdebugMode.gotoState = StatesEnum.MAINMENU;\n\t\t});\n\n\t\tthis.placementMenu = this.overlay.getNewDiv();\n\t\tthis.placementMenu.getElement().style.backgroundColor = \"gray\";\n\t\tthis.placementMenu.getElement().style.opacity = \"70%\";\n\t\tthis.placementMenu.position[0] = 0.01;\n\t\tthis.placementMenu.position[1] = 0.03;\n\t\tthis.placementMenu.getElement().style.borderRadius = \"5px\";\n\t\tthis.placementMenu.getElement().style.maxHeight = \"50%\";\n\t\tthis.placementMenu.getElement().style.overflowY = \"auto\";\n\t\tthis.placementMenu.getElement().style.resize = \"vertical\";\n\t\t// Prevent picking through gui element (also don't update the properties box when hovering the properties window)\n\t\tthis.placementMenu.getElement().onmouseenter = () => {\n\t\t\tthis.mouseOverGuiElement = true;\n\t\t};\n\t\tthis.placementMenu.getElement().onmouseleave = () => {\n\t\t\tif (!input.mouseClicked) {\n\t\t\t\tthis.mouseOverGuiElement = false;\n\t\t\t}\n\t\t};\n\n\t\tlet placementMenuText = this.overlay.getNew2DText(this.placementMenu);\n\t\tplacementMenuText.textString = \"Placement menu\";\n\t\tplacementMenuText.getElement().style.backgroundColor = \"dimgray\";\n\t\tplacementMenuText.getElement().style.width = \"100%\";\n\t\tplacementMenuText.getElement().style.cursor = \"move\";\n\t\tplacementMenuText.getElement().style.borderRadius = \"5px\";\n\t\tplacementMenuText.getElement().onmousedown = () => {\n\t\t\tthis.movingPlacementBox = true;\n\t\t};\n\n\t\tthis.actionText = this.overlay.getNew2DText();\n\t\tthis.actionText.position[0] = 0.4;\n\t\tthis.actionText.position[1] = 0.01;\n\t\tthis.actionText.size = 20;\n\n\t\tthis.entitiesBox = this.overlay.getNewDiv();\n\t\tthis.entitiesBox.getElement().style.backgroundColor = \"gray\";\n\t\tthis.entitiesBox.getElement().style.opacity = \"70%\";\n\t\tthis.entitiesBox.position[0] = 0.88;\n\t\tthis.entitiesBox.position[1] = 0.03;\n\t\tthis.entitiesBox.getElement().style.borderRadius = \"5px\";\n\t\tthis.entitiesBox.getElement().style.height = \"50%\";\n\t\tthis.entitiesBox.getElement().style.maxHeight = \"100%\";\n\t\tthis.entitiesBox.getElement().style.overflowY = \"auto\";\n\t\tthis.entitiesBox.getElement().style.resize = \"vertical\";\n\t\t// Prevent picking through gui element (also don't update the properties box when hovering the properties window)\n\t\tthis.entitiesBox.getElement().onmouseenter = () => {\n\t\t\tthis.mouseOverGuiElement = true;\n\t\t};\n\t\tthis.entitiesBox.getElement().onmouseleave = () => {\n\t\t\tif (!input.mouseClicked) {\n\t\t\t\tthis.mouseOverGuiElement = false;\n\t\t\t}\n\t\t};\n\n\t\tlet entitiesText = this.overlay.getNew2DText(this.entitiesBox);\n\t\tentitiesText.textString = \"Entities\";\n\t\tentitiesText.getElement().style.backgroundColor = \"dimgray\";\n\t\tentitiesText.getElement().style.width = \"100%\";\n\t\tentitiesText.getElement().style.cursor = \"move\";\n\t\tentitiesText.getElement().style.borderRadius = \"5px\";\n\t\tentitiesText.getElement().onmousedown = () => {\n\t\t\tthis.movingEntitiesBox = true;\n\t\t};\n\n\t\t\n\t\tthis.propsBox = this.overlay.getNewDiv();\n\t\tthis.propsBox.getElement().style.backgroundColor = \"gray\";\n\t\tthis.propsBox.getElement().style.opacity = \"70%\";\n\t\tthis.propsBox.position[0] = 0.01;\n\t\tthis.propsBox.position[1] = 0.55;\n\t\tthis.propsBox.getElement().style.borderRadius = \"5px\";\n\t\tthis.propsBox.getElement().style.height = \"40%\";\n\t\tthis.propsBox.getElement().style.maxHeight = \"100%\";\n\t\tthis.propsBox.getElement().style.overflowY = \"auto\";\n\t\tthis.propsBox.getElement().style.resize = \"vertical\";\n\t\t// Prevent picking through gui element (also don't update the properties box when hovering the properties window)\n\t\tthis.propsBox.getElement().onmouseenter = () => {\n\t\t\tthis.mouseOverGuiElement = true;\n\t\t};\n\t\tthis.propsBox.getElement().onmouseleave = () => {\n\t\t\tif (!input.mouseClicked) {\n\t\t\t\tthis.mouseOverGuiElement = false;\n\t\t\t}\n\t\t};\n\n\t\tlet propertiesText = this.overlay.getNew2DText(this.propsBox);\n\t\tpropertiesText.textString = \"Properties\";\n\t\tpropertiesText.getElement().style.backgroundColor = \"dimgray\";\n\t\tpropertiesText.getElement().style.width = \"100%\";\n\t\tpropertiesText.getElement().style.cursor = \"move\";\n\t\tpropertiesText.getElement().style.borderRadius = \"5px\";\n\t\tpropertiesText.getElement().onmousedown = () => {\n\t\t\tthis.movingPropsBox = true;\n\t\t};\n\n\t\tthis.propsVisibleMemory = new Map<ComponentTypeEnum, boolean>();\n\t\tfor (let comp of Object.keys(ComponentTypeEnum).filter((v) => isNaN(Number(v)))) {\n\t\t\tlet compBtn = this.overlay.getNewButton(this.propsBox);\n\t\t\tcompBtn.textString = comp;\n\t\t\tcompBtn.textSize = 20;\n\t\t\tcompBtn.scaleWithWindow = true;\n\t\t\tcompBtn.getInputElement().className = \"listButton\";\n\t\t\tcompBtn.getElement().style.width = \"100%\";\n\n\t\t\tlet compPropDiv = this.overlay.getNewDiv(this.propsBox);\n\n\t\t\tcompBtn.onClick(() => {\n\t\t\t\tlet hiddenStatus = compPropDiv.toggleHidden();\n\t\t\t\tthis.propsVisibleMemory.set(ComponentTypeEnum[comp], hiddenStatus);\n\t\t\t});\n\t\t\tcompPropDiv.setHidden(true);\n\t\t\tcompBtn.setHidden(false);\n\n\t\t\tthis.propsVisibleMemory.set(ComponentTypeEnum[comp], true);\n\t\t}\n\n\t\tlet consoleCommandsTextEdit = this.overlay.getNewEditText();\n\t\tconsoleCommandsTextEdit.position[0] = 0.5;\n\t\tconsoleCommandsTextEdit.position[1] = 0.97;\n\t\tconsoleCommandsTextEdit.center = true;\n\t\tconsoleCommandsTextEdit.getElement().style.width = \"80%\";\n\t\tconsoleCommandsTextEdit.getInputElement().style.width = \"100%\";\n\n\t\tconsoleCommandsTextEdit.getInputElement().addEventListener(\"change\", (ev) => {\n\t\t\tself.parseConsoleInput(consoleCommandsTextEdit.getInputElement().value);\n\t\t\tconsoleCommandsTextEdit.getInputElement().value = \"\";\n\t\t});\n\t\t\n\t\tconsoleCommandsTextEdit.getElement().onmouseenter = () => {\n\t\t\tthis.mouseOverGuiElement = true;\n\t\t};\n\t\tconsoleCommandsTextEdit.getElement().onmouseleave = () => {\n\t\t\tif (!input.mouseClicked) {\n\t\t\t\tthis.mouseOverGuiElement = false;\n\t\t\t}\n\t\t};\n\n\t\tthis.hidden = true;\n\t}\n\n\tasync init() {\n\t\tthis.overlay.show();\n\t\tthis.hidden = false;\n\n\t\t// Force the entities box to reload.\n\t\tlet length = this.entitiesBox.children.length;\n\t\tif (length > 1) {\n\t\t\tthis.entitiesBox.children[1].remove();\n\t\t\tthis.entitiesBox.children.splice(1, 1);\n\t\t}\n\t}\n\n\tprivate parseConsoleInput(input: string) {\n\t\tif (input.startsWith(\"r \")) { // r x 45.2  should rotate current object by 45.2 degrees around x axis\n\t\t\tconst args = input.split(\" \");\n\t\t\tif (args.length == 3) {\n\t\t\t\tconst index = [\"x\", \"y\", \"z\"].findIndex((string) => {return string == args[1]});\n\t\t\t\tif (index != -1) {\n\t\t\t\t\tconst degrees = parseFloat(args[2]);\n\t\t\t\t\tlet rotChange = vec3.create();\n\t\t\t\t\trotChange[index] = degrees;\n\t\t\t\t\tthis.game.objectPlacer.updateCurrentlyEditingObject(rotChange, 0, null);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\tupdate(dt: number) {\n\t\t// Moving of boxes\n\t\tif (!input.mouseClicked) {\n\t\t\tthis.movingPlacementBox = false;\n\t\t\tthis.movingEntitiesBox = false;\n\t\t\tthis.movingPropsBox = false;\n\t\t}\n\n\t\tif (this.movingPlacementBox) {\n\t\t\tvec2.set(this.placementMenu.position, input.mousePositionOnCanvas.x / windowInfo.resolutionWidth, input.mousePositionOnCanvas.y / windowInfo.resolutionHeight);\n\t\t}\n\n\t\tif (this.movingEntitiesBox) {\n\t\t\tvec2.set(this.entitiesBox.position,\tinput.mousePositionOnCanvas.x / windowInfo.resolutionWidth, input.mousePositionOnCanvas.y / windowInfo.resolutionHeight);\n\t\t}\n\n\t\tif (this.movingPropsBox) {\n\t\t\tvec2.set(this.propsBox.position, input.mousePositionOnCanvas.x / windowInfo.resolutionWidth, input.mousePositionOnCanvas.y / windowInfo.resolutionHeight);\n\t\t}\n\n\t\t// Update the placement menu if it is not synced with placements (+1 is because there is a text child as well)\n\t\tif (\n\t\t\tthis.placementMenu.children.length !=\n\t\t\tthis.game.objectPlacer.placements.size + 1\n\t\t) {\n\t\t\tfor (let i = 1; i < this.placementMenu.children.length; i++) {\n\t\t\t\tthis.placementMenu.children[i].remove();\n\t\t\t\tthis.placementMenu.children.splice(i, 1);\n\t\t\t\ti--;\n\t\t\t}\n\n\t\t\tthis.game.objectPlacer.placements.forEach((value, key) => {\n\t\t\t\tlet objectSelector = this.overlay.getNewButton(this.placementMenu);\n\t\t\t\tobjectSelector.textString = key.substring(key.lastIndexOf(\"/\") + 1);\n\t\t\t\tobjectSelector.textSize = 20;\n\t\t\t\tobjectSelector.scaleWithWindow = true;\n\t\t\t\tobjectSelector.getInputElement().className = \"listButton\";\n\t\t\t\tobjectSelector.getElement().style.width = \"100%\";\n\t\t\t\tobjectSelector.onClick(() => {\n\t\t\t\t\tthis.game.objectPlacer.placeObject(\n\t\t\t\t\t\tkey,\n\t\t\t\t\t\tvec3.create(),\n\t\t\t\t\t\tvec3.fromValues(1.0, 1.0, 1.0),\n\t\t\t\t\t\tquat.create(),\n\t\t\t\t\t\tvec3.create()\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\t// Update the entities menu\n\t\tif (\n\t\t\tthis.entitiesBox.children.length !=\n\t\t\tthis.game.ecsManager.entities.length + 1\n\t\t) {\n\t\t\tfor (let i = 1; i < this.entitiesBox.children.length; i++) {\n\t\t\t\tthis.entitiesBox.children[i].remove();\n\t\t\t\tthis.entitiesBox.children.splice(i, 1);\n\t\t\t\ti--;\n\t\t\t}\n\n\t\t\tthis.game.ecsManager.entities.forEach((e) => {\n\t\t\t\tlet entityBtn = this.overlay.getNewButton(this.entitiesBox);\n\t\t\t\tentityBtn.textString = \"\" + e.id;\n\t\t\t\tentityBtn.textSize = 20;\n\t\t\t\tentityBtn.scaleWithWindow = true;\n\t\t\t\tentityBtn.getInputElement().className = \"listButton\";\n\t\t\t\tentityBtn.getElement().style.width = \"100%\";\n\n\t\t\t\tentityBtn.onClick(() => {\n\t\t\t\t\tthis.game.objectPlacer.selectNewObjectFromEntityId(e.id);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\tfor (let i = 1; i < this.entitiesBox.children.length; i++) {\n\t\t\tlet eChild = this.entitiesBox.children[i];\n\t\t\teChild.getElement().style.backgroundColor = \"transparent\";\n\n\t\t\tif (\n\t\t\t\tthis.game.objectPlacer.currentlyEditingEntityId != undefined &&\n\t\t\t\teChild.textString ==\n\t\t\t\t\t\"\" + this.game.objectPlacer.currentlyEditingEntityId\n\t\t\t) {\n\t\t\t\teChild.getElement().style.backgroundColor = \"dimgray\";\n\t\t\t}\n\t\t}\n\n\t\tif (this.game.objectPlacer.currentlyEditingEntityId != undefined) {\n\t\t\tlet entity = this.game.ecsManager.getEntity(this.game.objectPlacer.currentlyEditingEntityId);\n\n\t\t\tfor (let i = 1; i < this.propsBox.children.length; i+=2) {\n\t\t\t\tif (entity != undefined && entity.hasComponent(ComponentTypeEnum[this.propsBox.children[i].textString])) {\n\t\t\t\t\tthis.propsBox.children[i].setHidden(false);\n\t\t\t\t\tlet hiddenStatus = this.propsVisibleMemory.get(ComponentTypeEnum[this.propsBox.children[i].textString]);\n\t\t\t\t\tif (hiddenStatus != undefined) {\n\t\t\t\t\t\tthis.propsBox.children[i+1].setHidden(hiddenStatus);\n\t\t\t\t\t}\n\t\t\t\t\tentity.getComponent(ComponentTypeEnum[this.propsBox.children[i].textString]).updateGui(this.overlay, this.propsBox, this.game.objectPlacer);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.propsBox.children[i].setHidden(true);\n\t\t\t\t\tthis.propsBox.children[i+1].setHidden(true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tfor (let i = 1; i < this.propsBox.children.length; i++) {\n\t\t\t\tthis.propsBox.children[i].setHidden(true);\n\t\t\t}\n\t\t}\n\t}\n\n\treset() {\n\t\tthis.overlay.hide();\n\t\tthis.hidden = true;\n\t}\n\n\ttoggleHidden() {\n\t\tif (this.hidden) {\n\t\t\tthis.overlay.show();\n\t\t\tthis.hidden = false;\n\t\t} else {\n\t\t\tthis.overlay.hide();\n\t\t\tthis.hidden = true;\n\t\t}\n\t}\n\n\tdraw() {\n\t\tthis.overlay.draw();\n\t}\n}\n","import State, { StatesEnum } from \"../../Engine/States/State\";\nimport { input, options, StateAccessible } from \"../GameMachine\";\nimport Game from \"./Game\";\nimport { MousePicking } from \"../../Engine/Maths/MousePicking\";\nimport DebugMenu from \"./DebugMenu\";\nimport { WebUtils } from \"../../Engine/Utils/WebUtils\";\nimport { ECSUtils } from \"../../Engine/Utils/ESCUtils\";\nimport { mat4, vec2, vec3 } from \"gl-matrix\";\n\nexport default class DebugMode extends State {\n\tprivate game: Game;\n\tprivate stateAccessible: StateAccessible;\n\tprivate debugMenu: DebugMenu;\n\tprivate mouseWasPressed: boolean;\n\tprivate cWasPressed: boolean;\n\tprivate lastMousePos: vec2;\n\tprivate checkpointNeeded: boolean;\n\tprivate checkpointTriggeredThisFrame: boolean;\n\tprivate actionString: string;\n\tprivate oWasPressed: boolean;\n\tprivate pWasPressed: boolean;\n\n\tconstructor(sa: StateAccessible, game: Game) {\n\t\tsuper();\n\t\tthis.stateAccessible = sa;\n\t\tthis.game = game;\n\t\tthis.debugMenu = new DebugMenu(this.stateAccessible, this.game, this);\n\n\t\tthis.lastMousePos = vec2.fromValues(input.mousePosition.x, input.mousePosition.y,);\n\n\t\tthis.oWasPressed = true;\n\t\tthis.pWasPressed = true;\n\t\tthis.mouseWasPressed = false;\n\t\tthis.cWasPressed = false;\n\t\tthis.checkpointNeeded = false;\n\t\tthis.checkpointTriggeredThisFrame = false;\n\t\tthis.actionString = \"\";\n\t}\n\n\tasync init() {\n\t\tthis.debugMenu.init();\n\t\tlet posCookie = WebUtils.GetCookie(\"debugPos\");\n\t\tif (posCookie != \"\") {\n\t\t\tlet coords = posCookie.split(\",\");\n\t\t\tif (coords.length == 3) {\n\t\t\t\tthis.game.rendering.camera.setPosition(\n\t\t\t\t\tvec3.fromValues(parseFloat(coords[0]),\n\t\t\t\t\tparseFloat(coords[1]),\n\t\t\t\t\tparseFloat(coords[2]))\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tlet dirCookie = WebUtils.GetCookie(\"debugDir\");\n\t\tif (dirCookie != \"\") {\n\t\t\tlet coords = dirCookie.split(\",\");\n\t\t\tif (coords.length == 3) {\n\t\t\t\tthis.game.rendering.camera.setDir(\n\t\t\t\t\tvec3.fromValues(parseFloat(coords[0]),\n\t\t\t\t\tparseFloat(coords[1]),\n\t\t\t\t\tparseFloat(coords[2]))\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tthis.oWasPressed = true;\n\t\tthis.pWasPressed = true;\n\t\tdocument.exitPointerLock();\n\t}\n\n\treset() {\n\t\tthis.debugMenu.reset();\n\t}\n\n\tprivate handleInput(dt: number) {\n\t\tif (input.keys[\"O\"]) {\n\t\t\tif (!this.oWasPressed) {\n\t\t\t\tWebUtils.SetCookie(\"debug\", \"false\");\n\t\t\t\tthis.gotoState = StatesEnum.GAME;\n\t\t\t}\n\t\t\tthis.oWasPressed = true;\n\t\t} else {\n\t\t\tthis.oWasPressed = false;\n\t\t}\n\n\t\tif (input.keys[\"P\"]) {\n\t\t\tif (!this.pWasPressed) {\n\t\t\t\tthis.debugMenu.toggleHidden();\n\t\t\t}\n\t\t\tthis.pWasPressed = true;\n\t\t} else {\n\t\t\tthis.pWasPressed = false;\n\t\t}\n\n\t\tlet moveVec: vec3 = vec3.create();\n\t\tlet move = false;\n\t\tif (input.keys[\"W\"]) {\n\t\t\tvec3.add(moveVec, moveVec, this.game.rendering.camera.getDir());\n\t\t\tmove = true;\n\t\t}\n\n\t\tif (input.keys[\"S\"]) {\n\t\t\tvec3.subtract(moveVec, moveVec, this.game.rendering.camera.getDir());\n\t\t\tmove = true;\n\t\t}\n\n\t\tif (input.keys[\"A\"]) {\n\t\t\tvec3.subtract(moveVec, moveVec, this.game.rendering.camera.getRight());\n\t\t\tmove = true;\n\t\t}\n\n\t\tif (input.keys[\"D\"]) {\n\t\t\tvec3.add(moveVec, moveVec, this.game.rendering.camera.getRight());\n\t\t\tmove = true;\n\t\t}\n\n\t\tif (input.keys[\" \"]) {\n\t\t\tvec3.add(moveVec, moveVec, vec3.fromValues(0.0, 1.0, 0.0));\n\t\t\tmove = true;\n\t\t}\n\n\t\tif (input.keys[\"SHIFT\"]) {\n\t\t\tvec3.subtract(moveVec, moveVec, vec3.fromValues(0.0, 1.0, 0.0));\n\t\t\tmove = true;\n\t\t}\n\n\t\tif (move) {\n\t\t\tvec3.normalize(moveVec, moveVec);\n\t\t\tvec3.scale(moveVec, moveVec, 15.0 * dt); // Speed\n\t\t\tthis.game.rendering.camera.translate(moveVec);\n\t\t}\n\n\t\tlet rotVec: vec2 = vec2.create();\n\t\tlet rotate = false;\n\n\t\tif (\n\t\t\tinput.mouseRightClicked &&\n\t\t\t!this.debugMenu.mouseOverGuiElement &&\n\t\t\t(input.mousePosition.x != input.mousePosition.previousX ||\n\t\t\t\tinput.mousePosition.y != input.mousePosition.previousY)\n\t\t) {\n\t\t\tvec2.set(rotVec,\n\t\t\t\t(input.mousePosition.previousY - input.mousePosition.y) * 0.2,\n\t\t\t\t(input.mousePosition.previousX - input.mousePosition.x) * 0.2\n\t\t\t);\n\n\t\t\trotate = true;\n\t\t}\n\n\t\tif (rotate) {\n\t\t\tlet rotMatrix = mat4.create();\n\t\t\tlet rotAmount: number = 90.0;\n\t\t\tlet rightVec = vec3.copy(vec3.create(), this.game.rendering.camera.getRight());\n\t\t\tif (rotVec[1]) {\n\t\t\t\tmat4.rotate(rotMatrix, rotMatrix, rotAmount * rotVec[1] * dt * Math.PI / 180.0, vec3.fromValues(0.0, 1.0, 0.0));\n\t\t\t}\n\t\t\tif (rotVec[0]) {\n\t\t\t\tmat4.rotate(rotMatrix, rotMatrix, rotAmount * rotVec[0] * dt * Math.PI / 180.0, rightVec);\n\t\t\t}\n\t\t\tlet oldDir = this.game.rendering.camera.getDir();\n\t\t\tlet newDir = vec3.transformMat4(vec3.create(), oldDir, rotMatrix);\n\t\t\tthis.game.rendering.camera.setDir(\n\t\t\t\tnewDir\n\t\t\t);\n\t\t}\n\n\t\tif (input.mouseClicked && !this.debugMenu.mouseOverGuiElement) {\n\t\t\t// Holding mousebutton\n\t\t\tlet rotChange = vec3.create();\n\t\t\tlet newPosition = null;\n\t\t\tlet scaleChange = 0.0;\n\t\t\tlet edited = false;\n\t\t\tif (input.keys[\"R\"]) {\n\t\t\t\tif (input.keys[\"1\"]) {\n\t\t\t\t\trotChange[0] = input.mousePosition.x - this.lastMousePos[0];\n\t\t\t\t}\n\t\t\t\tif (input.keys[\"2\"]) {\n\t\t\t\t\trotChange[1] = input.mousePosition.x - this.lastMousePos[0];\n\t\t\t\t}\n\t\t\t\tif (input.keys[\"3\"]) {\n\t\t\t\t\trotChange[2] = input.mousePosition.x - this.lastMousePos[0];\n\t\t\t\t}\n\t\t\t\tedited = true;\n\t\t\t\tthis.actionString = \"Rotating\";\n\t\t\t} \n\t\t\telse if(input.keys[\"T\"]) {\n\t\t\t\tlet ray = MousePicking.GetRay(this.game.rendering.camera);\n\t\t\t\tlet dist: number = Infinity;\n\n\t\t\t\tdist = this.game.objectPlacer.rayCastToNonSelectedObjects(ray);\n\t\t\t\t\n\t\t\t\tif (dist >= 0.0 && dist < Infinity) {\n\t\t\t\t\tnewPosition = vec3.add(vec3.create(), this.game.rendering.camera.getPosition(), vec3.scale(vec3.create(), ray.getDir(), dist));\n\t\t\t\t}\n\t\t\t\tthis.actionString = \"Moving\";\n\t\t\t\tedited = true;\n\t\t\t}\n\t\t\telse if (input.keys[\"Y\"]) {\n\t\t\t\tscaleChange = (this.lastMousePos[1] - input.mousePosition.y) * 0.001;\n\t\t\t\tedited = true;\n\t\t\t\tthis.actionString = \"Scaling\";\n\t\t\t}\n\n\t\t\tif (edited) {\n\t\t\t\tthis.game.objectPlacer.updateCurrentlyEditingObject(\n\t\t\t\t\trotChange,\n\t\t\t\t\tscaleChange,\n\t\t\t\t\tnewPosition\n\t\t\t\t);\n\t\t\t\tthis.checkpointTriggeredThisFrame = true;\n\t\t\t\tthis.checkpointNeeded = true;\n\t\t\t} else if (!this.mouseWasPressed) {\n\t\t\t\t// If we clicked the mouse button this frame\n\t\t\t\t// Try to select a new object to edit\n\t\t\t\tlet ray = MousePicking.GetRay(this.game.rendering.camera);\n\t\t\t\tthis.game.objectPlacer.rayCastToSelectNewObject(ray);\n\t\t\t\tthis.actionString = \"Selected \";\n\t\t\t}\n\n\t\t\tthis.mouseWasPressed = true;\n\t\t} else {\n\t\t\tthis.mouseWasPressed = false;\n\t\t\tthis.actionString = \"Currently selected:\";\n\t\t}\n\n\t\tif (input.keys[\"DELETE\"]) {\n\t\t\tthis.game.objectPlacer.deleteCurrentObject();\n\t\t\tthis.actionString = \"Deleted object\";\n\t\t\tthis.checkpointTriggeredThisFrame = true;\n\t\t\tthis.checkpointNeeded = true;\n\t\t}\n\n\t\tif (input.keys[\"C\"]) {\n\t\t\tif (!this.cWasPressed) {\n\t\t\t\tthis.game.objectPlacer.duplicateCurrentObject();\n\t\t\t\tthis.actionString = \"Duplicated object\";\n\t\t\t\tthis.checkpointTriggeredThisFrame = true;\n\t\t\t\tthis.checkpointNeeded = true;\n\t\t\t}\n\t\t\tthis.cWasPressed = true;\n\t\t} else {\n\t\t\tthis.cWasPressed = false;\n\t\t}\n\t}\n\n\tupdate(dt: number) {\n\t\tthis.checkpointTriggeredThisFrame = false;\n\n\t\tif (document.activeElement == document.getElementById(\"content\")) {\n\t\t\tthis.handleInput(dt);\n\t\t}\n\n\t\tvec2.set(this.lastMousePos, \n\t\t\tinput.mousePosition.x,\n\t\t\tinput.mousePosition.y);\n\t\t\t\n\t\tlet camPos = this.game.rendering.camera.getPosition();\n\t\tWebUtils.SetCookie(\"debugPos\", camPos[0] + \",\" + camPos[1] + \",\" + camPos[2]);\n\t\tlet camDir = this.game.rendering.camera.getDir();\n\t\tWebUtils.SetCookie(\"debugDir\", camDir[0] + \",\" + camDir[1] + \",\" + camDir[2]);\n\n\t\tthis.debugMenu.actionText.textString =\n\t\t\tthis.actionString + \" \" + this.game.objectPlacer.getCurrentObjectType();\n\n\t\tthis.debugMenu.update(dt);\n\t\t\n\t\tthis.game.ecsManager.update(0.0);\n\n\t\tif (this.checkpointNeeded && !this.checkpointTriggeredThisFrame) {\n\t\t\tthis.game.objectPlacer.makeCheckpoint();\n\t\t\tthis.checkpointNeeded = false;\n\t\t}\n\t}\n\n\tprepareDraw(dt: number): void {\n\t\tthis.game.prepareDraw(dt, false);\n\t}\n\n\tdraw() {\n\t\tthis.game.rendering.draw();\n\t\tthis.debugMenu.draw();\n\t\tinput.drawTouchControls();\n\t}\n}\n","import ECSManager from \"../../Engine/ECS/ECSManager\";\r\nimport State, { StatesEnum } from \"../../Engine/States/State\";\r\nimport Rendering from \"../../Engine/Rendering/Rendering\";\r\nimport { input, options, StateAccessible } from \"../GameMachine\";\r\nimport Button from \"../../Engine/Rendering/GUI/Objects/Button\";\r\nimport { OverlayRendering } from \"../../Engine/Rendering/GUI/OverlayRendering\";\r\nimport Scene from \"../../Engine/Rendering/Scene\";\r\nimport ObjectPlacer from \"../ObjectPlacer\";\r\nimport { WebUtils } from \"../../Engine/Utils/WebUtils\";\r\nimport { vec3 } from \"gl-matrix\";\r\nimport GolfBall from \"../GolfBall\";\r\nimport PointLightComponent from \"../../Engine/ECS/Components/PointLightComponent\";\r\nimport PositionComponent from \"../../Engine/ECS/Components/PositionComponent\";\r\n\r\nexport default class Game extends State {\r\n\trendering: Rendering;\r\n\tecsManager: ECSManager;\r\n\tprivate stateAccessible: StateAccessible;\r\n\r\n\tprivate overlayRendering: OverlayRendering;\r\n\tprivate menuButton: Button;\r\n\tobjectPlacer: ObjectPlacer;\r\n\r\n\tprivate scene: Scene;\r\n\tprivate static instance: Game;\r\n\r\n\tprivate golfBall: GolfBall;\r\n\r\n\tprivate oWasPressed: boolean;\r\n\r\n\tpublic static getInstance(sa: StateAccessible): Game {\r\n\t\tif (!Game.instance) {\r\n\t\t\tGame.instance = new Game(sa);\r\n\t\t}\r\n\t\treturn Game.instance;\r\n\t}\r\n\r\n\tpublic static getInstanceNoSa(): Game {\r\n\t\treturn Game.instance;\r\n\t}\r\n\r\n\tprivate constructor(sa: StateAccessible) {\r\n\t\tsuper();\r\n\t\tthis.stateAccessible = sa;\r\n\t\tthis.objectPlacer = new ObjectPlacer(this.stateAccessible.meshStore, this.stateAccessible.textureStore);\r\n\t\tthis.oWasPressed = true;\r\n\r\n\t\tthis.overlayRendering = new OverlayRendering();\r\n\r\n\t\tthis.menuButton = this.overlayRendering.getNewButton();\r\n\t\tthis.menuButton.position[0] = 0.9;\r\n\t\tthis.menuButton.position[1] = 0.0;\r\n\t\tthis.menuButton.textSize = 40;\r\n\t\tthis.menuButton.getInputElement().style.background = \"transparent\";\r\n\t\tthis.menuButton.getInputElement().style.borderColor = \"transparent\";\r\n\t\tthis.menuButton.getInputElement().style.boxShadow = \"none\";\r\n\t\tthis.menuButton.textString = \"Menu\";\r\n\r\n\t\tlet self = this;\r\n\t\tthis.menuButton.onClick(function () {\r\n\t\t\tself.gotoState = StatesEnum.MAINMENU;\r\n\t\t});\r\n\r\n\t\tlet crosshair = this.overlayRendering.getNew2DText();\r\n\t\tcrosshair.position[0] = 0.5;\r\n\t\tcrosshair.position[1] = 0.5;\r\n\t\tcrosshair.center = true;\r\n\t\tcrosshair.scaleWithWindow = true;\r\n\t\tcrosshair.size = 10;\r\n\t\tcrosshair.textString = \"➕\";\r\n\r\n\t\tthis.scene = new Scene(\r\n\t\t\tthis.stateAccessible.textureStore,\r\n\t\t\tthis.stateAccessible.meshStore\r\n\t\t);\r\n\t\tthis.rendering = new Rendering(\r\n\t\t\tthis.stateAccessible.textureStore,\r\n\t\t\tthis.scene\r\n\t\t);\r\n\t\tthis.ecsManager = new ECSManager(this.rendering);\r\n\t\tthis.golfBall = new GolfBall(this.scene, this, this.overlayRendering, this.stateAccessible.meshStore);\r\n\t\tthis.createPointLight(vec3.fromValues(-14.0, -5.0, 7.0), true, vec3.fromValues(3.0, 0.8, 0.0));\r\n\t\tthis.createPointLight(vec3.fromValues(5.0, -5.0, -9.0), true, vec3.fromValues(0.0, 0.8, 3.0));\r\n\t\t// this.createPointLight(vec3.fromValues(-20.0, -5.0, -14.0), true, vec3.fromValues(0.0, 2.0, 0.8));\r\n\t\t// this.createPointLight(vec3.fromValues(10.0, -5.0, -15.0), true, vec3.fromValues(2.0, 0.0, 0.8));\r\n\t\t// this.createPointLight(vec3.fromValues(10.0, -5.0, 15.0), true, vec3.fromValues(0.8, 2.0, 0.0));\r\n\t}\r\n\r\n\tcreatePointLight(position: vec3, castShadow: boolean, colour?: vec3) {\r\n\t\tlet pointLightEntity = this.ecsManager.createEntity();\r\n\t\tlet pointLightComp = new PointLightComponent(this.scene.getNewPointLight());\r\n\t\tvec3.set(pointLightComp.posOffset, 0.0, 2.0, 0.0);\r\n\t\tif (colour != undefined) {\r\n\t\t\tvec3.copy(pointLightComp.pointLight.colour, colour);\r\n\t\t}\r\n\t\t// pointLightComp.pointLight.linear = 0.007;\r\n\t\t// pointLightComp.pointLight.quadratic = 0.005;\r\n\t\tpointLightComp.pointLight.castShadow = castShadow;\r\n\t\tthis.ecsManager.addComponent(pointLightEntity, pointLightComp);\r\n\t\tlet lightPosComp = new PositionComponent();\r\n\t\tvec3.copy(lightPosComp.position, position);\r\n\t\tthis.ecsManager.addComponent(pointLightEntity, lightPosComp);\r\n\t}\r\n\r\n\tasync load() {\r\n\t\t// let colour = vec3.fromValues(0.10, 0.10, 0.15);\r\n\t\tlet colour = vec3.fromValues(0.0, 0.0, 0.0);\r\n\t\tthis.rendering.clearColour.r = colour[0];\r\n\t\tthis.rendering.clearColour.g = colour[1];\r\n\t\tthis.rendering.clearColour.b = colour[2];\r\n\r\n\t\tlet dirLight = this.scene.getDirectionalLight();\r\n\t\tdirLight.ambientMultiplier = 0.1;\r\n\t\tvec3.set(dirLight.direction, 0.2, -0.9, -0.4);\r\n\t\tvec3.copy(dirLight.colour, colour);\r\n\r\n\t\tthis.rendering.setSkybox(\"Assets/textures/skyboxes/NightSky\");\r\n\r\n\t\tawait this.objectPlacer.load(this.scene, this.ecsManager, this.stateAccessible.level);\r\n\r\n\t\tthis.rendering.camera.setPosition(vec3.fromValues(0.0, 2.0, 0.0));\r\n\t\tthis.overlayRendering.setCamera(this.rendering.camera);\r\n\r\n\t\tthis.golfBall.init();\r\n\t}\r\n\r\n\tasync init() {\r\n\t\tif (this.stateAccessible.restartGame) {\r\n\t\t\tawait this.load();\r\n\t\t\tthis.stateAccessible.restartGame = false;\r\n\t\t}\r\n\r\n\t\tthis.overlayRendering.show();\r\n\t\tthis.rendering.useCrt = options.useCrt;\r\n\t\tthis.rendering.useBloom = options.useBloom;\r\n\t\tif (WebUtils.GetCookie(\"debug\") == \"true\") {\r\n\t\t\tthis.gotoState = StatesEnum.DEBUGMODE;\r\n\t\t}\r\n\t\tthis.oWasPressed = true;\r\n\t}\r\n\r\n\treset() {\r\n\t\tif (this.overlayRendering) {\r\n\t\t\tthis.overlayRendering.hide();\r\n\t\t}\r\n\t\tinput.touchUsed = false;\r\n\t\tinput.drawTouchControls();\r\n\t}\r\n\r\n\tonExit(e: BeforeUnloadEvent) {\r\n\t\tthis.objectPlacer.onExit(e);\r\n\t}\r\n\r\n\tupdate(dt: number) {\r\n\t\tif (input.keys[\"O\"]) {\r\n\t\t\tif (!this.oWasPressed) {\r\n\t\t\t\tthis.gotoState = StatesEnum.DEBUGMODE;\r\n\t\t\t\tWebUtils.SetCookie(\"debug\", \"true\");\r\n\t\t\t}\r\n\t\t\tthis.oWasPressed = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.oWasPressed = false;\r\n\t\t}\r\n\r\n\t\tthis.golfBall.update(dt);\r\n\r\n\t\tthis.ecsManager.update(dt);\r\n\t}\r\n\r\n\tprepareDraw(dt: number, updateCameraFocus: boolean = true): void {\r\n\t\tthis.ecsManager.updateRenderingSystems(dt, updateCameraFocus);\r\n\t}\r\n\r\n\tdraw() {\r\n\t\tthis.rendering.draw();\r\n\t\tthis.overlayRendering.draw();\r\n\t\tinput.drawTouchControls();\r\n\t}\r\n}\r\n","import { OverlayRendering } from \"../../Engine/Rendering/GUI/OverlayRendering\";\nimport State, { StatesEnum } from \"../../Engine/States/State\";\nimport { StateAccessible } from \"../GameMachine\";\nimport Game from \"./Game\";\n\nconst numLevels = 5;\n\nexport default class LevelSelect extends State {\n\tprivate overlayRendering: OverlayRendering;\n\tprivate sa: StateAccessible;\n\n\tconstructor(sa: StateAccessible) {\n\t\tsuper();\n\t\tthis.sa = sa;\n\t\tthis.overlayRendering = new OverlayRendering();\n\n        for (let i = 1; i <= numLevels; i++) {\n            let level1Button = this.overlayRendering.getNewButton();\n            level1Button.position[0] = 0.5;\n            level1Button.position[1] = 0.2 + i * 0.1;\n            level1Button.center = true;\n            level1Button.textString = \"Level \" + i;\n\n            let self = this;\n            level1Button.onClick(function () {\n                self.gotoState = StatesEnum.GAME;\n                self.sa.level = \"Assets/placements/Level\" + i + \".txt\";\n                self.sa.restartGame = true;\n            });\n        }\n\n\t\tlet backButton = this.overlayRendering.getNewButton();\n\t\tbackButton.position[0] = 0.5;\n\t\tbackButton.position[1] = 0.2 + (numLevels + 1) * 0.1;\n\t\tbackButton.center = true;\n\t\tbackButton.textString = \"Back\";\n\n\t\tlet self = this;\n\t\tbackButton.onClick(function () {\n\t\t\tself.gotoState = StatesEnum.MAINMENU;\n\t\t});\n\n\t}\n\n\tasync init() {\n\t\tthis.overlayRendering.show();\n\t\tdocument.exitPointerLock();\n\t}\n\n\treset() {\n\t\tthis.overlayRendering.hide();\n\t}\n\n\tupdate(dt: number) {}\n\n\tdraw() {\n\t\tthis.overlayRendering.draw();\n\t}\n}\n","import Progress from \"../../Engine/Rendering/GUI/Objects/Progress\";\nimport State, { StatesEnum } from \"../../Engine/States/State\";\nimport TextObject2D from \"../../Engine/Rendering/GUI/Objects/Text/TextObject2D\";\nimport { StateAccessible } from \"../GameMachine\";\nimport Texture from \"../../Engine/Rendering/Textures/Texture\";\nimport { OverlayRendering } from \"../../Engine/Rendering/GUI/OverlayRendering\";\n\nexport default class LoadingScreen extends State {\n\tprivate overlayRendering: OverlayRendering;\n\tprivate sa: StateAccessible;\n\n\tprivate text: TextObject2D;\n\tprivate statusText: string;\n\tprivate progressBar: Progress;\n\tprivate progress: number;\n\tprivate timer: number;\n\n\tprivate texturesToLoad: Texture[];\n\tprivate meshesRequested: number;\n\tprivate meshesLoaded: number;\n\tprivate heightmapsRequested: number;\n\tprivate heightmapsLoaded: number;\n\tprivate octreesToLoad: Object[];\n\tprivate octreesRequested: number;\n\tprivate octreesLoaded: number;\n\n\tconstructor(sa: StateAccessible) {\n\t\tsuper();\n\t\tthis.overlayRendering = new OverlayRendering();\n\t\tthis.sa = sa;\n\n\t\t// Crate GUI\n\t\tthis.text = this.overlayRendering.getNew2DText();\n\t\tthis.text.center = true;\n\t\tthis.text.position[0] = 0.5;\n\t\tthis.text.position[1] = 0.4;\n\t\tthis.text.size = 50;\n\t\tthis.statusText = \"Loading assets \";\n\n\t\tthis.progressBar = this.overlayRendering.getNewProgress();\n\t\tthis.progressBar.center = true;\n\t\tthis.progressBar.position[0] = 0.5;\n\t\tthis.progressBar.position[1] = 0.5;\n\t\tthis.progressBar.size = 50;\n\t\tthis.progressBar.getProgressElement().style.borderRadius = \"4px\";\n\t\tthis.progressBar.getProgressElement().max = 1.0;\n\t\tthis.progressBar.getProgressElement().value = 0.0;\n\t\tthis.progress = 0;\n\t\tthis.timer = 0;\n\t}\n\n\tasync init() {\n\t\tthis.overlayRendering.show();\n\t\tthis.overlayRendering.draw();\n\n\t\t// Load all textures to avoid loading mid game\n\t\tlet textures = [];\n\n\t\tconst texturesResponse = await fetch(\"Assets/textures/textures.txt\");\n\t\tif (texturesResponse.ok) {\n\t\t\tconst content = await texturesResponse.text();\n\n\t\t\tfor (let row of content.split(\"\\n\")) {\n\t\t\t\tif (row.includes(\".png\") || row.includes(\".jpg\")) {\n\t\t\t\t\trow = row.replace(\"\\r\", \"\");\n\t\t\t\t\ttextures.push(\"Assets/textures/\" + row);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet cubeMaps = [\"Assets/textures/skyboxes/NightSky\"];\n\n\t\t// Meshes to load\n\t\tlet meshes = [];\n\n\t\tconst objsResponse = await fetch(\"Assets/objs/objs.txt\");\n\t\tif (objsResponse.ok) {\n\t\t\tconst content = await objsResponse.text();\n\n\t\t\tfor (let row of content.split(\"\\n\")) {\n\t\t\t\tif (row.includes(\".obj\")) {\n\t\t\t\t\trow = row.replace(\"\\r\", \"\");\n\t\t\t\t\tmeshes.push(\"Assets/objs/\" + row);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.meshesRequested = meshes.length;\n\t\tthis.meshesLoaded = 0;\n\n\t\t// Heightmaps to load\n\t\tlet heightmaps: (string | boolean| number)[][] = [\n\t\t\t// [\"Assets/heightmaps/heightmap.png\", false, 200, 200, 1.0, 1.0],\n\t\t];\n\t\tthis.heightmapsRequested = heightmaps.length;\n\t\tthis.heightmapsLoaded = 0;\n\n\t\t// Octrees to create\n\t\tthis.octreesToLoad = [\n\t\t\t// [\"Assets/heightmaps/heightmap.png\", 0.01, 10],\n\t\t\t[\"Assets/objs/house.obj\", 0.1, 20],\n\t\t\t[\"Assets/objs/police_car.obj\", 0.1, 20],\n\t\t\t[\"Assets/objs/Diamond.obj\", 0.1, 20],\n\t\t\t[\"Assets/objs/sphere.obj\", 0.1, 20],\n\t\t];\n\t\tthis.octreesRequested = this.octreesToLoad.length;\n\t\tthis.octreesLoaded = 0;\n\n\t\tthis.texturesToLoad = new Array<Texture>();\n\t\tfor (const texFile of textures) {\n\t\t\tthis.texturesToLoad.push(this.sa.textureStore.getTexture(texFile));\n\t\t}\n\n\t\tfor (const cubeMapFile of cubeMaps) {\n\t\t\tthis.texturesToLoad.push(this.sa.textureStore.getCubeMap(cubeMapFile));\n\t\t}\n\n\t\t// Load meshes\n\t\tfor (const meshFile of meshes) {\n\t\t\tthis.sa.meshStore.loadMesh(meshFile).then(() => {\n\t\t\t\tthis.meshesLoaded++;\n\t\t\t});\n\t\t}\n\n\t\t// Load heightmaps\n\t\tfor (const heightmapInfo of heightmaps) {\n\t\t\tthis.sa.meshStore\n\t\t\t\t.loadHeightmap.apply(this.sa.meshStore,\theightmapInfo)\n\t\t\t\t.then(() => {\n\t\t\t\t\tthis.heightmapsLoaded++;\n\t\t\t\t});\n\t\t}\n\t}\n\n\treset() {\n\t\tthis.overlayRendering.hide();\n\t}\n\n\tupdate(dt: number) {\n\t\tlet requestedAssets =\n\t\t\tthis.texturesToLoad.length +\n\t\t\tthis.meshesRequested +\n\t\t\tthis.heightmapsRequested +\n\t\t\tthis.octreesRequested;\n\t\tlet texturesLoaded = 0;\n\t\tfor (let tex of this.texturesToLoad) {\n\t\t\tif (tex.loadedFromFile) {\n\t\t\t\ttexturesLoaded++;\n\t\t\t}\n\t\t}\n\t\tlet loadedAssets =\n\t\t\ttexturesLoaded +\n\t\t\tthis.meshesLoaded +\n\t\t\tthis.heightmapsLoaded +\n\t\t\tthis.octreesLoaded;\n\n\t\t// When all meshes and heightmaps have been loaded, we can start processing octrees\n\t\tif (\n\t\t\tthis.meshesLoaded == this.meshesRequested &&\n\t\t\tthis.heightmapsLoaded == this.heightmapsRequested &&\n\t\t\tthis.octreesToLoad.length > 0\n\t\t) {\n\t\t\tthis.statusText = \"Generating octrees \";\n\t\t\tlet i = this.octreesToLoad.length - 1;\n\t\t\tlet octreeToLoad = this.octreesToLoad[i];\n\t\t\tthis.sa.meshStore\n\t\t\t\t.loadOctree(\n\t\t\t\t\toctreeToLoad[0],\n\t\t\t\t\toctreeToLoad[1],\n\t\t\t\t\toctreeToLoad[2],\n\t\t\t\t\t10 /*Give a 10 ms deadline*/\n\t\t\t\t)\n\t\t\t\t.then((value) => {\n\t\t\t\t\tif (value.doneLoading) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tthis.octreesToLoad[this.octreesToLoad.length - 1][0] ==\n\t\t\t\t\t\t\toctreeToLoad[0]\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthis.octreesToLoad.pop(); // Done loading, remove it from the queue\n\t\t\t\t\t\t\tthis.octreesLoaded++; // And increase the number of octrees loaded\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\n\t\tthis.timer += dt;\n\n\t\tthis.progress = loadedAssets / requestedAssets;\n\t\tthis.progressBar.getProgressElement().value = this.progress;\n\t\tthis.text.textString = this.statusText;\n\t\tfor (let i = 4; i > 1; i--) {\n\t\t\tif (this.timer - Math.floor(this.timer) > 1.0 / i) {\n\t\t\t\tthis.text.textString += \"-\";\n\t\t\t} else {\n\t\t\t\tthis.text.textString += \"_\";\n\t\t\t}\n\t\t}\n\t\tthis.text.textString += \"  \" + Math.ceil(this.progress * 100) + \"%\";\n\n\t\tif (this.progress >= 1.0 && this.timer >= 0.5) {\n\t\t\tthis.gotoState = StatesEnum.MAINMENU;\n\t\t}\n\t}\n\n\tdraw() {\n\t\tthis.overlayRendering.draw();\n\t}\n}\n","import { OverlayRendering } from \"../../Engine/Rendering/GUI/OverlayRendering\";\nimport State, { StatesEnum } from \"../../Engine/States/State\";\nimport { gl } from \"../../main\";\nimport { StateAccessible } from \"../GameMachine\";\n\nexport default class Menu extends State {\n\tprivate overlayRendering: OverlayRendering;\n\tprivate sa: StateAccessible;\n\n\tconstructor(sa: StateAccessible) {\n\t\tsuper();\n\t\tthis.sa = sa;\n\t\tthis.overlayRendering = new OverlayRendering();\n\n\t\tlet startButton = this.overlayRendering.getNewButton();\n\t\tstartButton.position[0] = 0.5;\n\t\tstartButton.position[1] = 0.2;\n\t\tstartButton.center = true;\n\t\tstartButton.textString = \"Start\";\n\n\t\tlet self = this;\n\t\tstartButton.onClick(function () {\n\t\t\tself.gotoState = StatesEnum.LEVELSELECT;\n\t\t});\n\n\t\tlet resumeButton = this.overlayRendering.getNewButton();\n\t\tresumeButton.position[0] = 0.5;\n\t\tresumeButton.position[1] = 0.4;\n\t\tresumeButton.center = true;\n\t\tresumeButton.textString = \"Resume\";\n\n\t\tresumeButton.onClick(function () {\n\t\t\tself.gotoState = StatesEnum.GAME;\n\t\t});\n\n\t\tlet optionsButton = this.overlayRendering.getNewButton();\n\t\toptionsButton.position[0] = 0.5;\n\t\toptionsButton.position[1] = 0.6;\n\t\toptionsButton.center = true;\n\t\toptionsButton.textString = \"Options\";\n\n\t\toptionsButton.onClick(function () {\n\t\t\tself.gotoState = StatesEnum.OPTIONS;\n\t\t});\n\n\t\tlet fullscreenButton = this.overlayRendering.getNewButton();\n\t\tfullscreenButton.position[0] = 0.5;\n\t\tfullscreenButton.position[1] = 0.8;\n\t\tfullscreenButton.center = true;\n\t\tfullscreenButton.textString = \"Fullscreen\";\n\n\t\tfullscreenButton.onClick(function () {\n\t\t\tdocument.getElementById(\"gameDiv\").requestFullscreen();\n\t\t});\n\t}\n\n\tasync init() {\n\t\tthis.overlayRendering.show();\n\t\tdocument.exitPointerLock();\n\t\tgl.clearColor(0.0, 0.0, 0.0, 0.0);\n\t\tgl.clear(gl.COLOR_BUFFER_BIT);\n\t}\n\n\treset() {\n\t\tthis.overlayRendering.hide();\n\t}\n\n\tupdate(dt: number) {}\n\n\tdraw() {\n\t\tthis.overlayRendering.draw();\n\t}\n}\n","import Button from \"../../Engine/Rendering/GUI/Objects/Button\";\nimport Checkbox from \"../../Engine/Rendering/GUI/Objects/Checkbox\";\nimport Slider from \"../../Engine/Rendering/GUI/Objects/Slider\";\nimport { options } from \"../GameMachine\";\nimport State, { StatesEnum } from \"../../Engine/States/State\";\nimport { StateAccessible } from \"../GameMachine\";\nimport { OverlayRendering } from \"../../Engine/Rendering/GUI/OverlayRendering\";\n\nexport default class OptionsMenu extends State {\n\tprivate overlayRendering: OverlayRendering;\n\n\tprivate backButton: Button;\n\tprivate crtCB: Checkbox;\n\tprivate bloomCB: Checkbox;\n\tprivate grassCB: Checkbox;\n\tprivate grassDensitySlider: Slider;\n\tprivate fpsDisplayCB: Checkbox;\n\tprivate controlsButton: Button;\n\tprivate musicVolume: Slider;\n\tprivate effectVolume: Slider;\n\tprivate stateAccessible: StateAccessible;\n\n\tconstructor(sa: StateAccessible) {\n\t\tsuper();\n\t\tthis.stateAccessible = sa;\n\t\tthis.overlayRendering = new OverlayRendering();\n\n\t\tthis.crtCB = this.overlayRendering.getNewCheckbox();\n\t\tthis.crtCB.position[0] = 0.4;\n\t\tthis.crtCB.position[1] = 0.25;\n\t\tthis.crtCB.textString = \"CRT-effect \";\n\t\tthis.crtCB.getInputElement().checked = options.useCrt;\n\n\t\tthis.bloomCB = this.overlayRendering.getNewCheckbox();\n\t\tthis.bloomCB.position[0] = 0.4;\n\t\tthis.bloomCB.position[1] = 0.3;\n\t\tthis.bloomCB.textString = \"Bloom-effect \";\n\t\tthis.bloomCB.getInputElement().checked = options.useBloom;\n\n\t\tthis.grassCB = this.overlayRendering.getNewCheckbox();\n\t\tthis.grassCB.position[0] = 0.4;\n\t\tthis.grassCB.position[1] = 0.35;\n\t\tthis.grassCB.textString = \"Foldable grass \";\n\t\tthis.grassCB.getInputElement().checked = options.foldableGrass;\n\n\t\tthis.grassDensitySlider = this.overlayRendering.getNewSlider();\n\t\tthis.grassDensitySlider.position[0] = 0.4;\n\t\tthis.grassDensitySlider.position[1] = 0.4;\n\t\tthis.grassDensitySlider.textString = \"Grass density \\r\\n(requires restart)\";\n\t\tthis.grassDensitySlider.getInputElement().min = \"1000\";\n\t\tthis.grassDensitySlider.getInputElement().max = \"100000\";\n\t\tthis.grassDensitySlider.getInputElement().value = options.grassDensity + \"\";\n\n\t\tthis.fpsDisplayCB = this.overlayRendering.getNewCheckbox();\n\t\tthis.fpsDisplayCB.position[0] = 0.4;\n\t\tthis.fpsDisplayCB.position[1] = 0.5;\n\t\tthis.fpsDisplayCB.textString = \"Fps counter \";\n\t\tthis.fpsDisplayCB.getInputElement().checked = options.showFps;\n\n\t\tthis.musicVolume = this.overlayRendering.getNewSlider();\n\t\tthis.musicVolume.position[0] = 0.4;\n\t\tthis.musicVolume.position[1] = 0.55;\n\t\tthis.musicVolume.textString = \"Music volume\";\n\t\tthis.musicVolume.getInputElement().min = \"0\";\n\t\tthis.musicVolume.getInputElement().max = \"100\";\n\t\tthis.musicVolume.getInputElement().value = options.musicVolume * 250 + \"\";\n\n\t\tthis.effectVolume = this.overlayRendering.getNewSlider();\n\t\tthis.effectVolume.position[0] = 0.4;\n\t\tthis.effectVolume.position[1] = 0.6;\n\t\tthis.effectVolume.textString = \"Effects volume\";\n\t\tthis.effectVolume.getInputElement().min = \"0\";\n\t\tthis.effectVolume.getInputElement().max = \"100\";\n\t\tthis.effectVolume.getInputElement().value = options.effectVolume * 250 + \"\";\n\n\t\tthis.controlsButton = this.overlayRendering.getNewButton();\n\t\tthis.controlsButton.position[0] = 0.5;\n\t\tthis.controlsButton.position[1] = 0.75;\n\t\tthis.controlsButton.center = true;\n\n\t\tthis.controlsButton.textString = \"Controls\";\n\n\t\tlet self = this;\n\t\tthis.controlsButton.onClick(function () {\n\t\t\tself.gotoState = StatesEnum.CONTROLS;\n\t\t});\n\n\t\tthis.backButton = this.overlayRendering.getNewButton();\n\t\tthis.backButton.position[0] = 0.5;\n\t\tthis.backButton.position[1] = 0.85;\n\t\tthis.backButton.center = true;\n\t\tthis.backButton.textString = \"Back to main menu\";\n\n\t\tthis.backButton.onClick(function () {\n\t\t\tself.gotoState = StatesEnum.MAINMENU;\n\t\t});\n\t}\n\n\tasync init() {\n\t\tthis.overlayRendering.show();\n\t}\n\n\treset() {\n\t\tthis.overlayRendering.hide();\n\t}\n\n\tupdate(dt: number) {\n\t\toptions.useCrt = this.crtCB.getChecked();\n\t\toptions.useBloom = this.bloomCB.getChecked();\n\t\toptions.foldableGrass = this.grassCB.getChecked();\n\t\toptions.showFps = this.fpsDisplayCB.getChecked();\n\t\toptions.grassDensity = this.grassDensitySlider.getValue();\n\t\toptions.musicVolume = this.musicVolume.getValue() * 0.004;\n\t\tthis.stateAccessible.audioPlayer.setMusicVolume(options.musicVolume);\n\t\toptions.effectVolume = this.effectVolume.getValue() * 0.004;\n\t\tthis.stateAccessible.audioPlayer.setSoundEffectVolume(options.effectVolume);\n\t}\n\n\tdraw() {\n\t\tthis.overlayRendering.draw();\n\t}\n}\n","import GameMachine from \"./Game/GameMachine\";\r\nimport { createGeometryPass } from \"./Engine/Rendering/ShaderPrograms/DeferredRendering/GeometryPass\";\r\nimport { createLightingPass } from \"./Engine/Rendering/ShaderPrograms/DeferredRendering/LightingPass\";\r\nimport { createParticleShaderProgram } from \"./Engine/Rendering/ShaderPrograms/ParticleShaderProgram\";\r\nimport { createGrassShaderProgram } from \"./Engine/Rendering/ShaderPrograms/GrassShaderProgram\";\r\nimport { createPhongShaderProgram } from \"./Engine/Rendering/ShaderPrograms/PhongShaderProgram\";\r\nimport { createBloomBlending } from \"./Engine/Rendering/ShaderPrograms/PostProcessing/BloomBlending\";\r\nimport { createBloomExtraction } from \"./Engine/Rendering/ShaderPrograms/PostProcessing/BloomExtraction\";\r\nimport { createCrtShaderProgram } from \"./Engine/Rendering/ShaderPrograms/PostProcessing/CrtShaderProgram\";\r\nimport { createGaussianBlur } from \"./Engine/Rendering/ShaderPrograms/PostProcessing/GaussianBlur\";\r\nimport { createScreenQuadShaderProgram } from \"./Engine/Rendering/ShaderPrograms/ScreenQuadShaderProgram\";\r\nimport { createShadowPass } from \"./Engine/Rendering/ShaderPrograms/ShadowMapping/ShadowPass\";\r\nimport { createSimpleShaderProgram } from \"./Engine/Rendering/ShaderPrograms/SimpleShaderProgram\";\r\nimport { createGrassShadowPass } from \"./Engine/Rendering/ShaderPrograms/ShadowMapping/GrassShadowPass\";\r\nimport { createSkyboxShaderProgram } from \"./Engine/Rendering/ShaderPrograms/Skybox/SkyboxShaderProgram\";\r\nimport { createBlurTransparency } from \"./Engine/Rendering/ShaderPrograms/PostProcessing/BlurTransparency\";\r\nimport { glMatrix } from \"gl-matrix\";\r\nimport { createPointShadowPass } from \"./Engine/Rendering/ShaderPrograms/ShadowMapping/PointShadowPass\";\r\nimport { createVolumetricGodRayShaderProgram } from \"./Engine/Rendering/ShaderPrograms/Volumetric/VolumetricGodRayShaderProgram\";\r\n\r\n// Globals\r\nexport let gl: WebGL2RenderingContext;\r\nexport let applicationStartTime = Date.now();\r\nexport let windowInfo = {\r\n\tresolutionWidth: 1920,\r\n\tresolutionHeight: 1080,\r\n\tpaddingX: 0,\r\n\tpaddingY: 0,\r\n};\r\n\r\nglMatrix.setMatrixArrayType(Array);\r\n\r\nfunction initWebGL(): WebGL2RenderingContext {\r\n\tlet canvas = <HTMLCanvasElement>document.getElementById(\"gameCanvas\");\r\n\tcanvas.width = windowInfo.resolutionWidth;\r\n\tcanvas.height = windowInfo.resolutionHeight;\r\n\r\n\tlet tempGl = canvas.getContext(\"webgl2\", { antialias: false });\r\n\tif (!tempGl.getExtension(\"EXT_color_buffer_float\")) {\r\n\t\talert(\r\n\t\t\t\"Rendering to floating point textures is not supported on this platform\"\r\n\t\t);\r\n\t}\r\n\tif (!tempGl.getExtension(\"OES_texture_float_linear\")) {\r\n\t\talert(\"Floating point rendering to FBO textures not supported\");\r\n\t}\r\n\r\n\tif (!tempGl) {\r\n\t\tconsole.log(\"Failed to get rendering context for WebGL\");\r\n\t\treturn;\r\n\t}\r\n\r\n\treturn tempGl;\r\n}\r\n\r\nconst heightByWidth = 9 / 16;\r\nconst widthByHeight = 16 / 9;\r\nconst gameDiv = document.getElementById(\"gameDiv\");\r\n\r\nfunction resize(gl: WebGL2RenderingContext) {\r\n\t// Get the dimensions of the viewport\r\n\tlet innerWindowSize = {\r\n\t\twidth: window.innerWidth,\r\n\t\theight: window.innerHeight,\r\n\t};\r\n\r\n\tlet newGameHeight;\r\n\tlet newGameWidth;\r\n\r\n\t// Determine game size\r\n\tif (heightByWidth > innerWindowSize.height / innerWindowSize.width) {\r\n\t\tnewGameHeight = innerWindowSize.height;\r\n\t\tnewGameWidth = newGameHeight * widthByHeight;\r\n\t} else {\r\n\t\tnewGameWidth = innerWindowSize.width;\r\n\t\tnewGameHeight = newGameWidth * heightByWidth;\r\n\t}\r\n\r\n\tlet newGameX = (innerWindowSize.width - newGameWidth) / 2;\r\n\tlet newGameY = (innerWindowSize.height - newGameHeight) / 2;\r\n\r\n\t// Center the game by setting the padding of the game\r\n\tgameDiv.style.padding = newGameY + \"px \" + newGameX + \"px\";\r\n\r\n\t// Resize game\r\n\tgameDiv.style.width = newGameWidth + \"px\";\r\n\tgameDiv.style.height = newGameHeight + \"px\";\r\n\tgl.canvas.width = newGameWidth; // This is not the same as style.width, so it won't be inherited by the css inherit property\r\n\tgl.canvas.height = newGameHeight; // This is not the same as style.height, so it won't be inherited by the css inherit property\r\n\r\n\t// Update the windowInfo resolution\r\n\twindowInfo.resolutionWidth = newGameWidth;\r\n\twindowInfo.resolutionHeight = newGameHeight;\r\n\twindowInfo.paddingX = newGameX;\r\n\twindowInfo.paddingY = newGameY;\r\n}\r\n\r\nfunction createShaders() {\r\n\tcreateGeometryPass();\r\n\tcreateLightingPass();\r\n\tcreateBloomBlending();\r\n\tcreateBloomExtraction();\r\n\tcreateCrtShaderProgram();\r\n\tcreateGaussianBlur();\r\n\tcreateBlurTransparency();\r\n\tcreateShadowPass();\r\n\tcreateGrassShadowPass();\r\n\tcreatePointShadowPass();\r\n\tcreateParticleShaderProgram();\r\n\tcreateGrassShaderProgram();\r\n\tcreatePhongShaderProgram();\r\n\tcreateScreenQuadShaderProgram();\r\n\tcreateSimpleShaderProgram();\r\n\tcreateSkyboxShaderProgram();\r\n\tcreateVolumetricGodRayShaderProgram();\r\n}\r\n\r\nlet gameMachine: GameMachine;\r\n\r\n/* main */\r\nwindow.onload = async () => {\r\n\t\"use strict\";\r\n\r\n\t// Set up webgl\r\n\tgl = initWebGL();\r\n\r\n\t// Create all shaders\r\n\tcreateShaders();\r\n\r\n\tgameMachine = new GameMachine();\r\n\r\n\t// Resize to fit the current window\r\n\tresize(gl);\r\n\r\n\t// Resize canvas in the future when window is resized\r\n\twindow.addEventListener(\"resize\", function () {\r\n\t\tresize(gl);\r\n\t});\r\n\r\n\twindow.addEventListener(\"beforeunload\", function (e: BeforeUnloadEvent) {\r\n\t\tgameMachine.onExit(e);\r\n\t});\r\n\r\n\twindow.addEventListener(\"contextmenu\", function (e: Event) {\r\n\t\te.preventDefault();\r\n\t});\r\n\r\n\t// Start the state machine\r\n\tgameMachine.start();\r\n};\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./code/index.ts\");\n",""],"names":[],"sourceRoot":""}