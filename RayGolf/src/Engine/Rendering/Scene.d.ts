import MeshStore from "../AssetHandling/MeshStore";
import TextureStore from "../AssetHandling/TextureStore";
import DirectionalLight from "./Lighting/DirectionalLight";
import PointLight from "./Lighting/PointLight";
import GraphicsBundle from "../Objects/GraphicsBundle";
import ParticleSpawner from "../Objects/GraphicsObjects/ParticleSpawner";
import Skybox from "../Objects/GraphicsObjects/Skybox";
import ShaderProgram from "./ShaderPrograms/ShaderProgram";
export default class Scene {
    private graphicBundles;
    private grassSpawners;
    directionalLight: DirectionalLight;
    pointLights: Array<PointLight>;
    particleSpawners: Array<ParticleSpawner>;
    skybox: Skybox;
    private textureStore;
    private meshStore;
    constructor(textureStore: TextureStore, meshStore: MeshStore);
    getNewPhongQuad(diffusePath: string, specularPath: string): GraphicsBundle;
    getNewMesh(meshPath: string, diffusePath: string, specularPath: string): GraphicsBundle;
    getNewHeightMap(heightmapPath: string, diffusePath: string, specularPath: string): GraphicsBundle;
    getNewParticleSpawner(texturePath: string, numberOfStartingParticles?: number): ParticleSpawner;
    getNewGrassSpawner(diffuseTexturePath: string, specularTexturePath: string, numberOfStartingParticles?: number): GraphicsBundle;
    getNewPointLight(): PointLight;
    getDirectionalLight(): DirectionalLight;
    deleteGraphicsBundle(object: GraphicsBundle): void;
    deletePointLight(light: PointLight): void;
    deleteParticleSpawner(particleSpawner: ParticleSpawner): void;
    renderScene(shaderProgram: ShaderProgram, bindSpecialTextures?: boolean): void;
    renderGrass(shaderProgram: ShaderProgram, bindSpecialTextures?: boolean): void;
}
